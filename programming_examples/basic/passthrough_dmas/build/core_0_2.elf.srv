
// File generated by darts version U-2022.12#3eec2545bc#230622, Mon Aug 12 16:41:50 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// darts -I/proj/xbuilds/2023.2_INT_1013_2256/installs/all_platforms/Vitis/2023.2/aietools/data/aie_ml/lib -d -h -I/proj/xbuilds/2023.2_INT_1013_2256/installs/all_platforms/Vitis/2023.2/aietools/data/aie_ml/lib/runtime_cxx/libcxx-lite/include -I/proj/xbuilds/2023.2_INT_1013_2256/installs/all_platforms/Vitis/2023.2/aietools/data/aie_ml/lib/runtime_cxx/libs/libcxx-9.0.0/include-lite -I/proj/xbuilds/2023.2_INT_1013_2256/installs/all_platforms/Vitis/2023.2/aietools/data/aie_ml/lib/runtime/include -I<BOOST_DIR> -D__AIENGINE__ -D__AIE_ARCH__=20 -D__AIEARCH__=20 -D__tct_tgt__=230622 -L +Ihex +nanno +u core_0_2.elf me

// Release: ipp U-2022.12-TGT-230622
.label __AIE_ARCH_MODEL_VERSION__20010300__inlined__1__me_basic___main_init_
.label _main_init
.function_start
	     0      "01000011" // 	                                                                                          MOVXM sp, #458752 /* MW 8 */
	     1      "00010000" // /* MW 7 */
	     2      "00000000" // /* MW 6 */
	     3      "00111000" // /* MW 5 */
	     4      "11000011" // /* MW 4 */
	     5      "00000001" // /* MW 3 */
	     6      "00000000" // /* MW 2 */
	     7      "00000000" // /* MW 1 */
	     8      "01010101" // 	                                                                                          MOVXM r16, #0 /* MW 6 */
	     9      "00000000" // /* MW 5 */
	    10      "00000000" // /* MW 4 */
	    11      "00001000" // /* MW 3 */
	    12      "00000000" // /* MW 2 */
	    13      "00000000" // /* MW 1 */
	    14      "01010101" // 	                                                                                          MOVXM r24, #0 /* MW 6 */
	    15      "00000000" // /* MW 5 */
	    16      "00000000" // /* MW 4 */
	    17      "00001100" // /* MW 3 */
	    18      "00000000" // /* MW 2 */
	    19      "00000000" // /* MW 1 */
	    20      "10011001" // 	                                                                                          EQ r24, r24, r16 /* MW 4 */
	    21      "00000111" // /* MW 3 */
	    22      "00110001" // /* MW 2 */
	    23      "00010110" // /* MW 1 */
	    24      "10010101" // 	                                                                                          JNZ r24, #128 /* MW 6 */
	    25      "00000001" // /* MW 5 */
	    26      "01000000" // /* MW 4 */
	    27      "01000000" // /* MW 3 */
	    28      "00000000" // /* MW 2 */
	    29      "11000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    30      "00000001" // 	NOPX /* MW 2 */
	    31      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    32      "00000001" // 	NOPX /* MW 2 */
	    33      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    34      "00000001" // 	NOPX /* MW 2 */
	    35      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    36      "00000001" // 	NOPX /* MW 2 */
	    37      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    38      "00000001" // 	NOPX /* MW 2 */
	    39      "00000000" // /* MW 1 */
	    40      "01010101" // 	                                                                                          MOVXM p6, #-4 /* MW 6 */
	    41      "11111000" // /* MW 5 */
	    42      "01111111" // /* MW 4 */
	    43      "11111100" // /* MW 3 */
	    44      "11111111" // /* MW 2 */
	    45      "11111111" // /* MW 1 */
	    46      "01011001" // 	                                                                                                                        MOV p7, p0 /* MW 4 */
	    47      "01110110" // /* MW 3 */
	    48      "00110000" // /* MW 2 */
	    49      "00011111" // /* MW 1 */
	    50      "00101111" // 	NOPA;                                                       NOPS;                                                       MOV r17, r1;                            NOPV /* MW 14 */
	    51      "01111000" // /* MW 13 */
	    52      "00000000" // /* MW 12 */
	    53      "00000000" // /* MW 11 */
	    54      "10110010" // /* MW 10 */
	    55      "00000100" // /* MW 9 */
	    56      "01100010" // /* MW 8 */
	    57      "00000000" // /* MW 7 */
	    58      "00000000" // /* MW 6 */
	    59      "00000000" // /* MW 5 */
	    60      "00000000" // /* MW 4 */
	    61      "00000000" // /* MW 3 */
	    62      "00000000" // /* MW 2 */
	    63      "00000000" // /* MW 1 */
.label TGT_F_main_init_64
.loop_nesting 1
	    64      "01001101" // 	LDA p0, [p6], #-4;                                                                                                      MOV r18, p6 /* MW 6 */
	    65      "01110110" // /* MW 5 */
	    66      "10001100" // /* MW 4 */
	    67      "11011100" // /* MW 3 */
	    68      "11110000" // /* MW 2 */
	    69      "11011111" // /* MW 1 */
	    70      "00000001" // 	NOPX /* MW 2 */
	    71      "00000000" // /* MW 1 */
	    72      "00000001" // 	NOPX /* MW 2 */
	    73      "00000000" // /* MW 1 */
	    74      "00000001" // 	NOPX /* MW 2 */
	    75      "00000000" // /* MW 1 */
	    76      "00000001" // 	NOPX /* MW 2 */
	    77      "00000000" // /* MW 1 */
	    78      "00000001" // 	NOPX /* MW 2 */
	    79      "00000000" // /* MW 1 */
	    80      "00000001" // 	NOPX /* MW 2 */
	    81      "00000000" // /* MW 1 */
.no_stack_arguments
	    82      "00011001" // 	                                                                                          JL p0 /* MW 4 */
	    83      "00010100" // /* MW 3 */
	    84      "00000000" // /* MW 2 */
	    85      "00010000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    86      "00000001" // 	NOPX /* MW 2 */
	    87      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    88      "00000001" // 	NOPX /* MW 2 */
	    89      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    90      "00000001" // 	NOPX /* MW 2 */
	    91      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    92      "00000001" // 	NOPX /* MW 2 */
	    93      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    94      "00000001" // 	NOPX /* MW 2 */
	    95      "00000000" // /* MW 1 */
.return_address
	    96      "10011001" // 	                                                                                          NE r24, r18, r16 /* MW 4 */
	    97      "00001000" // /* MW 3 */
	    98      "10110001" // /* MW 2 */
	    99      "00010100" // /* MW 1 */
	   100      "10010101" // 	                                                                                          JNZ r24, #64 /* MW 6 */
	   101      "00000001" // /* MW 5 */
	   102      "01000000" // /* MW 4 */
	   103      "00100000" // /* MW 3 */
	   104      "00000000" // /* MW 2 */
	   105      "11000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   106      "00000001" // 	NOPX /* MW 2 */
	   107      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   108      "00000001" // 	NOPX /* MW 2 */
	   109      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   110      "00000001" // 	NOPX /* MW 2 */
	   111      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   112      "00000001" // 	NOPX /* MW 2 */
	   113      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   114      "00000001" // 	NOPX /* MW 2 */
	   115      "00000000" // /* MW 1 */
.loop_nesting 0
	   116      "01011001" // 	                                                                                                                        MOV p0, p7 /* MW 4 */
	   117      "01110110" // /* MW 3 */
	   118      "00111110" // /* MW 2 */
	   119      "00011000" // /* MW 1 */
	   120      "00000011" // 	                                                            NOPS;                                                       MOV r1, r17 /* MW 8 */
	   121      "00100000" // /* MW 7 */
	   122      "01001011" // /* MW 6 */
	   123      "00100100" // /* MW 5 */
	   124      "00000000" // /* MW 4 */
	   125      "00000000" // /* MW 3 */
	   126      "00000000" // /* MW 2 */
	   127      "00000000" // /* MW 1 */
.label TGT_F_main_init_128
.no_stack_arguments
	   128      "00010101" // 	                                                                                          JL #224 /* MW 6 */
	   129      "00000001" // /* MW 5 */
	   130      "00000000" // /* MW 4 */
	   131      "01110000" // /* MW 3 */
	   132      "00000000" // /* MW 2 */
	   133      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   134      "00000001" // 	NOPX /* MW 2 */
	   135      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   136      "00000001" // 	NOPX /* MW 2 */
	   137      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   138      "00000001" // 	NOPX /* MW 2 */
	   139      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   140      "00000001" // 	NOPX /* MW 2 */
	   141      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   142      "00000001" // 	NOPX /* MW 2 */
	   143      "00000000" // /* MW 1 */
.return_address
.no_stack_arguments
	   144      "00010101" // 	                                                                                          JL #416 /* MW 6 */
	   145      "00000001" // /* MW 5 */
	   146      "00000000" // /* MW 4 */
	   147      "11010000" // /* MW 3 */
	   148      "00000000" // /* MW 2 */
	   149      "00000000" // /* MW 1 */
.delay_slot
	   150      "10011001" // 	                                                                                                                        MOV p0, #0 /* MW 4 */
	   151      "00000110" // /* MW 3 */
	   152      "00110000" // /* MW 2 */
	   153      "00011000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   154      "00000001" // 	NOPX /* MW 2 */
	   155      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   156      "00000001" // 	NOPX /* MW 2 */
	   157      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   158      "00000001" // 	NOPX /* MW 2 */
	   159      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   160      "11000000" // 	NOPA;                         NOPB;                         NOPS;                         NOPX;                         NOPM;                                   NOPV /* MW 16 */
	   161      "00000011" // /* MW 15 */
	   162      "00000000" // /* MW 14 */
	   163      "10001000" // /* MW 13 */
	   164      "00000011" // /* MW 12 */
	   165      "00000000" // /* MW 11 */
	   166      "00000000" // /* MW 10 */
	   167      "00000000" // /* MW 9 */
	   168      "00000000" // /* MW 8 */
	   169      "00000000" // /* MW 7 */
	   170      "00000000" // /* MW 6 */
	   171      "00000000" // /* MW 5 */
	   172      "00000000" // /* MW 4 */
	   173      "00000000" // /* MW 3 */
	   174      "00000000" // /* MW 2 */
	   175      "00000000" // /* MW 1 */
.return_address
.swstall chess_separator_scheduler
	   176      "00000001" // 	NOPX /* MW 2 */
	   177      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   178      "00000001" // 	NOPX /* MW 2 */
	   179      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   180      "00000001" // 	NOPX /* MW 2 */
	   181      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   182      "00000001" // 	NOPX /* MW 2 */
	   183      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   184      "00000001" // 	NOPX /* MW 2 */
	   185      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   186      "00000001" // 	NOPX /* MW 2 */
	   187      "00000000" // /* MW 1 */
	   188      "00011001" // 	                                                                                          DONE /* MW 4 */
	   189      "00001000" // /* MW 3 */
	   190      "00000000" // /* MW 2 */
	   191      "00010000" // /* MW 1 */
.swstall chess_separator_scheduler
	   192      "00000001" // 	NOPX /* MW 2 */
	   193      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   194      "00000001" // 	NOPX /* MW 2 */
	   195      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   196      "00000001" // 	NOPX /* MW 2 */
	   197      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   198      "00000001" // 	NOPX /* MW 2 */
	   199      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   200      "00000001" // 	NOPX /* MW 2 */
	   201      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   202      "00000001" // 	NOPX /* MW 2 */
	   203      "00000000" // /* MW 1 */
.swstall for_chess_exit
.exit
	   204      "00011001" // 	NOPA /* MW 4 */
	   205      "00000000" // /* MW 3 */
	   206      "00000000" // /* MW 2 */
	   207      "00000000" // /* MW 1 */
.label TGT_F_main_init_208
.loop_nesting 1
	   208      "10010101" // 	                                                                                          J #208 /* MW 6 */
	   209      "00000000" // /* MW 5 */
	   210      "00000000" // /* MW 4 */
	   211      "01101000" // /* MW 3 */
	   212      "00000000" // /* MW 2 */
	   213      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   214      "00000001" // 	NOPX /* MW 2 */
	   215      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   216      "00000001" // 	NOPX /* MW 2 */
	   217      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   218      "00000001" // 	NOPX /* MW 2 */
	   219      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   220      "00000001" // 	NOPX /* MW 2 */
	   221      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   222      "00000001" // 	NOPX /* MW 2 */
.label _main_init__end
	   223      "00000000" // /* MW 1 */
.label core_0_2
.function_start
	   224      "00011001" // 	                                                                                          RET lr /* MW 4 */
	   225      "00011000" // /* MW 3 */
	   226      "00000000" // /* MW 2 */
	   227      "00010000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   228      "00000001" // 	NOPX /* MW 2 */
	   229      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   230      "00000001" // 	NOPX /* MW 2 */
	   231      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   232      "00000001" // 	NOPX /* MW 2 */
	   233      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   234      "00000001" // 	NOPX /* MW 2 */
	   235      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   236      "00011001" // 	NOPA /* MW 4 */
	   237      "00000000" // /* MW 3 */
	   238      "00000000" // /* MW 2 */
.label core_0_2__end
	   239      "00000000" // /* MW 1 */
.label _fini
.function_start
	   240      "01011001" // 	                                                                                                                        MOV r0, r23 /* MW 4 */
	   241      "10010110" // /* MW 3 */
	   242      "00001011" // /* MW 2 */
	   243      "00011000" // /* MW 1 */
	   244      "01010101" // 	                                                                                          MOVXM r24, #0 /* MW 6 */
	   245      "00000000" // /* MW 5 */
	   246      "00000000" // /* MW 4 */
	   247      "00001100" // /* MW 3 */
	   248      "00000000" // /* MW 2 */
	   249      "00000000" // /* MW 1 */
	   250      "01011001" // 	                                                                                                                        MOV p0, p7 /* MW 4 */
	   251      "01110110" // /* MW 3 */
	   252      "00111110" // /* MW 2 */
	   253      "00011000" // /* MW 1 */
	   254      "01010101" // 	                                                                                          MOVXM r23, #0 /* MW 6 */
	   255      "00000000" // /* MW 5 */
	   256      "10000000" // /* MW 4 */
	   257      "00001011" // /* MW 3 */
	   258      "00000000" // /* MW 2 */
	   259      "00000000" // /* MW 1 */
	   260      "01000011" // 	                                                                                          EQ r24, r23, r24;             MOV p7, r24 /* MW 8 */
	   261      "00101000" // /* MW 7 */
	   262      "00001011" // /* MW 6 */
	   263      "10011110" // /* MW 5 */
	   264      "00111111" // /* MW 4 */
	   265      "10001100" // /* MW 3 */
	   266      "00101111" // /* MW 2 */
	   267      "00000000" // /* MW 1 */
	   268      "10010101" // 	                                                                                          JNZ r24, #368 /* MW 6 */
	   269      "00000001" // /* MW 5 */
	   270      "01000000" // /* MW 4 */
	   271      "10111000" // /* MW 3 */
	   272      "00000000" // /* MW 2 */
	   273      "11000000" // /* MW 1 */
.delay_slot
	   274      "00011001" // 	                              PADDB [sp], #32 /* MW 4 */
	   275      "00100000" // /* MW 3 */
	   276      "00000011" // /* MW 2 */
	   277      "00111000" // /* MW 1 */
.delay_slot
	   278      "00011001" // 	                                                            ST r22, [sp, #-4] /* MW 4 */
	   279      "11101100" // /* MW 3 */
	   280      "11111111" // /* MW 2 */
	   281      "00001111" // /* MW 1 */
.delay_slot
	   282      "10011001" // 	                                                            ST lr, [sp, #-16] /* MW 4 */
	   283      "01000010" // /* MW 3 */
	   284      "11111110" // /* MW 2 */
	   285      "00001111" // /* MW 1 */
.delay_slot
	   286      "00011001" // 	                                                            ST r0, [sp, #-12] /* MW 4 */
	   287      "11000000" // /* MW 3 */
	   288      "11111110" // /* MW 2 */
	   289      "00001111" // /* MW 1 */
.delay_slot
	   290      "00101111" // 	NOPA;                                                       ST p0, [sp, #-8];                                           NOPM;                                   NOPV /* MW 14 */
	   291      "01111000" // /* MW 13 */
	   292      "00000000" // /* MW 12 */
	   293      "00000000" // /* MW 11 */
	   294      "00111000" // /* MW 10 */
	   295      "00000000" // /* MW 9 */
	   296      "01000000" // /* MW 8 */
	   297      "00000000" // /* MW 7 */
	   298      "10000000" // /* MW 6 */
	   299      "01000110" // /* MW 5 */
	   300      "11111111" // /* MW 4 */
	   301      "00000111" // /* MW 3 */
	   302      "00000000" // /* MW 2 */
	   303      "00000000" // /* MW 1 */
.label TGT_F_fini_64
.loop_nesting 1
	   304      "11011001" // 	LDA p0, [p7], #4 /* MW 4 */
	   305      "10000110" // /* MW 3 */
	   306      "00000011" // /* MW 2 */
	   307      "00000111" // /* MW 1 */
	   308      "00000001" // 	NOPX /* MW 2 */
	   309      "00000000" // /* MW 1 */
	   310      "00000001" // 	NOPX /* MW 2 */
	   311      "00000000" // /* MW 1 */
	   312      "00000001" // 	NOPX /* MW 2 */
	   313      "00000000" // /* MW 1 */
	   314      "00000001" // 	NOPX /* MW 2 */
	   315      "00000000" // /* MW 1 */
	   316      "00000001" // 	NOPX /* MW 2 */
	   317      "00000000" // /* MW 1 */
	   318      "00000001" // 	NOPX /* MW 2 */
	   319      "00000000" // /* MW 1 */
.no_stack_arguments
	   320      "00011001" // 	                                                                                          JL p0 /* MW 4 */
	   321      "00010100" // /* MW 3 */
	   322      "00000000" // /* MW 2 */
	   323      "00010000" // /* MW 1 */
.delay_slot
	   324      "01011001" // 	                                                                                                                        MOV r22, p7 /* MW 4 */
	   325      "01110110" // /* MW 3 */
	   326      "10001110" // /* MW 2 */
	   327      "00011101" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   328      "00000001" // 	NOPX /* MW 2 */
	   329      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   330      "00000001" // 	NOPX /* MW 2 */
	   331      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   332      "00000001" // 	NOPX /* MW 2 */
	   333      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   334      "00000001" // 	NOPX /* MW 2 */
	   335      "00000000" // /* MW 1 */
.return_address
	   336      "10011001" // 	                                                                                          NE r24, r23, r22 /* MW 4 */
	   337      "01101000" // /* MW 3 */
	   338      "11110001" // /* MW 2 */
	   339      "00010101" // /* MW 1 */
	   340      "10010101" // 	                                                                                          JNZ r24, #304 /* MW 6 */
	   341      "00000001" // /* MW 5 */
	   342      "01000000" // /* MW 4 */
	   343      "10011000" // /* MW 3 */
	   344      "00000000" // /* MW 2 */
	   345      "11000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   346      "00000001" // 	NOPX /* MW 2 */
	   347      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   348      "00000001" // 	NOPX /* MW 2 */
	   349      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   350      "00000001" // 	NOPX /* MW 2 */
	   351      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   352      "00000001" // 	NOPX /* MW 2 */
	   353      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   354      "00101111" // 	NOPA;                                                       NOPS;                                                       NOPM;                                   NOPV /* MW 14 */
	   355      "01111000" // /* MW 13 */
	   356      "00000000" // /* MW 12 */
	   357      "00000000" // /* MW 11 */
	   358      "00111000" // /* MW 10 */
	   359      "00000000" // /* MW 9 */
	   360      "01000000" // /* MW 8 */
	   361      "00000000" // /* MW 7 */
	   362      "00000000" // /* MW 6 */
	   363      "00000000" // /* MW 5 */
	   364      "00000000" // /* MW 4 */
	   365      "00000000" // /* MW 3 */
	   366      "00000000" // /* MW 2 */
	   367      "00000000" // /* MW 1 */
.label TGT_F_fini_128
.loop_nesting 0
	   368      "11011001" // 	LDA lr, [sp, #-16] /* MW 4 */
	   369      "01000010" // /* MW 3 */
	   370      "11111110" // /* MW 2 */
	   371      "00000111" // /* MW 1 */
	   372      "01011001" // 	LDA r23, [sp, #-12] /* MW 4 */
	   373      "11101110" // /* MW 3 */
	   374      "11111110" // /* MW 2 */
	   375      "00000111" // /* MW 1 */
	   376      "01011001" // 	LDA r22, [sp, #-4] /* MW 4 */
	   377      "11101100" // /* MW 3 */
	   378      "11111111" // /* MW 2 */
	   379      "00000111" // /* MW 1 */
	   380      "11011001" // 	LDA p7, [sp, #-8] /* MW 4 */
	   381      "01111110" // /* MW 3 */
	   382      "11111111" // /* MW 2 */
	   383      "00000111" // /* MW 1 */
	   384      "00000001" // 	NOPX /* MW 2 */
	   385      "00000000" // /* MW 1 */
	   386      "00000001" // 	NOPX /* MW 2 */
	   387      "00000000" // /* MW 1 */
	   388      "00000001" // 	NOPX /* MW 2 */
	   389      "00000000" // /* MW 1 */
	   390      "00011001" // 	                                                                                          RET lr /* MW 4 */
	   391      "00011000" // /* MW 3 */
	   392      "00000000" // /* MW 2 */
	   393      "00010000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   394      "00000001" // 	NOPX /* MW 2 */
	   395      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   396      "00000001" // 	NOPX /* MW 2 */
	   397      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   398      "00000001" // 	NOPX /* MW 2 */
	   399      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   400      "00000001" // 	NOPX /* MW 2 */
	   401      "00000000" // /* MW 1 */
.delay_slot
	   402      "01111111" // 	NOPA;                         PADDB [sp], #-32;             NOPS;                         NOPX;                         NOPM /* MW 14 */
	   403      "00000000" // /* MW 13 */
	   404      "00000000" // /* MW 12 */
	   405      "00000000" // /* MW 11 */
	   406      "01110001" // /* MW 10 */
	   407      "00000000" // /* MW 9 */
	   408      "00000000" // /* MW 8 */
	   409      "00000000" // /* MW 7 */
	   410      "00000000" // /* MW 6 */
	   411      "11100000" // /* MW 5 */
	   412      "11111111" // /* MW 4 */
	   413      "00000111" // /* MW 3 */
	   414      "00000000" // /* MW 2 */
.label _fini__end
	   415      "00000000" // /* MW 1 */
.label __cxa_finalize
.function_start
	   416      "10111011" // 	MOVA r1, #8;                                                                              MOVXM p0, #463904 /* MW 10 */
	   417      "00010000" // /* MW 9 */
	   418      "00010000" // /* MW 8 */
	   419      "00011010" // /* MW 7 */
	   420      "11000100" // /* MW 6 */
	   421      "00000001" // /* MW 5 */
	   422      "00000000" // /* MW 4 */
	   423      "01001000" // /* MW 3 */
	   424      "00000000" // /* MW 2 */
	   425      "00000001" // /* MW 1 */
	   426      "10111011" // 	LDA r3, [p0, #0];                                                                         MOVXM r2, #463872 /* MW 10 */
	   427      "00010000" // /* MW 9 */
	   428      "00000000" // /* MW 8 */
	   429      "01000010" // /* MW 7 */
	   430      "11000100" // /* MW 6 */
	   431      "00000001" // /* MW 5 */
	   432      "00000000" // /* MW 4 */
	   433      "11001000" // /* MW 3 */
	   434      "01010000" // /* MW 2 */
	   435      "00000000" // /* MW 1 */
	   436      "00111011" // 	                                                            ST r1, [p0, #0];              MOVX r1, #-3;                 MOV r17, crSat /* MW 10 */
	   437      "00101001" // /* MW 9 */
	   438      "10011011" // /* MW 8 */
	   439      "00100100" // /* MW 7 */
	   440      "10101010" // /* MW 6 */
	   441      "00010111" // /* MW 5 */
	   442      "00111110" // /* MW 4 */
	   443      "01000000" // /* MW 3 */
	   444      "01010000" // /* MW 2 */
	   445      "00000000" // /* MW 1 */
	   446      "01011001" // 	                                                                                                                        MOV r16, crRnd /* MW 4 */
	   447      "00110110" // /* MW 3 */
	   448      "00000110" // /* MW 2 */
	   449      "00011100" // /* MW 1 */
	   450      "01011001" // 	                                                                                                                        MOV r18, lr /* MW 4 */
	   451      "11110110" // /* MW 3 */
	   452      "10000100" // /* MW 2 */
	   453      "00011100" // /* MW 1 */
	   454      "01010101" // 	                                                                                          MOVXM p6, #480 /* MW 6 */
	   455      "11000000" // /* MW 5 */
	   456      "01100011" // /* MW 4 */
	   457      "00001100" // /* MW 3 */
	   458      "00000000" // /* MW 2 */
	   459      "00000000" // /* MW 1 */
	   460      "00000001" // 	NOPX /* MW 2 */
	   461      "00000000" // /* MW 1 */
	   462      "00000001" // 	NOPX /* MW 2 */
	   463      "00000000" // /* MW 1 */
	   464      "01111001" // 	                                                                                                                        ADD.NC r3, r3, #-8 /* MW 4 */
	   465      "11110110" // /* MW 3 */
	   466      "11000001" // /* MW 2 */
	   467      "00011000" // /* MW 1 */
	   468      "10011001" // 	                                                                                          ADD r2, r3, r2 /* MW 4 */
	   469      "00100000" // /* MW 3 */
	   470      "11000100" // /* MW 2 */
	   471      "00010000" // /* MW 1 */
	   472      "01000011" // 	                                                                                          ASHL r19, r3, r1;             MOV p7, r2 /* MW 8 */
	   473      "00101000" // /* MW 7 */
	   474      "10001011" // /* MW 6 */
	   475      "10011000" // /* MW 5 */
	   476      "11110111" // /* MW 4 */
	   477      "00110000" // /* MW 3 */
	   478      "00000111" // /* MW 2 */
	   479      "00000000" // /* MW 1 */
.label TGT_F__cxa_finalize_64
.loop_nesting 1
	   480      "11011001" // 	LDA p1, [p7], #4 /* MW 4 */
	   481      "10001110" // /* MW 3 */
	   482      "00000011" // /* MW 2 */
	   483      "00000111" // /* MW 1 */
	   484      "11011001" // 	LDA p0, [p7], #-12 /* MW 4 */
	   485      "10000110" // /* MW 3 */
	   486      "11111011" // /* MW 2 */
	   487      "00000111" // /* MW 1 */
	   488      "00000001" // 	NOPX /* MW 2 */
	   489      "00000000" // /* MW 1 */
	   490      "00000001" // 	NOPX /* MW 2 */
	   491      "00000000" // /* MW 1 */
	   492      "00000001" // 	NOPX /* MW 2 */
	   493      "00000000" // /* MW 1 */
	   494      "00000001" // 	NOPX /* MW 2 */
	   495      "00000000" // /* MW 1 */
	   496      "00000001" // 	NOPX /* MW 2 */
	   497      "00000000" // /* MW 1 */
.no_stack_arguments
	   498      "00011001" // 	                                                                                          JL p1 /* MW 4 */
	   499      "01010100" // /* MW 3 */
	   500      "00000000" // /* MW 2 */
	   501      "00010000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   502      "00000001" // 	NOPX /* MW 2 */
	   503      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   504      "00000001" // 	NOPX /* MW 2 */
	   505      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   506      "00000001" // 	NOPX /* MW 2 */
	   507      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   508      "00011001" // 	NOPA /* MW 4 */
	   509      "00000000" // /* MW 3 */
	   510      "00000000" // /* MW 2 */
	   511      "00000000" // /* MW 1 */
.delay_slot
	   512      "11000000" // 	NOPA;                         NOPB;                         NOPS;                         NOPX;                         MOV r20, r0;                            NOPV /* MW 16 */
	   513      "00000011" // /* MW 15 */
	   514      "00000000" // /* MW 14 */
	   515      "00101000" // /* MW 13 */
	   516      "00001011" // /* MW 12 */
	   517      "10000000" // /* MW 11 */
	   518      "00000010" // /* MW 10 */
	   519      "00000000" // /* MW 9 */
	   520      "00000000" // /* MW 8 */
	   521      "00000000" // /* MW 7 */
	   522      "00000000" // /* MW 6 */
	   523      "00000000" // /* MW 5 */
	   524      "00000000" // /* MW 4 */
	   525      "00000000" // /* MW 3 */
	   526      "00000000" // /* MW 2 */
	   527      "00000000" // /* MW 1 */
.return_address
	   528      "00011001" // 	                                                                                          JNZD r19, r19, p6 /* MW 4 */
	   529      "10001100" // /* MW 3 */
	   530      "11100111" // /* MW 2 */
	   531      "00010100" // /* MW 1 */
.delay_slot
	   532      "01011001" // 	                                                                                                                        MOV r0, r20 /* MW 4 */
	   533      "00010110" // /* MW 3 */
	   534      "00001010" // /* MW 2 */
	   535      "00011000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   536      "00000001" // 	NOPX /* MW 2 */
	   537      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   538      "00000001" // 	NOPX /* MW 2 */
	   539      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   540      "00000001" // 	NOPX /* MW 2 */
	   541      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   542      "00000001" // 	NOPX /* MW 2 */
	   543      "00000000" // /* MW 1 */
.loop_nesting 0
	   544      "01011001" // 	                                                                                                                        MOV lr, r18 /* MW 4 */
	   545      "00010110" // /* MW 3 */
	   546      "01111001" // /* MW 2 */
	   547      "00011010" // /* MW 1 */
	   548      "00011001" // 	                                                                                          RET lr /* MW 4 */
	   549      "00011000" // /* MW 3 */
	   550      "00000000" // /* MW 2 */
	   551      "00010000" // /* MW 1 */
.delay_slot
	   552      "01000011" // 	                                                                                          MOVX crSat, r17;              MOV crRnd, r16 /* MW 8 */
	   553      "00101000" // /* MW 7 */
	   554      "00001011" // /* MW 6 */
	   555      "10001100" // /* MW 5 */
	   556      "00000001" // /* MW 4 */
	   557      "00100001" // /* MW 3 */
	   558      "00100011" // /* MW 2 */
	   559      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   560      "00000001" // 	NOPX /* MW 2 */
	   561      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   562      "00000001" // 	NOPX /* MW 2 */
	   563      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   564      "00000001" // 	NOPX /* MW 2 */
	   565      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   566      "10111011" // 	NOPA;                         NOPB;                                                                                     NOPM /* MW 10 */
	   567      "10001110" // /* MW 9 */
	   568      "00000011" // /* MW 8 */
	   569      "00000000" // /* MW 7 */
	   570      "00000000" // /* MW 6 */
	   571      "00000000" // /* MW 5 */
	   572      "00000000" // /* MW 4 */
	   573      "00000000" // /* MW 3 */
	   574      "00000000" // /* MW 2 */
.label __cxa_finalize__end
	   575      "00000000" // /* MW 1 */
