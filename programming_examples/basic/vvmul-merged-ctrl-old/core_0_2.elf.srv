
// File generated by darts version U-2022.12#3eec2545bc#230622, Mon Sep 16 15:37:43 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// darts -I/proj/xbuilds/2023.2_INT_1013_2256/installs/all_platforms/Vitis/2023.2/aietools/data/aie_ml/lib -d -h -I/proj/xbuilds/2023.2_INT_1013_2256/installs/all_platforms/Vitis/2023.2/aietools/data/aie_ml/lib/runtime_cxx/libcxx-lite/include -I/proj/xbuilds/2023.2_INT_1013_2256/installs/all_platforms/Vitis/2023.2/aietools/data/aie_ml/lib/runtime_cxx/libs/libcxx-9.0.0/include-lite -I/proj/xbuilds/2023.2_INT_1013_2256/installs/all_platforms/Vitis/2023.2/aietools/data/aie_ml/lib/runtime/include -I<BOOST_DIR> -D__AIENGINE__ -D__AIE_ARCH__=20 -D__AIEARCH__=20 -D__tct_tgt__=230622 -L +Ihex +nanno +u core_0_2.elf me

// Release: ipp U-2022.12-TGT-230622
.label __AIE_ARCH_MODEL_VERSION__20010300__inlined__1__me_basic___main_init_
.label _main_init
.function_start
	     0      "01000011" // 	                                                                                          MOVXM sp, #458752 /* MW 8 */
	     1      "00010000" // /* MW 7 */
	     2      "00000000" // /* MW 6 */
	     3      "00111000" // /* MW 5 */
	     4      "11000011" // /* MW 4 */
	     5      "00000001" // /* MW 3 */
	     6      "00000000" // /* MW 2 */
	     7      "00000000" // /* MW 1 */
	     8      "01010101" // 	                                                                                          MOVXM r16, #0 /* MW 6 */
	     9      "00000000" // /* MW 5 */
	    10      "00000000" // /* MW 4 */
	    11      "00001000" // /* MW 3 */
	    12      "00000000" // /* MW 2 */
	    13      "00000000" // /* MW 1 */
	    14      "01010101" // 	                                                                                          MOVXM r24, #0 /* MW 6 */
	    15      "00000000" // /* MW 5 */
	    16      "00000000" // /* MW 4 */
	    17      "00001100" // /* MW 3 */
	    18      "00000000" // /* MW 2 */
	    19      "00000000" // /* MW 1 */
	    20      "10011001" // 	                                                                                          EQ r24, r24, r16 /* MW 4 */
	    21      "00000111" // /* MW 3 */
	    22      "00110001" // /* MW 2 */
	    23      "00010110" // /* MW 1 */
	    24      "10010101" // 	                                                                                          JNZ r24, #128 /* MW 6 */
	    25      "00000001" // /* MW 5 */
	    26      "01000000" // /* MW 4 */
	    27      "01000000" // /* MW 3 */
	    28      "00000000" // /* MW 2 */
	    29      "11000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    30      "00000001" // 	NOPX /* MW 2 */
	    31      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    32      "00000001" // 	NOPX /* MW 2 */
	    33      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    34      "00000001" // 	NOPX /* MW 2 */
	    35      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    36      "00000001" // 	NOPX /* MW 2 */
	    37      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    38      "00000001" // 	NOPX /* MW 2 */
	    39      "00000000" // /* MW 1 */
	    40      "01010101" // 	                                                                                          MOVXM p6, #-4 /* MW 6 */
	    41      "11111000" // /* MW 5 */
	    42      "01111111" // /* MW 4 */
	    43      "11111100" // /* MW 3 */
	    44      "11111111" // /* MW 2 */
	    45      "11111111" // /* MW 1 */
	    46      "01011001" // 	                                                                                                                        MOV p7, p0 /* MW 4 */
	    47      "01110110" // /* MW 3 */
	    48      "00110000" // /* MW 2 */
	    49      "00011111" // /* MW 1 */
	    50      "00101111" // 	NOPA;                                                       NOPS;                                                       MOV r17, r1;                            NOPV /* MW 14 */
	    51      "01111000" // /* MW 13 */
	    52      "00000000" // /* MW 12 */
	    53      "00000000" // /* MW 11 */
	    54      "10110010" // /* MW 10 */
	    55      "00000100" // /* MW 9 */
	    56      "01100010" // /* MW 8 */
	    57      "00000000" // /* MW 7 */
	    58      "00000000" // /* MW 6 */
	    59      "00000000" // /* MW 5 */
	    60      "00000000" // /* MW 4 */
	    61      "00000000" // /* MW 3 */
	    62      "00000000" // /* MW 2 */
	    63      "00000000" // /* MW 1 */
.label TGT_F_main_init_64
.loop_nesting 1
	    64      "01001101" // 	LDA p0, [p6], #-4;                                                                                                      MOV r18, p6 /* MW 6 */
	    65      "01110110" // /* MW 5 */
	    66      "10001100" // /* MW 4 */
	    67      "11011100" // /* MW 3 */
	    68      "11110000" // /* MW 2 */
	    69      "11011111" // /* MW 1 */
	    70      "00000001" // 	NOPX /* MW 2 */
	    71      "00000000" // /* MW 1 */
	    72      "00000001" // 	NOPX /* MW 2 */
	    73      "00000000" // /* MW 1 */
	    74      "00000001" // 	NOPX /* MW 2 */
	    75      "00000000" // /* MW 1 */
	    76      "00000001" // 	NOPX /* MW 2 */
	    77      "00000000" // /* MW 1 */
	    78      "00000001" // 	NOPX /* MW 2 */
	    79      "00000000" // /* MW 1 */
	    80      "00000001" // 	NOPX /* MW 2 */
	    81      "00000000" // /* MW 1 */
.no_stack_arguments
	    82      "00011001" // 	                                                                                          JL p0 /* MW 4 */
	    83      "00010100" // /* MW 3 */
	    84      "00000000" // /* MW 2 */
	    85      "00010000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    86      "00000001" // 	NOPX /* MW 2 */
	    87      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    88      "00000001" // 	NOPX /* MW 2 */
	    89      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    90      "00000001" // 	NOPX /* MW 2 */
	    91      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    92      "00000001" // 	NOPX /* MW 2 */
	    93      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    94      "00000001" // 	NOPX /* MW 2 */
	    95      "00000000" // /* MW 1 */
.return_address
	    96      "10011001" // 	                                                                                          NE r24, r18, r16 /* MW 4 */
	    97      "00001000" // /* MW 3 */
	    98      "10110001" // /* MW 2 */
	    99      "00010100" // /* MW 1 */
	   100      "10010101" // 	                                                                                          JNZ r24, #64 /* MW 6 */
	   101      "00000001" // /* MW 5 */
	   102      "01000000" // /* MW 4 */
	   103      "00100000" // /* MW 3 */
	   104      "00000000" // /* MW 2 */
	   105      "11000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   106      "00000001" // 	NOPX /* MW 2 */
	   107      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   108      "00000001" // 	NOPX /* MW 2 */
	   109      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   110      "00000001" // 	NOPX /* MW 2 */
	   111      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   112      "00000001" // 	NOPX /* MW 2 */
	   113      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   114      "00000001" // 	NOPX /* MW 2 */
	   115      "00000000" // /* MW 1 */
.loop_nesting 0
	   116      "01011001" // 	                                                                                                                        MOV p0, p7 /* MW 4 */
	   117      "01110110" // /* MW 3 */
	   118      "00111110" // /* MW 2 */
	   119      "00011000" // /* MW 1 */
	   120      "00000011" // 	                                                            NOPS;                                                       MOV r1, r17 /* MW 8 */
	   121      "00100000" // /* MW 7 */
	   122      "01001011" // /* MW 6 */
	   123      "00100100" // /* MW 5 */
	   124      "00000000" // /* MW 4 */
	   125      "00000000" // /* MW 3 */
	   126      "00000000" // /* MW 2 */
	   127      "00000000" // /* MW 1 */
.label TGT_F_main_init_128
.no_stack_arguments
	   128      "00010101" // 	                                                                                          JL #224 /* MW 6 */
	   129      "00000001" // /* MW 5 */
	   130      "00000000" // /* MW 4 */
	   131      "01110000" // /* MW 3 */
	   132      "00000000" // /* MW 2 */
	   133      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   134      "00000001" // 	NOPX /* MW 2 */
	   135      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   136      "00000001" // 	NOPX /* MW 2 */
	   137      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   138      "00000001" // 	NOPX /* MW 2 */
	   139      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   140      "00000001" // 	NOPX /* MW 2 */
	   141      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   142      "00000001" // 	NOPX /* MW 2 */
	   143      "00000000" // /* MW 1 */
.return_address
.no_stack_arguments
	   144      "00010101" // 	                                                                                          JL #784 /* MW 6 */
	   145      "00000001" // /* MW 5 */
	   146      "00000000" // /* MW 4 */
	   147      "10001000" // /* MW 3 */
	   148      "00000001" // /* MW 2 */
	   149      "00000000" // /* MW 1 */
.delay_slot
	   150      "10011001" // 	                                                                                                                        MOV p0, #0 /* MW 4 */
	   151      "00000110" // /* MW 3 */
	   152      "00110000" // /* MW 2 */
	   153      "00011000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   154      "00000001" // 	NOPX /* MW 2 */
	   155      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   156      "00000001" // 	NOPX /* MW 2 */
	   157      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   158      "00000001" // 	NOPX /* MW 2 */
	   159      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   160      "11000000" // 	NOPA;                         NOPB;                         NOPS;                         NOPX;                         NOPM;                                   NOPV /* MW 16 */
	   161      "00000011" // /* MW 15 */
	   162      "00000000" // /* MW 14 */
	   163      "10001000" // /* MW 13 */
	   164      "00000011" // /* MW 12 */
	   165      "00000000" // /* MW 11 */
	   166      "00000000" // /* MW 10 */
	   167      "00000000" // /* MW 9 */
	   168      "00000000" // /* MW 8 */
	   169      "00000000" // /* MW 7 */
	   170      "00000000" // /* MW 6 */
	   171      "00000000" // /* MW 5 */
	   172      "00000000" // /* MW 4 */
	   173      "00000000" // /* MW 3 */
	   174      "00000000" // /* MW 2 */
	   175      "00000000" // /* MW 1 */
.return_address
.swstall chess_separator_scheduler
	   176      "00000001" // 	NOPX /* MW 2 */
	   177      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   178      "00000001" // 	NOPX /* MW 2 */
	   179      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   180      "00000001" // 	NOPX /* MW 2 */
	   181      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   182      "00000001" // 	NOPX /* MW 2 */
	   183      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   184      "00000001" // 	NOPX /* MW 2 */
	   185      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   186      "00000001" // 	NOPX /* MW 2 */
	   187      "00000000" // /* MW 1 */
	   188      "00011001" // 	                                                                                          DONE /* MW 4 */
	   189      "00001000" // /* MW 3 */
	   190      "00000000" // /* MW 2 */
	   191      "00010000" // /* MW 1 */
.swstall chess_separator_scheduler
	   192      "00000001" // 	NOPX /* MW 2 */
	   193      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   194      "00000001" // 	NOPX /* MW 2 */
	   195      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   196      "00000001" // 	NOPX /* MW 2 */
	   197      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   198      "00000001" // 	NOPX /* MW 2 */
	   199      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   200      "00000001" // 	NOPX /* MW 2 */
	   201      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   202      "00000001" // 	NOPX /* MW 2 */
	   203      "00000000" // /* MW 1 */
.swstall for_chess_exit
.exit
	   204      "00011001" // 	NOPA /* MW 4 */
	   205      "00000000" // /* MW 3 */
	   206      "00000000" // /* MW 2 */
	   207      "00000000" // /* MW 1 */
.label TGT_F_main_init_208
.loop_nesting 1
	   208      "10010101" // 	                                                                                          J #208 /* MW 6 */
	   209      "00000000" // /* MW 5 */
	   210      "00000000" // /* MW 4 */
	   211      "01101000" // /* MW 3 */
	   212      "00000000" // /* MW 2 */
	   213      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   214      "00000001" // 	NOPX /* MW 2 */
	   215      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   216      "00000001" // 	NOPX /* MW 2 */
	   217      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   218      "00000001" // 	NOPX /* MW 2 */
	   219      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   220      "00000001" // 	NOPX /* MW 2 */
	   221      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   222      "00000001" // 	NOPX /* MW 2 */
.label _main_init__end
	   223      "00000000" // /* MW 1 */
.label core_0_2
.function_start
	   224      "00011001" // 	                              PADDB [sp], #32 /* MW 4 */
	   225      "00100000" // /* MW 3 */
	   226      "00000011" // /* MW 2 */
	   227      "00111000" // /* MW 1 */
	   228      "10011001" // 	                                                            ST lr, [sp, #-4] /* MW 4 */
	   229      "11000010" // /* MW 3 */
	   230      "11111111" // /* MW 2 */
	   231      "00001111" // /* MW 1 */
.no_stack_arguments
	   232      "00010101" // 	                                                                                          JL #544 /* MW 6 */
	   233      "00000001" // /* MW 5 */
	   234      "00000000" // /* MW 4 */
	   235      "00010000" // /* MW 3 */
	   236      "00000001" // /* MW 2 */
	   237      "00000000" // /* MW 1 */
.delay_slot
	   238      "01000011" // 	                                                                                          MOVX r1, #-1;                 MOV r0, #49 /* MW 8 */
	   239      "11001000" // /* MW 7 */
	   240      "01100011" // /* MW 6 */
	   241      "00000000" // /* MW 5 */
	   242      "11101000" // /* MW 4 */
	   243      "00010111" // /* MW 3 */
	   244      "00111110" // /* MW 2 */
	   245      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   246      "00000001" // 	NOPX /* MW 2 */
	   247      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   248      "00000001" // 	NOPX /* MW 2 */
	   249      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   250      "00000001" // 	NOPX /* MW 2 */
	   251      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   252      "00011001" // 	NOPA /* MW 4 */
	   253      "00000000" // /* MW 3 */
	   254      "00000000" // /* MW 2 */
	   255      "00000000" // /* MW 1 */
.return_address
.no_stack_arguments
	   256      "00010101" // 	                                                                                          JL #544 /* MW 6 */
	   257      "00000001" // /* MW 5 */
	   258      "00000000" // /* MW 4 */
	   259      "00010000" // /* MW 3 */
	   260      "00000001" // /* MW 2 */
	   261      "00000000" // /* MW 1 */
.delay_slot
	   262      "01000011" // 	                                                                                          MOVX r1, #-1;                 MOV r0, #50 /* MW 8 */
	   263      "01001000" // /* MW 7 */
	   264      "01100111" // /* MW 6 */
	   265      "00000000" // /* MW 5 */
	   266      "11101000" // /* MW 4 */
	   267      "00010111" // /* MW 3 */
	   268      "00111110" // /* MW 2 */
	   269      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   270      "00000001" // 	NOPX /* MW 2 */
	   271      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   272      "00000001" // 	NOPX /* MW 2 */
	   273      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   274      "00000001" // 	NOPX /* MW 2 */
	   275      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   276      "00110111" // 	NOPA;                         NOPB;                         NOPS;                         NOPX /* MW 12 */
	   277      "00000001" // /* MW 11 */
	   278      "00000000" // /* MW 10 */
	   279      "00000000" // /* MW 9 */
	   280      "00000000" // /* MW 8 */
	   281      "00000000" // /* MW 7 */
	   282      "00000000" // /* MW 6 */
	   283      "00000000" // /* MW 5 */
	   284      "00000000" // /* MW 4 */
	   285      "00000000" // /* MW 3 */
	   286      "00000000" // /* MW 2 */
	   287      "00000000" // /* MW 1 */
.return_address
	   288      "10111011" // 	MOVA r24, #63;                                                                            MOVXM ls, #352 /* MW 10 */
	   289      "00010000" // /* MW 9 */
	   290      "10110000" // /* MW 8 */
	   291      "00111000" // /* MW 7 */
	   292      "00000000" // /* MW 6 */
	   293      "00000000" // /* MW 5 */
	   294      "00000000" // /* MW 4 */
	   295      "00001000" // /* MW 3 */
	   296      "11100110" // /* MW 2 */
	   297      "00000111" // /* MW 1 */
	   298      "01010101" // 	                                                                                          MOVXM le, #448 /* MW 6 */
	   299      "10000000" // /* MW 5 */
	   300      "11100011" // /* MW 4 */
	   301      "00001000" // /* MW 3 */
	   302      "00000000" // /* MW 2 */
	   303      "00000000" // /* MW 1 */
	   304      "01010101" // 	                                                                                          MOVXM p0, #459776 /* MW 6 */
	   305      "00000000" // /* MW 5 */
	   306      "01101000" // /* MW 4 */
	   307      "00000000" // /* MW 3 */
	   308      "00000111" // /* MW 2 */
	   309      "00000000" // /* MW 1 */
	   310      "10111011" // 	NOPA;                                                                                     MOVXM p1, #467968 /* MW 10 */
	   311      "00010000" // /* MW 9 */
	   312      "00000000" // /* MW 8 */
	   313      "10011010" // /* MW 7 */
	   314      "11001000" // /* MW 6 */
	   315      "00000001" // /* MW 5 */
	   316      "00000000" // /* MW 4 */
	   317      "00000000" // /* MW 3 */
	   318      "00000000" // /* MW 2 */
	   319      "00000000" // /* MW 1 */
	   320      "11000000" // 	NOPA;                         NOPB;                         NOPS;                         MOVXM p2, #336;                                                       NOPV /* MW 16 */
	   321      "00000011" // /* MW 15 */
	   322      "00000000" // /* MW 14 */
	   323      "00010000" // /* MW 13 */
	   324      "10101000" // /* MW 12 */
	   325      "00011000" // /* MW 11 */
	   326      "00000001" // /* MW 10 */
	   327      "00000000" // /* MW 9 */
	   328      "00000000" // /* MW 8 */
	   329      "00000000" // /* MW 7 */
	   330      "00000000" // /* MW 6 */
	   331      "00000000" // /* MW 5 */
	   332      "00000000" // /* MW 4 */
	   333      "00000000" // /* MW 3 */
	   334      "00000000" // /* MW 2 */
	   335      "00000000" // /* MW 1 */
.label TGT_Fcore_0_2_112
.loop_nesting 1
	   336      "00011101" // 	LDA.u8 r25, [p0], #1;                                                                     MOVX lc, #63 /* MW 6 */
	   337      "11111101" // /* MW 5 */
	   338      "00000001" // /* MW 4 */
	   339      "01111000" // /* MW 3 */
	   340      "10100110" // /* MW 2 */
	   341      "00000010" // /* MW 1 */
	   342      "00000001" // 	NOPX /* MW 2 */
	   343      "00000000" // /* MW 1 */
	   344      "00000001" // 	NOPX /* MW 2 */
	   345      "00000000" // /* MW 1 */
	   346      "00000001" // 	NOPX /* MW 2 */
	   347      "00000000" // /* MW 1 */
	   348      "00000001" // 	NOPX /* MW 2 */
	   349      "00000000" // /* MW 1 */
	   350      "00000001" // 	NOPX /* MW 2 */
	   351      "00000000" // /* MW 1 */
.label ZLS_Fcore_0_2_128
.begin_of_loop
.noswbrkpt
.loop_nesting 2
	   352      "11000000" // 	ST.s8 r0, [p1], #1;           NOPB;                         NOPS;                         NOPX;                         NOPM;                                   NOPV /* MW 16 */
	   353      "00000011" // /* MW 15 */
	   354      "00000000" // /* MW 14 */
	   355      "10001000" // /* MW 13 */
	   356      "00000011" // /* MW 12 */
	   357      "00000000" // /* MW 11 */
	   358      "00000000" // /* MW 10 */
	   359      "00000000" // /* MW 9 */
	   360      "00000000" // /* MW 8 */
	   361      "00000000" // /* MW 7 */
	   362      "00000000" // /* MW 6 */
	   363      "00000000" // /* MW 5 */
	   364      "10100000" // /* MW 4 */
	   365      "00100010" // /* MW 3 */
	   366      "00000000" // /* MW 2 */
	   367      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	   368      "11000000" // 	LDA.u8 r25, [p0], #1;         NOPB;                         NOPS;                         NOPX;                         ADD.NC r0, r25, #12;                    NOPV /* MW 16 */
	   369      "00000011" // /* MW 15 */
	   370      "00000000" // /* MW 14 */
	   371      "00111000" // /* MW 13 */
	   372      "01001111" // /* MW 12 */
	   373      "00000110" // /* MW 11 */
	   374      "00000000" // /* MW 10 */
	   375      "00000000" // /* MW 9 */
	   376      "00000000" // /* MW 8 */
	   377      "00000000" // /* MW 7 */
	   378      "00000000" // /* MW 6 */
	   379      "01111000" // /* MW 5 */
	   380      "10100110" // /* MW 4 */
	   381      "00000010" // /* MW 3 */
	   382      "00000000" // /* MW 2 */
	   383      "00000000" // /* MW 1 */
	   384      "11000000" // 	NOPA;                         NOPB;                         NOPS;                         NOPX;                         NOPM;                                   NOPV /* MW 16 */
	   385      "00000011" // /* MW 15 */
	   386      "00000000" // /* MW 14 */
	   387      "10001000" // /* MW 13 */
	   388      "00000011" // /* MW 12 */
	   389      "00000000" // /* MW 11 */
	   390      "00000000" // /* MW 10 */
	   391      "00000000" // /* MW 9 */
	   392      "00000000" // /* MW 8 */
	   393      "00000000" // /* MW 7 */
	   394      "00000000" // /* MW 6 */
	   395      "00000000" // /* MW 5 */
	   396      "00000000" // /* MW 4 */
	   397      "00000000" // /* MW 3 */
	   398      "00000000" // /* MW 2 */
	   399      "00000000" // /* MW 1 */
	   400      "11000000" // 	NOPA;                         NOPB;                         NOPS;                         NOPX;                         NOPM;                                   NOPV /* MW 16 */
	   401      "00000011" // /* MW 15 */
	   402      "00000000" // /* MW 14 */
	   403      "10001000" // /* MW 13 */
	   404      "00000011" // /* MW 12 */
	   405      "00000000" // /* MW 11 */
	   406      "00000000" // /* MW 10 */
	   407      "00000000" // /* MW 9 */
	   408      "00000000" // /* MW 8 */
	   409      "00000000" // /* MW 7 */
	   410      "00000000" // /* MW 6 */
	   411      "00000000" // /* MW 5 */
	   412      "00000000" // /* MW 4 */
	   413      "00000000" // /* MW 3 */
	   414      "00000000" // /* MW 2 */
	   415      "00000000" // /* MW 1 */
	   416      "11000000" // 	NOPA;                         NOPB;                         NOPS;                         NOPX;                         NOPM;                                   NOPV /* MW 16 */
	   417      "00000011" // /* MW 15 */
	   418      "00000000" // /* MW 14 */
	   419      "10001000" // /* MW 13 */
	   420      "00000011" // /* MW 12 */
	   421      "00000000" // /* MW 11 */
	   422      "00000000" // /* MW 10 */
	   423      "00000000" // /* MW 9 */
	   424      "00000000" // /* MW 8 */
	   425      "00000000" // /* MW 7 */
	   426      "00000000" // /* MW 6 */
	   427      "00000000" // /* MW 5 */
	   428      "00000000" // /* MW 4 */
	   429      "00000000" // /* MW 3 */
	   430      "00000000" // /* MW 2 */
	   431      "00000000" // /* MW 1 */
	   432      "11000000" // 	NOPA;                         NOPB;                         NOPS;                         NOPX;                         NOPM;                                   NOPV /* MW 16 */
	   433      "00000011" // /* MW 15 */
	   434      "00000000" // /* MW 14 */
	   435      "10001000" // /* MW 13 */
	   436      "00000011" // /* MW 12 */
	   437      "00000000" // /* MW 11 */
	   438      "00000000" // /* MW 10 */
	   439      "00000000" // /* MW 9 */
	   440      "00000000" // /* MW 8 */
	   441      "00000000" // /* MW 7 */
	   442      "00000000" // /* MW 6 */
	   443      "00000000" // /* MW 5 */
	   444      "00000000" // /* MW 4 */
	   445      "00000000" // /* MW 3 */
	   446      "00000000" // /* MW 2 */
	   447      "00000000" // /* MW 1 */
.label ZLE_Fcore_0_2_224
.end_of_loop
	   448      "11000000" // 	NOPA;                         NOPB;                         NOPS;                         NOPX;                         NOPM;                                   NOPV /* MW 16 */
	   449      "00000011" // /* MW 15 */
	   450      "00000000" // /* MW 14 */
	   451      "10001000" // /* MW 13 */
	   452      "00000011" // /* MW 12 */
	   453      "00000000" // /* MW 11 */
	   454      "00000000" // /* MW 10 */
	   455      "00000000" // /* MW 9 */
	   456      "00000000" // /* MW 8 */
	   457      "00000000" // /* MW 7 */
	   458      "00000000" // /* MW 6 */
	   459      "00000000" // /* MW 5 */
	   460      "00000000" // /* MW 4 */
	   461      "00000000" // /* MW 3 */
	   462      "00000000" // /* MW 2 */
	   463      "00000000" // /* MW 1 */
.loop_nesting 1
	   464      "00011001" // 	                                                                                          JNZD r24, r24, p2 /* MW 4 */
	   465      "10001100" // /* MW 3 */
	   466      "00110000" // /* MW 2 */
	   467      "00010110" // /* MW 1 */
.delay_slot
	   468      "01101101" // 	ST.s8 r0, [p1], #1;                                                                                                     ADD.NC r0, r25, #12 /* MW 6 */
	   469      "10011110" // /* MW 5 */
	   470      "00001100" // /* MW 4 */
	   471      "00000000" // /* MW 3 */
	   472      "10100000" // /* MW 2 */
	   473      "00100010" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   474      "00000001" // 	NOPX /* MW 2 */
	   475      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   476      "00000001" // 	NOPX /* MW 2 */
	   477      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   478      "00000001" // 	NOPX /* MW 2 */
	   479      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   480      "00000001" // 	NOPX /* MW 2 */
	   481      "00000000" // /* MW 1 */
.no_stack_arguments
.loop_nesting 0
	   482      "00010101" // 	                                                                                          JL #576 /* MW 6 */
	   483      "00000001" // /* MW 5 */
	   484      "00000000" // /* MW 4 */
	   485      "00100000" // /* MW 3 */
	   486      "00000001" // /* MW 2 */
	   487      "00000000" // /* MW 1 */
.delay_slot
	   488      "01000011" // 	                                                                                          MOVX r1, #1;                  MOV r0, #48 /* MW 8 */
	   489      "01001000" // /* MW 7 */
	   490      "01100011" // /* MW 6 */
	   491      "00000000" // /* MW 5 */
	   492      "00101000" // /* MW 4 */
	   493      "00010000" // /* MW 3 */
	   494      "00000000" // /* MW 2 */
	   495      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   496      "00000001" // 	NOPX /* MW 2 */
	   497      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   498      "00000001" // 	NOPX /* MW 2 */
	   499      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   500      "00000001" // 	NOPX /* MW 2 */
	   501      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   502      "10111011" // 	NOPA;                         NOPB;                                                                                     NOPM /* MW 10 */
	   503      "10001110" // /* MW 9 */
	   504      "00000011" // /* MW 8 */
	   505      "00000000" // /* MW 7 */
	   506      "00000000" // /* MW 6 */
	   507      "00000000" // /* MW 5 */
	   508      "00000000" // /* MW 4 */
	   509      "00000000" // /* MW 3 */
	   510      "00000000" // /* MW 2 */
	   511      "00000000" // /* MW 1 */
.return_address
	   512      "11011001" // 	LDA lr, [sp, #-4] /* MW 4 */
	   513      "11000010" // /* MW 3 */
	   514      "11111111" // /* MW 2 */
	   515      "00000111" // /* MW 1 */
.tail_call
	   516      "10010101" // 	                                                                                          J #576 /* MW 6 */
	   517      "00000000" // /* MW 5 */
	   518      "00000000" // /* MW 4 */
	   519      "00100000" // /* MW 3 */
	   520      "00000001" // /* MW 2 */
	   521      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   522      "00000001" // 	NOPX /* MW 2 */
	   523      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   524      "00000001" // 	NOPX /* MW 2 */
	   525      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   526      "00000001" // 	NOPX /* MW 2 */
	   527      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   528      "00000001" // 	NOPX /* MW 2 */
	   529      "00000000" // /* MW 1 */
.delay_slot
	   530      "01111111" // 	NOPA;                         PADDB [sp], #-32;             NOPS;                         MOVX r0, #51;                 MOV r1, #1 /* MW 14 */
	   531      "00000000" // /* MW 13 */
	   532      "00000000" // /* MW 12 */
	   533      "00000000" // /* MW 11 */
	   534      "01111001" // /* MW 10 */
	   535      "00000000" // /* MW 9 */
	   536      "00000100" // /* MW 8 */
	   537      "11001101" // /* MW 7 */
	   538      "00000000" // /* MW 6 */
	   539      "11100000" // /* MW 5 */
	   540      "11111111" // /* MW 4 */
	   541      "00000111" // /* MW 3 */
	   542      "00000000" // /* MW 2 */
.label core_0_2__end
	   543      "00000000" // /* MW 1 */
.label llvm___aie2___acquire
.function_start
	   544      "00011001" // 	                                                                                          ACQ r0, r1 /* MW 4 */
	   545      "00010010" // /* MW 3 */
	   546      "00010010" // /* MW 2 */
	   547      "00010000" // /* MW 1 */
	   548      "00011001" // 	                                                                                          RET lr /* MW 4 */
	   549      "00011000" // /* MW 3 */
	   550      "00000000" // /* MW 2 */
	   551      "00010000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   552      "00000001" // 	NOPX /* MW 2 */
	   553      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   554      "00000001" // 	NOPX /* MW 2 */
	   555      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   556      "00000001" // 	NOPX /* MW 2 */
	   557      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   558      "00000001" // 	NOPX /* MW 2 */
	   559      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   560      "11000000" // 	NOPA;                         NOPB;                         NOPS;                         NOPX;                         NOPM;                                   NOPV /* MW 16 */
	   561      "00000011" // /* MW 15 */
	   562      "00000000" // /* MW 14 */
	   563      "10001000" // /* MW 13 */
	   564      "00000011" // /* MW 12 */
	   565      "00000000" // /* MW 11 */
	   566      "00000000" // /* MW 10 */
	   567      "00000000" // /* MW 9 */
	   568      "00000000" // /* MW 8 */
	   569      "00000000" // /* MW 7 */
	   570      "00000000" // /* MW 6 */
	   571      "00000000" // /* MW 5 */
	   572      "00000000" // /* MW 4 */
	   573      "00000000" // /* MW 3 */
	   574      "00000000" // /* MW 2 */
.label llvm___aie2___acquire__end
	   575      "00000000" // /* MW 1 */
.label llvm___aie2___release
.function_start
	   576      "00000001" // 	NOPX /* MW 2 */
	   577      "00000000" // /* MW 1 */
	   578      "00000001" // 	NOPX /* MW 2 */
	   579      "00000000" // /* MW 1 */
	   580      "00000001" // 	NOPX /* MW 2 */
	   581      "00000000" // /* MW 1 */
	   582      "00000001" // 	NOPX /* MW 2 */
	   583      "00000000" // /* MW 1 */
	   584      "00000001" // 	NOPX /* MW 2 */
	   585      "00000000" // /* MW 1 */
	   586      "00000001" // 	NOPX /* MW 2 */
	   587      "00000000" // /* MW 1 */
	   588      "00011001" // 	                                                                                          REL r0, r1 /* MW 4 */
	   589      "00010010" // /* MW 3 */
	   590      "00010000" // /* MW 2 */
	   591      "00010000" // /* MW 1 */
	   592      "00011001" // 	                                                                                          RET lr /* MW 4 */
	   593      "00011000" // /* MW 3 */
	   594      "00000000" // /* MW 2 */
	   595      "00010000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   596      "00000001" // 	NOPX /* MW 2 */
	   597      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   598      "00000001" // 	NOPX /* MW 2 */
	   599      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   600      "00000001" // 	NOPX /* MW 2 */
	   601      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   602      "00000001" // 	NOPX /* MW 2 */
	   603      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   604      "00011001" // 	NOPA /* MW 4 */
	   605      "00000000" // /* MW 3 */
	   606      "00000000" // /* MW 2 */
.label llvm___aie2___release__end
	   607      "00000000" // /* MW 1 */
.label _fini
.function_start
	   608      "01011001" // 	                                                                                                                        MOV r0, r23 /* MW 4 */
	   609      "10010110" // /* MW 3 */
	   610      "00001011" // /* MW 2 */
	   611      "00011000" // /* MW 1 */
	   612      "01010101" // 	                                                                                          MOVXM r24, #0 /* MW 6 */
	   613      "00000000" // /* MW 5 */
	   614      "00000000" // /* MW 4 */
	   615      "00001100" // /* MW 3 */
	   616      "00000000" // /* MW 2 */
	   617      "00000000" // /* MW 1 */
	   618      "01011001" // 	                                                                                                                        MOV p0, p7 /* MW 4 */
	   619      "01110110" // /* MW 3 */
	   620      "00111110" // /* MW 2 */
	   621      "00011000" // /* MW 1 */
	   622      "01010101" // 	                                                                                          MOVXM r23, #0 /* MW 6 */
	   623      "00000000" // /* MW 5 */
	   624      "10000000" // /* MW 4 */
	   625      "00001011" // /* MW 3 */
	   626      "00000000" // /* MW 2 */
	   627      "00000000" // /* MW 1 */
	   628      "01000011" // 	                                                                                          EQ r24, r23, r24;             MOV p7, r24 /* MW 8 */
	   629      "00101000" // /* MW 7 */
	   630      "00001011" // /* MW 6 */
	   631      "10011110" // /* MW 5 */
	   632      "00111111" // /* MW 4 */
	   633      "10001100" // /* MW 3 */
	   634      "00101111" // /* MW 2 */
	   635      "00000000" // /* MW 1 */
	   636      "10010101" // 	                                                                                          JNZ r24, #736 /* MW 6 */
	   637      "00000001" // /* MW 5 */
	   638      "01000000" // /* MW 4 */
	   639      "01110000" // /* MW 3 */
	   640      "00000001" // /* MW 2 */
	   641      "11000000" // /* MW 1 */
.delay_slot
	   642      "00011001" // 	                              PADDB [sp], #32 /* MW 4 */
	   643      "00100000" // /* MW 3 */
	   644      "00000011" // /* MW 2 */
	   645      "00111000" // /* MW 1 */
.delay_slot
	   646      "00011001" // 	                                                            ST r22, [sp, #-4] /* MW 4 */
	   647      "11101100" // /* MW 3 */
	   648      "11111111" // /* MW 2 */
	   649      "00001111" // /* MW 1 */
.delay_slot
	   650      "10011001" // 	                                                            ST lr, [sp, #-16] /* MW 4 */
	   651      "01000010" // /* MW 3 */
	   652      "11111110" // /* MW 2 */
	   653      "00001111" // /* MW 1 */
.delay_slot
	   654      "00011001" // 	                                                            ST r0, [sp, #-12] /* MW 4 */
	   655      "11000000" // /* MW 3 */
	   656      "11111110" // /* MW 2 */
	   657      "00001111" // /* MW 1 */
.delay_slot
	   658      "00101111" // 	NOPA;                                                       ST p0, [sp, #-8];                                           NOPM;                                   NOPV /* MW 14 */
	   659      "01111000" // /* MW 13 */
	   660      "00000000" // /* MW 12 */
	   661      "00000000" // /* MW 11 */
	   662      "00111000" // /* MW 10 */
	   663      "00000000" // /* MW 9 */
	   664      "01000000" // /* MW 8 */
	   665      "00000000" // /* MW 7 */
	   666      "10000000" // /* MW 6 */
	   667      "01000110" // /* MW 5 */
	   668      "11111111" // /* MW 4 */
	   669      "00000111" // /* MW 3 */
	   670      "00000000" // /* MW 2 */
	   671      "00000000" // /* MW 1 */
.label TGT_F_fini_64
.loop_nesting 1
	   672      "11011001" // 	LDA p0, [p7], #4 /* MW 4 */
	   673      "10000110" // /* MW 3 */
	   674      "00000011" // /* MW 2 */
	   675      "00000111" // /* MW 1 */
	   676      "00000001" // 	NOPX /* MW 2 */
	   677      "00000000" // /* MW 1 */
	   678      "00000001" // 	NOPX /* MW 2 */
	   679      "00000000" // /* MW 1 */
	   680      "00000001" // 	NOPX /* MW 2 */
	   681      "00000000" // /* MW 1 */
	   682      "00000001" // 	NOPX /* MW 2 */
	   683      "00000000" // /* MW 1 */
	   684      "00000001" // 	NOPX /* MW 2 */
	   685      "00000000" // /* MW 1 */
	   686      "00000001" // 	NOPX /* MW 2 */
	   687      "00000000" // /* MW 1 */
.no_stack_arguments
	   688      "00011001" // 	                                                                                          JL p0 /* MW 4 */
	   689      "00010100" // /* MW 3 */
	   690      "00000000" // /* MW 2 */
	   691      "00010000" // /* MW 1 */
.delay_slot
	   692      "01011001" // 	                                                                                                                        MOV r22, p7 /* MW 4 */
	   693      "01110110" // /* MW 3 */
	   694      "10001110" // /* MW 2 */
	   695      "00011101" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   696      "00000001" // 	NOPX /* MW 2 */
	   697      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   698      "00000001" // 	NOPX /* MW 2 */
	   699      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   700      "00000001" // 	NOPX /* MW 2 */
	   701      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   702      "00000001" // 	NOPX /* MW 2 */
	   703      "00000000" // /* MW 1 */
.return_address
	   704      "10011001" // 	                                                                                          NE r24, r23, r22 /* MW 4 */
	   705      "01101000" // /* MW 3 */
	   706      "11110001" // /* MW 2 */
	   707      "00010101" // /* MW 1 */
	   708      "10010101" // 	                                                                                          JNZ r24, #672 /* MW 6 */
	   709      "00000001" // /* MW 5 */
	   710      "01000000" // /* MW 4 */
	   711      "01010000" // /* MW 3 */
	   712      "00000001" // /* MW 2 */
	   713      "11000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   714      "00000001" // 	NOPX /* MW 2 */
	   715      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   716      "00000001" // 	NOPX /* MW 2 */
	   717      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   718      "00000001" // 	NOPX /* MW 2 */
	   719      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   720      "00000001" // 	NOPX /* MW 2 */
	   721      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   722      "00101111" // 	NOPA;                                                       NOPS;                                                       NOPM;                                   NOPV /* MW 14 */
	   723      "01111000" // /* MW 13 */
	   724      "00000000" // /* MW 12 */
	   725      "00000000" // /* MW 11 */
	   726      "00111000" // /* MW 10 */
	   727      "00000000" // /* MW 9 */
	   728      "01000000" // /* MW 8 */
	   729      "00000000" // /* MW 7 */
	   730      "00000000" // /* MW 6 */
	   731      "00000000" // /* MW 5 */
	   732      "00000000" // /* MW 4 */
	   733      "00000000" // /* MW 3 */
	   734      "00000000" // /* MW 2 */
	   735      "00000000" // /* MW 1 */
.label TGT_F_fini_128
.loop_nesting 0
	   736      "11011001" // 	LDA lr, [sp, #-16] /* MW 4 */
	   737      "01000010" // /* MW 3 */
	   738      "11111110" // /* MW 2 */
	   739      "00000111" // /* MW 1 */
	   740      "01011001" // 	LDA r23, [sp, #-12] /* MW 4 */
	   741      "11101110" // /* MW 3 */
	   742      "11111110" // /* MW 2 */
	   743      "00000111" // /* MW 1 */
	   744      "01011001" // 	LDA r22, [sp, #-4] /* MW 4 */
	   745      "11101100" // /* MW 3 */
	   746      "11111111" // /* MW 2 */
	   747      "00000111" // /* MW 1 */
	   748      "11011001" // 	LDA p7, [sp, #-8] /* MW 4 */
	   749      "01111110" // /* MW 3 */
	   750      "11111111" // /* MW 2 */
	   751      "00000111" // /* MW 1 */
	   752      "00000001" // 	NOPX /* MW 2 */
	   753      "00000000" // /* MW 1 */
	   754      "00000001" // 	NOPX /* MW 2 */
	   755      "00000000" // /* MW 1 */
	   756      "00000001" // 	NOPX /* MW 2 */
	   757      "00000000" // /* MW 1 */
	   758      "00011001" // 	                                                                                          RET lr /* MW 4 */
	   759      "00011000" // /* MW 3 */
	   760      "00000000" // /* MW 2 */
	   761      "00010000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   762      "00000001" // 	NOPX /* MW 2 */
	   763      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   764      "00000001" // 	NOPX /* MW 2 */
	   765      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   766      "00000001" // 	NOPX /* MW 2 */
	   767      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   768      "00000001" // 	NOPX /* MW 2 */
	   769      "00000000" // /* MW 1 */
.delay_slot
	   770      "01111111" // 	NOPA;                         PADDB [sp], #-32;             NOPS;                         NOPX;                         NOPM /* MW 14 */
	   771      "00000000" // /* MW 13 */
	   772      "00000000" // /* MW 12 */
	   773      "00000000" // /* MW 11 */
	   774      "01110001" // /* MW 10 */
	   775      "00000000" // /* MW 9 */
	   776      "00000000" // /* MW 8 */
	   777      "00000000" // /* MW 7 */
	   778      "00000000" // /* MW 6 */
	   779      "11100000" // /* MW 5 */
	   780      "11111111" // /* MW 4 */
	   781      "00000111" // /* MW 3 */
	   782      "00000000" // /* MW 2 */
.label _fini__end
	   783      "00000000" // /* MW 1 */
.label __cxa_finalize
.function_start
	   784      "10111011" // 	MOVA r1, #8;                                                                              MOVXM p0, #476192 /* MW 10 */
	   785      "00010000" // /* MW 9 */
	   786      "00010000" // /* MW 8 */
	   787      "00011010" // /* MW 7 */
	   788      "11010000" // /* MW 6 */
	   789      "00000001" // /* MW 5 */
	   790      "00000000" // /* MW 4 */
	   791      "01001000" // /* MW 3 */
	   792      "00000000" // /* MW 2 */
	   793      "00000001" // /* MW 1 */
	   794      "10111011" // 	LDA r3, [p0, #0];                                                                         MOVXM r2, #476160 /* MW 10 */
	   795      "00010000" // /* MW 9 */
	   796      "00000000" // /* MW 8 */
	   797      "01000010" // /* MW 7 */
	   798      "11010000" // /* MW 6 */
	   799      "00000001" // /* MW 5 */
	   800      "00000000" // /* MW 4 */
	   801      "11001000" // /* MW 3 */
	   802      "01010000" // /* MW 2 */
	   803      "00000000" // /* MW 1 */
	   804      "00111011" // 	                                                            ST r1, [p0, #0];              MOVX r1, #-3;                 MOV r17, crSat /* MW 10 */
	   805      "00101001" // /* MW 9 */
	   806      "10011011" // /* MW 8 */
	   807      "00100100" // /* MW 7 */
	   808      "10101010" // /* MW 6 */
	   809      "00010111" // /* MW 5 */
	   810      "00111110" // /* MW 4 */
	   811      "01000000" // /* MW 3 */
	   812      "01010000" // /* MW 2 */
	   813      "00000000" // /* MW 1 */
	   814      "01011001" // 	                                                                                                                        MOV r16, crRnd /* MW 4 */
	   815      "00110110" // /* MW 3 */
	   816      "00000110" // /* MW 2 */
	   817      "00011100" // /* MW 1 */
	   818      "01011001" // 	                                                                                                                        MOV r18, lr /* MW 4 */
	   819      "11110110" // /* MW 3 */
	   820      "10000100" // /* MW 2 */
	   821      "00011100" // /* MW 1 */
	   822      "01010101" // 	                                                                                          MOVXM p6, #848 /* MW 6 */
	   823      "10100000" // /* MW 5 */
	   824      "01100110" // /* MW 4 */
	   825      "00001100" // /* MW 3 */
	   826      "00000000" // /* MW 2 */
	   827      "00000000" // /* MW 1 */
	   828      "00000001" // 	NOPX /* MW 2 */
	   829      "00000000" // /* MW 1 */
	   830      "00000001" // 	NOPX /* MW 2 */
	   831      "00000000" // /* MW 1 */
	   832      "01111001" // 	                                                                                                                        ADD.NC r3, r3, #-8 /* MW 4 */
	   833      "11110110" // /* MW 3 */
	   834      "11000001" // /* MW 2 */
	   835      "00011000" // /* MW 1 */
	   836      "10011001" // 	                                                                                          ADD r2, r3, r2 /* MW 4 */
	   837      "00100000" // /* MW 3 */
	   838      "11000100" // /* MW 2 */
	   839      "00010000" // /* MW 1 */
	   840      "01000011" // 	                                                                                          ASHL r19, r3, r1;             MOV p7, r2 /* MW 8 */
	   841      "00101000" // /* MW 7 */
	   842      "10001011" // /* MW 6 */
	   843      "10011000" // /* MW 5 */
	   844      "11110111" // /* MW 4 */
	   845      "00110000" // /* MW 3 */
	   846      "00000111" // /* MW 2 */
	   847      "00000000" // /* MW 1 */
.label TGT_F__cxa_finalize_64
.loop_nesting 1
	   848      "11011001" // 	LDA p1, [p7], #4 /* MW 4 */
	   849      "10001110" // /* MW 3 */
	   850      "00000011" // /* MW 2 */
	   851      "00000111" // /* MW 1 */
	   852      "11011001" // 	LDA p0, [p7], #-12 /* MW 4 */
	   853      "10000110" // /* MW 3 */
	   854      "11111011" // /* MW 2 */
	   855      "00000111" // /* MW 1 */
	   856      "00000001" // 	NOPX /* MW 2 */
	   857      "00000000" // /* MW 1 */
	   858      "00000001" // 	NOPX /* MW 2 */
	   859      "00000000" // /* MW 1 */
	   860      "00000001" // 	NOPX /* MW 2 */
	   861      "00000000" // /* MW 1 */
	   862      "00000001" // 	NOPX /* MW 2 */
	   863      "00000000" // /* MW 1 */
	   864      "00000001" // 	NOPX /* MW 2 */
	   865      "00000000" // /* MW 1 */
.no_stack_arguments
	   866      "00011001" // 	                                                                                          JL p1 /* MW 4 */
	   867      "01010100" // /* MW 3 */
	   868      "00000000" // /* MW 2 */
	   869      "00010000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   870      "00000001" // 	NOPX /* MW 2 */
	   871      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   872      "00000001" // 	NOPX /* MW 2 */
	   873      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   874      "00000001" // 	NOPX /* MW 2 */
	   875      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   876      "00011001" // 	NOPA /* MW 4 */
	   877      "00000000" // /* MW 3 */
	   878      "00000000" // /* MW 2 */
	   879      "00000000" // /* MW 1 */
.delay_slot
	   880      "11000000" // 	NOPA;                         NOPB;                         NOPS;                         NOPX;                         MOV r20, r0;                            NOPV /* MW 16 */
	   881      "00000011" // /* MW 15 */
	   882      "00000000" // /* MW 14 */
	   883      "00101000" // /* MW 13 */
	   884      "00001011" // /* MW 12 */
	   885      "10000000" // /* MW 11 */
	   886      "00000010" // /* MW 10 */
	   887      "00000000" // /* MW 9 */
	   888      "00000000" // /* MW 8 */
	   889      "00000000" // /* MW 7 */
	   890      "00000000" // /* MW 6 */
	   891      "00000000" // /* MW 5 */
	   892      "00000000" // /* MW 4 */
	   893      "00000000" // /* MW 3 */
	   894      "00000000" // /* MW 2 */
	   895      "00000000" // /* MW 1 */
.return_address
	   896      "00011001" // 	                                                                                          JNZD r19, r19, p6 /* MW 4 */
	   897      "10001100" // /* MW 3 */
	   898      "11100111" // /* MW 2 */
	   899      "00010100" // /* MW 1 */
.delay_slot
	   900      "01011001" // 	                                                                                                                        MOV r0, r20 /* MW 4 */
	   901      "00010110" // /* MW 3 */
	   902      "00001010" // /* MW 2 */
	   903      "00011000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   904      "00000001" // 	NOPX /* MW 2 */
	   905      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   906      "00000001" // 	NOPX /* MW 2 */
	   907      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   908      "00000001" // 	NOPX /* MW 2 */
	   909      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   910      "00000001" // 	NOPX /* MW 2 */
	   911      "00000000" // /* MW 1 */
.loop_nesting 0
	   912      "01011001" // 	                                                                                                                        MOV lr, r18 /* MW 4 */
	   913      "00010110" // /* MW 3 */
	   914      "01111001" // /* MW 2 */
	   915      "00011010" // /* MW 1 */
	   916      "00011001" // 	                                                                                          RET lr /* MW 4 */
	   917      "00011000" // /* MW 3 */
	   918      "00000000" // /* MW 2 */
	   919      "00010000" // /* MW 1 */
.delay_slot
	   920      "01000011" // 	                                                                                          MOVX crSat, r17;              MOV crRnd, r16 /* MW 8 */
	   921      "00101000" // /* MW 7 */
	   922      "00001011" // /* MW 6 */
	   923      "10001100" // /* MW 5 */
	   924      "00000001" // /* MW 4 */
	   925      "00100001" // /* MW 3 */
	   926      "00100011" // /* MW 2 */
	   927      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   928      "00000001" // 	NOPX /* MW 2 */
	   929      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   930      "00000001" // 	NOPX /* MW 2 */
	   931      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   932      "00000001" // 	NOPX /* MW 2 */
	   933      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   934      "10111011" // 	NOPA;                         NOPB;                                                                                     NOPM /* MW 10 */
	   935      "10001110" // /* MW 9 */
	   936      "00000011" // /* MW 8 */
	   937      "00000000" // /* MW 7 */
	   938      "00000000" // /* MW 6 */
	   939      "00000000" // /* MW 5 */
	   940      "00000000" // /* MW 4 */
	   941      "00000000" // /* MW 3 */
	   942      "00000000" // /* MW 2 */
.label __cxa_finalize__end
	   943      "00000000" // /* MW 1 */
