
// Function: void core_0_2()
[
  0 : core_0_2 bnd=e
  1 : _cst val=1f typ=__i1
  2 : _cst val=9223372036854775806f typ=__i64
  3 : _cst val=0f typ=__i64
  4 : __tmp typ=__i64
  5 : _cst val=383f typ=__i64
  6 : _cst val=49f typ=__i32
  7 : _cst val=-1f typ=__i32
  8 : llvm___aie2___acquire bnd=e
  9 : _cst val=0f
  10 : _cst val=51f typ=__i32
  11 : _cst val=52f typ=__i32
  12 : _cst val=64f
  13 : _cst val=4f
  14 : in1_cons_buff_0 typ=__Pvoid bnd=e
  15 : __tmp typ=__i32
  16 : in2_cons_buff_0 typ=__Pvoid bnd=e
  17 : out_buff_0 typ=__Pvoid bnd=e
  18 : _cst val=4f typ=__i32
  19 : __tmp typ=__Pvoid
  20 : _cst val=8f typ=__i32
  21 : _cst val=12f typ=__i32
  22 : _cst val=16f typ=__i32
  23 : _cst val=20f typ=__i32
  24 : _cst val=24f typ=__i32
  25 : _cst val=28f typ=__i32
  26 : _cst val=32f typ=__i32
  27 : _cst val=36f typ=__i32
  28 : _cst val=40f typ=__i32
  29 : _cst val=44f typ=__i32
  30 : _cst val=48f typ=__i32
  31 : _cst val=56f typ=__i32
  32 : _cst val=60f typ=__i32
  33 : _cst val=1f typ=__i32
  34 : llvm___aie2___release bnd=e
  35 : _cst val=50f typ=__i32
  36 : _cst val=53f typ=__i32
  37 : in1_cons_buff_1 typ=__Pvoid bnd=e
  38 : in2_cons_buff_1 typ=__Pvoid bnd=e
  39 : out_buff_1 typ=__Pvoid bnd=e
  40 : _cst val=2f typ=__i64
  41 : _cst val=766f typ=__i64
  42 : __tmp typ=__i1
  43 : _cst val=1f typ=__i64
  44 : _cst val=9223372036854775807f typ=__i64
]
Lcore_0_2
{
  { // BB#0
    ( vreg.1 var=1 ) const ( ) <1>;
    ( vreg.2 var=2 ) const ( ) <2>;
    ( vreg.3 var=3 ) const ( ) <3>;
  } #2
  // NOTE: GOTO FROM BB#0 TO BB#1 [HIDDEN]
  do {
    { // no associated BB
      ( vreg.318 var=4 ) entry ( vreg.313 vreg.3 ) <318>;
    } #4
    {
      sync {
        ( vreg.4 var=4 ) sync_link ( vreg.318 ) sid=1 <4>;
      } #6
      { // BB#1
        ( ) chain_tie_loop ( ) <5>;
        ( vreg.6 var=5 ) const ( ) <6>;
        ( vreg.7 var=3 ) const ( ) <7>;
      } #7
      // NOTE: GOTO FROM BB#1 TO BB#2 [HIDDEN]
      do {
        { // no associated BB
          ( vreg.309 var=4 ) entry ( vreg.304 vreg.7 ) <309>;
        } #9
        {
          sync {
            ( vreg.8 var=4 ) sync_link ( vreg.309 ) sid=2 <8>;
          } #11
          { // BB#2
            ( ) chain_tie_loop ( ) <9>;
            ( vreg.10 var=6 ) const ( ) <10>;
            ( vreg.11 var=7 ) const ( ) <11>;
            ( vreg.12 var=8 ) const ( ) <12>;
            ( vreg.13 var=9 ) const ( ) <13>;
            ( ) lcall /* llvm___aie2___acquire */ ( vreg.13 vreg.12 vreg.10 vreg.11 ) <14>;
            ( vreg.15 var=10 ) const ( ) <15>;
            ( vreg.16 var=8 ) const ( ) <16>;
            ( vreg.17 var=9 ) const ( ) <17>;
            ( ) lcall /* llvm___aie2___acquire */ ( vreg.17 vreg.16 vreg.15 vreg.11 ) <18>;
            ( vreg.19 var=11 ) const ( ) <19>;
            ( vreg.20 var=8 ) const ( ) <20>;
            ( vreg.21 var=9 ) const ( ) <21>;
            ( ) lcall /* llvm___aie2___acquire */ ( vreg.21 vreg.20 vreg.19 vreg.11 ) <22>;
            ( vreg.23 var=12 ) const ( ) <23>;
            ( vreg.24 var=13 ) const ( ) <24>;
            ( vreg.25 var=14 ) global ( vreg.23 vreg.24 ) <25>;
            ( vreg.26 var=15 ) load___i32 ( vreg.25 ) <26>;
            ( vreg.27 var=12 ) const ( ) <27>;
            ( vreg.28 var=13 ) const ( ) <28>;
            ( vreg.29 var=16 ) global ( vreg.27 vreg.28 ) <29>;
            ( vreg.30 var=15 ) load___i32 ( vreg.29 ) <30>;
            ( vreg.31 var=15 ) mul___i32 ( vreg.30 vreg.26 ) <31>;
            ( vreg.32 var=12 ) const ( ) <32>;
            ( vreg.33 var=13 ) const ( ) <33>;
            ( vreg.34 var=17 ) global ( vreg.32 vreg.33 ) <34>;
            ( ) store___i32 ( vreg.31 vreg.34 ) <35>;
            ( vreg.36 var=18 ) const ( ) <36>;
            ( vreg.37 var=19 ) add___Pvoid ( vreg.25 vreg.36 ) <37>;
            ( vreg.38 var=15 ) load___i32 ( vreg.37 ) <38>;
            ( vreg.39 var=19 ) add___Pvoid ( vreg.29 vreg.36 ) <39>;
            ( vreg.40 var=15 ) load___i32 ( vreg.39 ) <40>;
            ( vreg.41 var=15 ) mul___i32 ( vreg.40 vreg.38 ) <41>;
            ( vreg.42 var=19 ) add___Pvoid ( vreg.34 vreg.36 ) <42>;
            ( ) store___i32 ( vreg.41 vreg.42 ) <43>;
            ( vreg.44 var=20 ) const ( ) <44>;
            ( vreg.45 var=19 ) add___Pvoid ( vreg.25 vreg.44 ) <45>;
            ( vreg.46 var=15 ) load___i32 ( vreg.45 ) <46>;
            ( vreg.47 var=19 ) add___Pvoid ( vreg.29 vreg.44 ) <47>;
            ( vreg.48 var=15 ) load___i32 ( vreg.47 ) <48>;
            ( vreg.49 var=15 ) mul___i32 ( vreg.48 vreg.46 ) <49>;
            ( vreg.50 var=19 ) add___Pvoid ( vreg.34 vreg.44 ) <50>;
            ( ) store___i32 ( vreg.49 vreg.50 ) <51>;
            ( vreg.52 var=21 ) const ( ) <52>;
            ( vreg.53 var=19 ) add___Pvoid ( vreg.25 vreg.52 ) <53>;
            ( vreg.54 var=15 ) load___i32 ( vreg.53 ) <54>;
            ( vreg.55 var=19 ) add___Pvoid ( vreg.29 vreg.52 ) <55>;
            ( vreg.56 var=15 ) load___i32 ( vreg.55 ) <56>;
            ( vreg.57 var=15 ) mul___i32 ( vreg.56 vreg.54 ) <57>;
            ( vreg.58 var=19 ) add___Pvoid ( vreg.34 vreg.52 ) <58>;
            ( ) store___i32 ( vreg.57 vreg.58 ) <59>;
            ( vreg.60 var=22 ) const ( ) <60>;
            ( vreg.61 var=19 ) add___Pvoid ( vreg.25 vreg.60 ) <61>;
            ( vreg.62 var=15 ) load___i32 ( vreg.61 ) <62>;
            ( vreg.63 var=19 ) add___Pvoid ( vreg.29 vreg.60 ) <63>;
            ( vreg.64 var=15 ) load___i32 ( vreg.63 ) <64>;
            ( vreg.65 var=15 ) mul___i32 ( vreg.64 vreg.62 ) <65>;
            ( vreg.66 var=19 ) add___Pvoid ( vreg.34 vreg.60 ) <66>;
            ( ) store___i32 ( vreg.65 vreg.66 ) <67>;
            ( vreg.68 var=23 ) const ( ) <68>;
            ( vreg.69 var=19 ) add___Pvoid ( vreg.25 vreg.68 ) <69>;
            ( vreg.70 var=15 ) load___i32 ( vreg.69 ) <70>;
            ( vreg.71 var=19 ) add___Pvoid ( vreg.29 vreg.68 ) <71>;
            ( vreg.72 var=15 ) load___i32 ( vreg.71 ) <72>;
            ( vreg.73 var=15 ) mul___i32 ( vreg.72 vreg.70 ) <73>;
            ( vreg.74 var=19 ) add___Pvoid ( vreg.34 vreg.68 ) <74>;
            ( ) store___i32 ( vreg.73 vreg.74 ) <75>;
            ( vreg.76 var=24 ) const ( ) <76>;
            ( vreg.77 var=19 ) add___Pvoid ( vreg.25 vreg.76 ) <77>;
            ( vreg.78 var=15 ) load___i32 ( vreg.77 ) <78>;
            ( vreg.79 var=19 ) add___Pvoid ( vreg.29 vreg.76 ) <79>;
            ( vreg.80 var=15 ) load___i32 ( vreg.79 ) <80>;
            ( vreg.81 var=15 ) mul___i32 ( vreg.80 vreg.78 ) <81>;
            ( vreg.82 var=19 ) add___Pvoid ( vreg.34 vreg.76 ) <82>;
            ( ) store___i32 ( vreg.81 vreg.82 ) <83>;
            ( vreg.84 var=25 ) const ( ) <84>;
            ( vreg.85 var=19 ) add___Pvoid ( vreg.25 vreg.84 ) <85>;
            ( vreg.86 var=15 ) load___i32 ( vreg.85 ) <86>;
            ( vreg.87 var=19 ) add___Pvoid ( vreg.29 vreg.84 ) <87>;
            ( vreg.88 var=15 ) load___i32 ( vreg.87 ) <88>;
            ( vreg.89 var=15 ) mul___i32 ( vreg.88 vreg.86 ) <89>;
            ( vreg.90 var=19 ) add___Pvoid ( vreg.34 vreg.84 ) <90>;
            ( ) store___i32 ( vreg.89 vreg.90 ) <91>;
            ( vreg.92 var=26 ) const ( ) <92>;
            ( vreg.93 var=19 ) add___Pvoid ( vreg.25 vreg.92 ) <93>;
            ( vreg.94 var=15 ) load___i32 ( vreg.93 ) <94>;
            ( vreg.95 var=19 ) add___Pvoid ( vreg.29 vreg.92 ) <95>;
            ( vreg.96 var=15 ) load___i32 ( vreg.95 ) <96>;
            ( vreg.97 var=15 ) mul___i32 ( vreg.96 vreg.94 ) <97>;
            ( vreg.98 var=19 ) add___Pvoid ( vreg.34 vreg.92 ) <98>;
            ( ) store___i32 ( vreg.97 vreg.98 ) <99>;
            ( vreg.100 var=27 ) const ( ) <100>;
            ( vreg.101 var=19 ) add___Pvoid ( vreg.25 vreg.100 ) <101>;
            ( vreg.102 var=15 ) load___i32 ( vreg.101 ) <102>;
            ( vreg.103 var=19 ) add___Pvoid ( vreg.29 vreg.100 ) <103>;
            ( vreg.104 var=15 ) load___i32 ( vreg.103 ) <104>;
            ( vreg.105 var=15 ) mul___i32 ( vreg.104 vreg.102 ) <105>;
            ( vreg.106 var=19 ) add___Pvoid ( vreg.34 vreg.100 ) <106>;
            ( ) store___i32 ( vreg.105 vreg.106 ) <107>;
            ( vreg.108 var=28 ) const ( ) <108>;
            ( vreg.109 var=19 ) add___Pvoid ( vreg.25 vreg.108 ) <109>;
            ( vreg.110 var=15 ) load___i32 ( vreg.109 ) <110>;
            ( vreg.111 var=19 ) add___Pvoid ( vreg.29 vreg.108 ) <111>;
            ( vreg.112 var=15 ) load___i32 ( vreg.111 ) <112>;
            ( vreg.113 var=15 ) mul___i32 ( vreg.112 vreg.110 ) <113>;
            ( vreg.114 var=19 ) add___Pvoid ( vreg.34 vreg.108 ) <114>;
            ( ) store___i32 ( vreg.113 vreg.114 ) <115>;
            ( vreg.116 var=29 ) const ( ) <116>;
            ( vreg.117 var=19 ) add___Pvoid ( vreg.25 vreg.116 ) <117>;
            ( vreg.118 var=15 ) load___i32 ( vreg.117 ) <118>;
            ( vreg.119 var=19 ) add___Pvoid ( vreg.29 vreg.116 ) <119>;
            ( vreg.120 var=15 ) load___i32 ( vreg.119 ) <120>;
            ( vreg.121 var=15 ) mul___i32 ( vreg.120 vreg.118 ) <121>;
            ( vreg.122 var=19 ) add___Pvoid ( vreg.34 vreg.116 ) <122>;
            ( ) store___i32 ( vreg.121 vreg.122 ) <123>;
            ( vreg.124 var=30 ) const ( ) <124>;
            ( vreg.125 var=19 ) add___Pvoid ( vreg.25 vreg.124 ) <125>;
            ( vreg.126 var=15 ) load___i32 ( vreg.125 ) <126>;
            ( vreg.127 var=19 ) add___Pvoid ( vreg.29 vreg.124 ) <127>;
            ( vreg.128 var=15 ) load___i32 ( vreg.127 ) <128>;
            ( vreg.129 var=15 ) mul___i32 ( vreg.128 vreg.126 ) <129>;
            ( vreg.130 var=19 ) add___Pvoid ( vreg.34 vreg.124 ) <130>;
            ( ) store___i32 ( vreg.129 vreg.130 ) <131>;
            ( vreg.132 var=19 ) add___Pvoid ( vreg.25 vreg.19 ) <132>;
            ( vreg.133 var=15 ) load___i32 ( vreg.132 ) <133>;
            ( vreg.134 var=19 ) add___Pvoid ( vreg.29 vreg.19 ) <134>;
            ( vreg.135 var=15 ) load___i32 ( vreg.134 ) <135>;
            ( vreg.136 var=15 ) mul___i32 ( vreg.135 vreg.133 ) <136>;
            ( vreg.137 var=19 ) add___Pvoid ( vreg.34 vreg.19 ) <137>;
            ( ) store___i32 ( vreg.136 vreg.137 ) <138>;
            ( vreg.139 var=31 ) const ( ) <139>;
            ( vreg.140 var=19 ) add___Pvoid ( vreg.25 vreg.139 ) <140>;
            ( vreg.141 var=15 ) load___i32 ( vreg.140 ) <141>;
            ( vreg.142 var=19 ) add___Pvoid ( vreg.29 vreg.139 ) <142>;
            ( vreg.143 var=15 ) load___i32 ( vreg.142 ) <143>;
            ( vreg.144 var=15 ) mul___i32 ( vreg.143 vreg.141 ) <144>;
            ( vreg.145 var=19 ) add___Pvoid ( vreg.34 vreg.139 ) <145>;
            ( ) store___i32 ( vreg.144 vreg.145 ) <146>;
            ( vreg.147 var=32 ) const ( ) <147>;
            ( vreg.148 var=19 ) add___Pvoid ( vreg.25 vreg.147 ) <148>;
            ( vreg.149 var=15 ) load___i32 ( vreg.148 ) <149>;
            ( vreg.150 var=19 ) add___Pvoid ( vreg.29 vreg.147 ) <150>;
            ( vreg.151 var=15 ) load___i32 ( vreg.150 ) <151>;
            ( vreg.152 var=15 ) mul___i32 ( vreg.151 vreg.149 ) <152>;
            ( vreg.153 var=19 ) add___Pvoid ( vreg.34 vreg.147 ) <153>;
            ( ) store___i32 ( vreg.152 vreg.153 ) <154>;
            ( vreg.155 var=33 ) const ( ) <155>;
            ( vreg.156 var=34 ) const ( ) <156>;
            ( vreg.157 var=9 ) const ( ) <157>;
            ( ) lcall /* llvm___aie2___release */ ( vreg.157 vreg.156 vreg.124 vreg.155 ) <158>;
            ( vreg.159 var=35 ) const ( ) <159>;
            ( vreg.160 var=34 ) const ( ) <160>;
            ( vreg.161 var=9 ) const ( ) <161>;
            ( ) lcall /* llvm___aie2___release */ ( vreg.161 vreg.160 vreg.159 vreg.155 ) <162>;
            ( vreg.163 var=36 ) const ( ) <163>;
            ( vreg.164 var=34 ) const ( ) <164>;
            ( vreg.165 var=9 ) const ( ) <165>;
            ( ) lcall /* llvm___aie2___release */ ( vreg.165 vreg.164 vreg.163 vreg.155 ) <166>;
            ( vreg.167 var=8 ) const ( ) <167>;
            ( vreg.168 var=9 ) const ( ) <168>;
            ( ) lcall /* llvm___aie2___acquire */ ( vreg.168 vreg.167 vreg.10 vreg.11 ) <169>;
            ( vreg.170 var=8 ) const ( ) <170>;
            ( vreg.171 var=9 ) const ( ) <171>;
            ( ) lcall /* llvm___aie2___acquire */ ( vreg.171 vreg.170 vreg.15 vreg.11 ) <172>;
            ( vreg.173 var=8 ) const ( ) <173>;
            ( vreg.174 var=9 ) const ( ) <174>;
            ( ) lcall /* llvm___aie2___acquire */ ( vreg.174 vreg.173 vreg.19 vreg.11 ) <175>;
            ( vreg.176 var=12 ) const ( ) <176>;
            ( vreg.177 var=13 ) const ( ) <177>;
            ( vreg.178 var=37 ) global ( vreg.176 vreg.177 ) <178>;
            ( vreg.179 var=15 ) load___i32 ( vreg.178 ) <179>;
            ( vreg.180 var=12 ) const ( ) <180>;
            ( vreg.181 var=13 ) const ( ) <181>;
            ( vreg.182 var=38 ) global ( vreg.180 vreg.181 ) <182>;
            ( vreg.183 var=15 ) load___i32 ( vreg.182 ) <183>;
            ( vreg.184 var=15 ) mul___i32 ( vreg.183 vreg.179 ) <184>;
            ( vreg.185 var=12 ) const ( ) <185>;
            ( vreg.186 var=13 ) const ( ) <186>;
            ( vreg.187 var=39 ) global ( vreg.185 vreg.186 ) <187>;
            ( ) store___i32 ( vreg.184 vreg.187 ) <188>;
            ( vreg.189 var=19 ) add___Pvoid ( vreg.178 vreg.36 ) <189>;
            ( vreg.190 var=15 ) load___i32 ( vreg.189 ) <190>;
            ( vreg.191 var=19 ) add___Pvoid ( vreg.182 vreg.36 ) <191>;
            ( vreg.192 var=15 ) load___i32 ( vreg.191 ) <192>;
            ( vreg.193 var=15 ) mul___i32 ( vreg.192 vreg.190 ) <193>;
            ( vreg.194 var=19 ) add___Pvoid ( vreg.187 vreg.36 ) <194>;
            ( ) store___i32 ( vreg.193 vreg.194 ) <195>;
            ( vreg.196 var=19 ) add___Pvoid ( vreg.178 vreg.44 ) <196>;
            ( vreg.197 var=15 ) load___i32 ( vreg.196 ) <197>;
            ( vreg.198 var=19 ) add___Pvoid ( vreg.182 vreg.44 ) <198>;
            ( vreg.199 var=15 ) load___i32 ( vreg.198 ) <199>;
            ( vreg.200 var=15 ) mul___i32 ( vreg.199 vreg.197 ) <200>;
            ( vreg.201 var=19 ) add___Pvoid ( vreg.187 vreg.44 ) <201>;
            ( ) store___i32 ( vreg.200 vreg.201 ) <202>;
            ( vreg.203 var=19 ) add___Pvoid ( vreg.178 vreg.52 ) <203>;
            ( vreg.204 var=15 ) load___i32 ( vreg.203 ) <204>;
            ( vreg.205 var=19 ) add___Pvoid ( vreg.182 vreg.52 ) <205>;
            ( vreg.206 var=15 ) load___i32 ( vreg.205 ) <206>;
            ( vreg.207 var=15 ) mul___i32 ( vreg.206 vreg.204 ) <207>;
            ( vreg.208 var=19 ) add___Pvoid ( vreg.187 vreg.52 ) <208>;
            ( ) store___i32 ( vreg.207 vreg.208 ) <209>;
            ( vreg.210 var=19 ) add___Pvoid ( vreg.178 vreg.60 ) <210>;
            ( vreg.211 var=15 ) load___i32 ( vreg.210 ) <211>;
            ( vreg.212 var=19 ) add___Pvoid ( vreg.182 vreg.60 ) <212>;
            ( vreg.213 var=15 ) load___i32 ( vreg.212 ) <213>;
            ( vreg.214 var=15 ) mul___i32 ( vreg.213 vreg.211 ) <214>;
            ( vreg.215 var=19 ) add___Pvoid ( vreg.187 vreg.60 ) <215>;
            ( ) store___i32 ( vreg.214 vreg.215 ) <216>;
            ( vreg.217 var=19 ) add___Pvoid ( vreg.178 vreg.68 ) <217>;
            ( vreg.218 var=15 ) load___i32 ( vreg.217 ) <218>;
            ( vreg.219 var=19 ) add___Pvoid ( vreg.182 vreg.68 ) <219>;
            ( vreg.220 var=15 ) load___i32 ( vreg.219 ) <220>;
            ( vreg.221 var=15 ) mul___i32 ( vreg.220 vreg.218 ) <221>;
            ( vreg.222 var=19 ) add___Pvoid ( vreg.187 vreg.68 ) <222>;
            ( ) store___i32 ( vreg.221 vreg.222 ) <223>;
            ( vreg.224 var=19 ) add___Pvoid ( vreg.178 vreg.76 ) <224>;
            ( vreg.225 var=15 ) load___i32 ( vreg.224 ) <225>;
            ( vreg.226 var=19 ) add___Pvoid ( vreg.182 vreg.76 ) <226>;
            ( vreg.227 var=15 ) load___i32 ( vreg.226 ) <227>;
            ( vreg.228 var=15 ) mul___i32 ( vreg.227 vreg.225 ) <228>;
            ( vreg.229 var=19 ) add___Pvoid ( vreg.187 vreg.76 ) <229>;
            ( ) store___i32 ( vreg.228 vreg.229 ) <230>;
            ( vreg.231 var=19 ) add___Pvoid ( vreg.178 vreg.84 ) <231>;
            ( vreg.232 var=15 ) load___i32 ( vreg.231 ) <232>;
            ( vreg.233 var=19 ) add___Pvoid ( vreg.182 vreg.84 ) <233>;
            ( vreg.234 var=15 ) load___i32 ( vreg.233 ) <234>;
            ( vreg.235 var=15 ) mul___i32 ( vreg.234 vreg.232 ) <235>;
            ( vreg.236 var=19 ) add___Pvoid ( vreg.187 vreg.84 ) <236>;
            ( ) store___i32 ( vreg.235 vreg.236 ) <237>;
            ( vreg.238 var=19 ) add___Pvoid ( vreg.178 vreg.92 ) <238>;
            ( vreg.239 var=15 ) load___i32 ( vreg.238 ) <239>;
            ( vreg.240 var=19 ) add___Pvoid ( vreg.182 vreg.92 ) <240>;
            ( vreg.241 var=15 ) load___i32 ( vreg.240 ) <241>;
            ( vreg.242 var=15 ) mul___i32 ( vreg.241 vreg.239 ) <242>;
            ( vreg.243 var=19 ) add___Pvoid ( vreg.187 vreg.92 ) <243>;
            ( ) store___i32 ( vreg.242 vreg.243 ) <244>;
            ( vreg.245 var=19 ) add___Pvoid ( vreg.178 vreg.100 ) <245>;
            ( vreg.246 var=15 ) load___i32 ( vreg.245 ) <246>;
            ( vreg.247 var=19 ) add___Pvoid ( vreg.182 vreg.100 ) <247>;
            ( vreg.248 var=15 ) load___i32 ( vreg.247 ) <248>;
            ( vreg.249 var=15 ) mul___i32 ( vreg.248 vreg.246 ) <249>;
            ( vreg.250 var=19 ) add___Pvoid ( vreg.187 vreg.100 ) <250>;
            ( ) store___i32 ( vreg.249 vreg.250 ) <251>;
            ( vreg.252 var=19 ) add___Pvoid ( vreg.178 vreg.108 ) <252>;
            ( vreg.253 var=15 ) load___i32 ( vreg.252 ) <253>;
            ( vreg.254 var=19 ) add___Pvoid ( vreg.182 vreg.108 ) <254>;
            ( vreg.255 var=15 ) load___i32 ( vreg.254 ) <255>;
            ( vreg.256 var=15 ) mul___i32 ( vreg.255 vreg.253 ) <256>;
            ( vreg.257 var=19 ) add___Pvoid ( vreg.187 vreg.108 ) <257>;
            ( ) store___i32 ( vreg.256 vreg.257 ) <258>;
            ( vreg.259 var=19 ) add___Pvoid ( vreg.178 vreg.116 ) <259>;
            ( vreg.260 var=15 ) load___i32 ( vreg.259 ) <260>;
            ( vreg.261 var=19 ) add___Pvoid ( vreg.182 vreg.116 ) <261>;
            ( vreg.262 var=15 ) load___i32 ( vreg.261 ) <262>;
            ( vreg.263 var=15 ) mul___i32 ( vreg.262 vreg.260 ) <263>;
            ( vreg.264 var=19 ) add___Pvoid ( vreg.187 vreg.116 ) <264>;
            ( ) store___i32 ( vreg.263 vreg.264 ) <265>;
            ( vreg.266 var=19 ) add___Pvoid ( vreg.178 vreg.124 ) <266>;
            ( vreg.267 var=15 ) load___i32 ( vreg.266 ) <267>;
            ( vreg.268 var=19 ) add___Pvoid ( vreg.182 vreg.124 ) <268>;
            ( vreg.269 var=15 ) load___i32 ( vreg.268 ) <269>;
            ( vreg.270 var=15 ) mul___i32 ( vreg.269 vreg.267 ) <270>;
            ( vreg.271 var=19 ) add___Pvoid ( vreg.187 vreg.124 ) <271>;
            ( ) store___i32 ( vreg.270 vreg.271 ) <272>;
            ( vreg.273 var=19 ) add___Pvoid ( vreg.178 vreg.19 ) <273>;
            ( vreg.274 var=15 ) load___i32 ( vreg.273 ) <274>;
            ( vreg.275 var=19 ) add___Pvoid ( vreg.182 vreg.19 ) <275>;
            ( vreg.276 var=15 ) load___i32 ( vreg.275 ) <276>;
            ( vreg.277 var=15 ) mul___i32 ( vreg.276 vreg.274 ) <277>;
            ( vreg.278 var=19 ) add___Pvoid ( vreg.187 vreg.19 ) <278>;
            ( ) store___i32 ( vreg.277 vreg.278 ) <279>;
            ( vreg.280 var=19 ) add___Pvoid ( vreg.178 vreg.139 ) <280>;
            ( vreg.281 var=15 ) load___i32 ( vreg.280 ) <281>;
            ( vreg.282 var=19 ) add___Pvoid ( vreg.182 vreg.139 ) <282>;
            ( vreg.283 var=15 ) load___i32 ( vreg.282 ) <283>;
            ( vreg.284 var=15 ) mul___i32 ( vreg.283 vreg.281 ) <284>;
            ( vreg.285 var=19 ) add___Pvoid ( vreg.187 vreg.139 ) <285>;
            ( ) store___i32 ( vreg.284 vreg.285 ) <286>;
            ( vreg.287 var=19 ) add___Pvoid ( vreg.178 vreg.147 ) <287>;
            ( vreg.288 var=15 ) load___i32 ( vreg.287 ) <288>;
            ( vreg.289 var=19 ) add___Pvoid ( vreg.182 vreg.147 ) <289>;
            ( vreg.290 var=15 ) load___i32 ( vreg.289 ) <290>;
            ( vreg.291 var=15 ) mul___i32 ( vreg.290 vreg.288 ) <291>;
            ( vreg.292 var=19 ) add___Pvoid ( vreg.187 vreg.147 ) <292>;
            ( ) store___i32 ( vreg.291 vreg.292 ) <293>;
            ( vreg.294 var=34 ) const ( ) <294>;
            ( vreg.295 var=9 ) const ( ) <295>;
            ( ) lcall /* llvm___aie2___release */ ( vreg.295 vreg.294 vreg.124 vreg.155 ) <296>;
            ( vreg.297 var=34 ) const ( ) <297>;
            ( vreg.298 var=9 ) const ( ) <298>;
            ( ) lcall /* llvm___aie2___release */ ( vreg.298 vreg.297 vreg.159 vreg.155 ) <299>;
            ( vreg.300 var=34 ) const ( ) <300>;
            ( vreg.301 var=9 ) const ( ) <301>;
            ( ) lcall_tail /* llvm___aie2___release */ ( vreg.301 vreg.300 vreg.163 vreg.155 ) <302>;
            ( vreg.303 var=40 ) const ( ) <303>;
            ( vreg.304 var=4 ) add___i64 ( vreg.8 vreg.303 ) <304>;
            ( vreg.305 var=41 ) const ( ) <305>;
            ( vreg.306 var=42 ) setult___i64 ( vreg.8 vreg.305 ) <306>;
            ( vreg.307 var=15 ) zext___i1___i32 ( vreg.306 ) <307>;
          } #12
          if {
            { // no associated BB
              ( ) if_expr ( vreg.306 ) <308>;
            } #14
            {
              // NOTE: GOTO FROM BB#2 TO BB#2 [HIDDEN]
            } #15
            {
              // NOTE: GOTO FROM BB#2 TO BB#3 [HIDDEN]
            } #16
            { // no associated BB
            } #17
          } #13 // if
        } #10
        { // no associated BB
          ( ) while_expr ( vreg.306 ) <310>;
          ( ) backedge_taken_count ( vreg.6 ) <311>;
        } #18
      } #8// do_while
      // NOTE: GOTO FROM BB#2 TO BB#3 [HIDDEN]
      { // BB#3
        ( vreg.312 var=43 ) const ( ) <312>;
        ( vreg.313 var=4 ) add___i64 ( vreg.4 vreg.312 ) <313>;
        ( vreg.314 var=44 ) const ( ) <314>;
        ( vreg.315 var=42 ) setne___i64 ( vreg.313 vreg.314 ) <315>;
        ( vreg.316 var=15 ) zext___i1___i32 ( vreg.315 ) <316>;
      } #19
      if {
        { // no associated BB
          ( ) if_expr ( vreg.315 ) <317>;
        } #21
        {
          // NOTE: GOTO FROM BB#3 TO BB#1 [HIDDEN]
        } #22
        {
          // NOTE: GOTO FROM BB#3 TO BB#4 [HIDDEN]
        } #23
        { // no associated BB
        } #24
      } #20 // if
    } #5
    { // no associated BB
      ( ) while_expr ( vreg.315 ) <319>;
      ( ) backedge_taken_count ( vreg.2 ) <320>;
    } #25
  } #3// do_while
  // NOTE: GOTO FROM BB#3 TO BB#4 [HIDDEN]
  { // BB#4
    ( ) return ( ) <321>;
  } #26 nxt=-2
} #1
0 : 'core_0_2';
----------
0 : (0,0:0,0);
----------
==========alias_info
26 : 1;
30 : 1;
35 : 0;
38 : 1;
40 : 1;
43 : 0;
46 : 1;
48 : 1;
51 : 0;
54 : 1;
56 : 1;
59 : 0;
62 : 1;
64 : 1;
67 : 0;
70 : 1;
72 : 1;
75 : 0;
78 : 1;
80 : 1;
83 : 0;
86 : 1;
88 : 1;
91 : 0;
94 : 1;
96 : 1;
99 : 0;
102 : 1;
104 : 1;
107 : 0;
110 : 1;
112 : 1;
115 : 0;
118 : 1;
120 : 1;
123 : 0;
126 : 1;
128 : 1;
131 : 0;
133 : 1;
135 : 1;
138 : 0;
141 : 1;
143 : 1;
146 : 0;
149 : 1;
151 : 1;
154 : 0;
179 : 1;
183 : 1;
188 : 0;
190 : 1;
192 : 1;
195 : 0;
197 : 1;
199 : 1;
202 : 0;
204 : 1;
206 : 1;
209 : 0;
211 : 1;
213 : 1;
216 : 0;
218 : 1;
220 : 1;
223 : 0;
225 : 1;
227 : 1;
230 : 0;
232 : 1;
234 : 1;
237 : 0;
239 : 1;
241 : 1;
244 : 0;
246 : 1;
248 : 1;
251 : 0;
253 : 1;
255 : 1;
258 : 0;
260 : 1;
262 : 1;
265 : 0;
267 : 1;
269 : 1;
272 : 0;
274 : 1;
276 : 1;
279 : 0;
281 : 1;
283 : 1;
286 : 0;
288 : 1;
290 : 1;
293 : 0;

// Function: void llvm___aie2___acquire(i32 , i32 )
[
  0 : llvm___aie2___acquire bnd=e
  1 : _cst val=1f typ=__i1
  2 : __arg0 typ=__i32
  3 : __arg1 typ=__i32
  4 : _Z25chess_separator_schedulerv bnd=e
  5 : _cst val=0f
  6 : __regcall3__chessintr_void_acquire_guarded___uint___uint bnd=e
]
Lllvm___aie2___acquire
{
  { // BB#0
    ( vreg.1 var=1 ) const ( ) <1>;
    ( vreg.2 var=2 ) inp ( ) <2>;
    ( vreg.3 var=3 ) inp ( ) <3>;
    ( ) chain_tie_volatile ( ) <4>;
    ( vreg.5 var=4 ) const ( ) <5>;
    ( vreg.6 var=5 ) const ( ) <6>;
    ( ) lcall /* _Z25chess_separator_schedulerv */ ( vreg.6 vreg.5 ) <7>;
    ( vreg.8 var=6 ) const ( ) <8>;
    ( vreg.9 var=5 ) const ( ) <9>;
    ( ) lcall /* __regcall3__chessintr_void_acquire_guarded___uint___uint */ ( vreg.9 vreg.8 vreg.2 vreg.3 ) <10>;
    ( vreg.11 var=4 ) const ( ) <11>;
    ( vreg.12 var=5 ) const ( ) <12>;
    ( ) lcall /* _Z25chess_separator_schedulerv */ ( vreg.12 vreg.11 ) <13>;
    ( ) chain_tie_volatile ( ) <14>;
    ( ) return ( ) <15>;
  } #2 nxt=-2
} #1
0 : 'llvm___aie2___acquire';
----------
0 : (0,0:0,0);
----------
==========alias_info
4 :;
14 :;

// Function: void llvm___aie2___release(i32 , i32 )
[
  0 : llvm___aie2___release bnd=e
  1 : _cst val=1f typ=__i1
  2 : __arg0 typ=__i32
  3 : __arg1 typ=__i32
  4 : _Z25chess_separator_schedulerv bnd=e
  5 : _cst val=0f
  6 : __regcall3__chessintr_void_release_guarded___uint___sint bnd=e
]
Lllvm___aie2___release
{
  { // BB#0
    ( vreg.1 var=1 ) const ( ) <1>;
    ( vreg.2 var=2 ) inp ( ) <2>;
    ( vreg.3 var=3 ) inp ( ) <3>;
    ( ) chain_tie_volatile ( ) <4>;
    ( vreg.5 var=4 ) const ( ) <5>;
    ( vreg.6 var=5 ) const ( ) <6>;
    ( ) lcall /* _Z25chess_separator_schedulerv */ ( vreg.6 vreg.5 ) <7>;
    ( vreg.8 var=6 ) const ( ) <8>;
    ( vreg.9 var=5 ) const ( ) <9>;
    ( ) lcall /* __regcall3__chessintr_void_release_guarded___uint___sint */ ( vreg.9 vreg.8 vreg.2 vreg.3 ) <10>;
    ( vreg.11 var=4 ) const ( ) <11>;
    ( vreg.12 var=5 ) const ( ) <12>;
    ( ) lcall /* _Z25chess_separator_schedulerv */ ( vreg.12 vreg.11 ) <13>;
    ( ) chain_tie_volatile ( ) <14>;
    ( ) return ( ) <15>;
  } #2 nxt=-2
} #1
0 : 'llvm___aie2___release';
----------
0 : (0,0:0,0);
----------
==========alias_info
4 :;
14 :;

// Function: void llvm___aie___event0()
[
  0 : llvm___aie___event0 bnd=e
  1 : _cst val=1f typ=__i1
  2 : _cst val=0f typ=uint2_t
  3 : __regcall3__chessintr_void_event_uint2_t bnd=e
  4 : _cst val=0f
]
Lllvm___aie___event0
{
  { // BB#0
    ( vreg.1 var=1 ) const ( ) <1>;
    ( vreg.2 var=2 ) const ( ) <2>;
    ( vreg.3 var=3 ) const ( ) <3>;
    ( vreg.4 var=4 ) const ( ) <4>;
    ( ) lcall_tail /* __regcall3__chessintr_void_event_uint2_t */ ( vreg.4 vreg.3 vreg.2 ) <5>;
    ( ) return ( ) <6>;
  } #2 nxt=-2
} #1
0 : 'llvm___aie___event0';
----------
0 : (0,0:0,0);
----------

// Function: void llvm___aie___event1()
[
  0 : llvm___aie___event1 bnd=e
  1 : _cst val=1f typ=__i1
  2 : _cst val=1f typ=uint2_t
  3 : __regcall3__chessintr_void_event_uint2_t bnd=e
  4 : _cst val=0f
]
Lllvm___aie___event1
{
  { // BB#0
    ( vreg.1 var=1 ) const ( ) <1>;
    ( vreg.2 var=2 ) const ( ) <2>;
    ( vreg.3 var=3 ) const ( ) <3>;
    ( vreg.4 var=4 ) const ( ) <4>;
    ( ) lcall_tail /* __regcall3__chessintr_void_event_uint2_t */ ( vreg.4 vreg.3 vreg.2 ) <5>;
    ( ) return ( ) <6>;
  } #2 nxt=-2
} #1
0 : 'llvm___aie___event1';
----------
0 : (0,0:0,0);
----------

[
1 : _cst val=64f
2 : _cst val=4f
3 : in1_cons_buff_1 typ=__Pvoid bnd=e
4 : in1_cons_buff_0 typ=__Pvoid bnd=e
5 : in2_cons_buff_1 typ=__Pvoid bnd=e
6 : in2_cons_buff_0 typ=__Pvoid bnd=e
7 : out_buff_1 typ=__Pvoid bnd=e
8 : out_buff_0 typ=__Pvoid bnd=e
]
llvmgvt
{ // no associated BB
( vreg.1 var=1 ) const ( ) <1>;
( vreg.2 var=2 ) const ( ) <2>;
( vreg.3 var=3 ) global ( vreg.1 vreg.2 ) <3>;
( ) out ( vreg.3 ) <4>;
( vreg.5 var=1 ) const ( ) <5>;
( vreg.6 var=2 ) const ( ) <6>;
( vreg.7 var=4 ) global ( vreg.5 vreg.6 ) <7>;
( ) out ( vreg.7 ) <8>;
( vreg.9 var=1 ) const ( ) <9>;
( vreg.10 var=2 ) const ( ) <10>;
( vreg.11 var=5 ) global ( vreg.9 vreg.10 ) <11>;
( ) out ( vreg.11 ) <12>;
( vreg.13 var=1 ) const ( ) <13>;
( vreg.14 var=2 ) const ( ) <14>;
( vreg.15 var=6 ) global ( vreg.13 vreg.14 ) <15>;
( ) out ( vreg.15 ) <16>;
( vreg.17 var=1 ) const ( ) <17>;
( vreg.18 var=2 ) const ( ) <18>;
( vreg.19 var=7 ) global ( vreg.17 vreg.18 ) <19>;
( ) out ( vreg.19 ) <20>;
( vreg.21 var=1 ) const ( ) <21>;
( vreg.22 var=2 ) const ( ) <22>;
( vreg.23 var=8 ) global ( vreg.21 vreg.22 ) <23>;
( ) out ( vreg.23 ) <24>;
} #0
0 : './dummy_file';
----------
0 : (0,0:0,0);
----------
==========debug_type_info
==========data_init
	.section	".linker-options","e",@llvm_linker_options
