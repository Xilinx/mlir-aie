
// File generated by noodle version U-2022.12#3eec2545bc#230622, Thu Jul 25 11:16:44 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// noodle -I/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2/aietools/data/aie_ml/lib -I/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2/aietools/data/aie_ml/lib/isg -I/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2/aietools/data/aie_ml/lib/runtime_cxx/libcxx-lite/include -I/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2/aietools/data/aie_ml/lib/runtime_cxx/libs/libcxx-9.0.0/include-lite -I/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2/aietools/data/aie_ml/lib/runtime/include -I<BOOST_DIR> -D__AIENGINE__ -D__AIE_ARCH__=20 -D__AIEARCH__=20 -D__tct_tgt__=230622 -iaie_core.h +Sinl +Olbb=200 +Opmsa +NOpld +w/scratch/andrab/mlir-aie/programming_examples/mlir/dynamic_objectfifo/sliding_window/build/aie2-objfifo-lowered.mlir.prj/work /scratch/andrab/mlir-aie/programming_examples/mlir/dynamic_objectfifo/sliding_window/build/aie2-objfifo-lowered.mlir.prj/work/input.llchesslinked.sfg +Q1=+Sinl,+Olbb=200,+Opmsa,+NOpld +Q2=+Sinl,+Olbb=200,+Opmsa,+NOpld +Q3=+Sinl,+Olbb=1000,+Opmsa,+NOpld +Qfast=+Sinl,+Olbb=1000,+Opmsa,+NOpld,+Opfp +Qs=+Sinl,+Olbb=200,+Opmsa,+NOpld +Qz=+Sinl,+Olbb=200,+Opmsa,+NOpld me


/***
!!  void sequence(void *, void *)
Fsequence : user_defined, called {
    fnm : "sequence" 'void sequence(void *, void *)';
    arg : ( addr:i addr:i addr:i );
    loc : ( LR[0] P[0] P[1] );
    flc : ( P[6] P[7] R[16] R[17] R[18] R[19] R[20] R[21] R[22] R[23] );
    vac : ( crMCDEn[0] crPackSign[0] crSCDEn[0] crSRSSign[0] crUPSSign[0] crUnpackSign[0] crVaddSign[0] );
    frm : ( );
}
****
***/

[
    0 : sequence typ=iword bnd=e stl=PM
    2 : __arg0 typ=addr bnd=p
    3 : __arg1 typ=addr bnd=p
    7 : __la typ=addr bnd=p
   78 : __R_LC typ=w32 bnd=d stl=LC
   79 : __R_LE typ=addr bnd=d stl=LE
   80 : __R_LS typ=addr bnd=d stl=LS
   98 : __ct_0 typ=u1 val=0f bnd=m
   99 : __ct_1 typ=u1 val=1f bnd=m
  104 : __R_SP typ=addr bnd=d stl=SP
  105 : __sp typ=addr bnd=b stl=SP
  106 : __rd___sp typ=addr bnd=m
  107 : __wr___sp typ=addr bnd=m
  108 : __rd___sp typ=addr bnd=m
  110 : __wr___sp typ=addr bnd=m
  125 : __ct_0s0 typ=amod val=0s0 bnd=m
  126 : __ct_0S0 typ=amod val=0S0 bnd=m
]
Fsequence {
    (__la.7 var=7 stl=LR off=0) inp ()  <12>;
    (__la.8 var=7) deassign (__la.7)  <13>;
    () void_ret_addr (__la.8)  <14>;
    (__arg0.9 var=2 stl=P off=0) inp ()  <15>;
    (__arg1.11 var=3 stl=P off=1) inp ()  <17>;
    (__ct_0.106 var=98) const ()  <184>;
    (__ct_1.108 var=99) const ()  <186>;
    () sink (__ct_0.106)  <188>;
    () sink (__ct_1.108)  <189>;
    (__R_SP.114 var=104) st_def ()  <198>;
    (__sp.115 var=105) source ()  <199>;
    (__rd___sp.116 var=106) rd_res_reg (__R_SP.114 __sp.115)  <200>;
    (__R_SP.118 var=104 __sp.119 var=105) wr_res_reg (__wr___sp.134 __sp.115)  <202>;
    (__rd___sp.120 var=108) rd_res_reg (__R_SP.114 __sp.119)  <203>;
    (__R_SP.123 var=104 __sp.124 var=105) wr_res_reg (__wr___sp.139 __sp.119)  <207>;
    () sink (__sp.124)  <208>;
    (__wr___sp.134 var=107) __Pvoid_add___Pvoid_amod (__rd___sp.116 __ct_0s0.143)  <241>;
    (__wr___sp.139 var=110) __Pvoid_add___Pvoid_amod (__rd___sp.120 __ct_0S0.144)  <249>;
    (__ct_0s0.143 var=125) const ()  <261>;
    (__ct_0S0.144 var=126) const ()  <263>;
} #6 off=0 nxt=-2
0 : 'sequence';
----------
0 : (0,0:0,0);
----------

