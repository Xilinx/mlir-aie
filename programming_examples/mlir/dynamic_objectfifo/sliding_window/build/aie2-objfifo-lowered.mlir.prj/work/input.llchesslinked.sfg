
// Function: void sequence((NOTE: unhandled type) , (NOTE: unhandled type) )
[
  0 : sequence bnd=e
  1 : _cst val=1f typ=__i1
  2 : __arg0 typ=__Pvoid
  3 : __arg1 typ=__Pvoid
]
Lsequence
{
  { // BB#0
    ( vreg.1 var=1 ) const ( ) <1>;
    ( vreg.2 var=2 ) inp ( ) <2>;
    ( vreg.3 var=3 ) inp ( ) <3>;
    ( ) return ( ) <4>;
  } #2 nxt=-2
} #1
0 : 'sequence';
----------
0 : (0,0:0,0);
----------

// Function: void core_0_2()
[
  0 : core_0_2 bnd=e
  1 : _cst val=1f typ=__i1
  2 : _cst val=4294967294f typ=__i64
  3 : _cst val=0f typ=__i64
  4 : _cst val=0f typ=__i32
  5 : __tmp typ=__i32
  6 : __tmp typ=__i64
  7 : _cst val=1f typ=__i64
  8 : _cst val=255f typ=__i32
  9 : _cst val=171f typ=__i32
  10 : _cst val=9f typ=__i64
  11 : _cst val=3f typ=__i32
  12 : _cst val=3735928559f typ=__i64
  13 : __tmp typ=__Pvoid
  14 : _cst val=64f typ=__i64
  15 : _cst val=256f
  16 : _cst val=4f
  17 : input_fifo_cons_buff_1 typ=__Pvoid bnd=e
  18 : input_fifo_cons_buff_0 typ=__Pvoid bnd=e
  19 : _cst val=2f typ=__i32
  20 : __tmp typ=__i1
  21 : input_fifo_cons_buff_2 typ=__Pvoid bnd=e
  22 : _cst val=1f typ=__i32
  23 : output_fifo_buff_1 typ=__Pvoid bnd=e
  24 : output_fifo_buff_0 typ=__Pvoid bnd=e
  25 : _cst val=50f typ=__i32
  26 : _cst val=-1f typ=__i32
  27 : llvm___aie2___acquire bnd=e
  28 : _cst val=0f
  29 : _cst val=-2f typ=__i32
  30 : _cst val=49f typ=__i32
  31 : sum_64_i32 bnd=e
  32 : _cst val=48f typ=__i32
  33 : llvm___aie2___release bnd=e
  34 : _cst val=51f typ=__i32
]
Lcore_0_2
{
  { // BB#0
    ( vreg.1 var=1 ) const ( ) <1>;
    ( vreg.2 var=2 ) const ( ) <2>;
    ( vreg.3 var=3 ) const ( ) <3>;
    ( vreg.4 var=4 ) const ( ) <4>;
  } #2
  // NOTE: GOTO FROM BB#0 TO BB#1 [HIDDEN]
  do {
    { // no associated BB
      ( vreg.173 var=5 ) entry ( vreg.161 vreg.4 ) <173>;
      ( vreg.174 var=6 ) entry ( vreg.168 vreg.3 ) <174>;
    } #4
    {
      sync {
        ( vreg.5 var=5 ) sync_link ( vreg.173 ) sid=1 <5>;
        ( vreg.6 var=6 ) sync_link ( vreg.174 ) sid=2 <6>;
      } #6
      { // BB#1
        ( ) chain_tie_loop ( ) <7>;
        ( vreg.8 var=7 ) const ( ) <8>;
        ( vreg.9 var=6 ) and___i64 ( vreg.6 vreg.8 ) <9>;
        ( vreg.10 var=8 ) const ( ) <10>;
        ( vreg.11 var=5 ) and___i32 ( vreg.5 vreg.10 ) <11>;
        ( vreg.12 var=9 ) const ( ) <12>;
        ( vreg.13 var=5 ) mul___i32 ( vreg.11 vreg.12 ) <13>;
        ( vreg.14 var=10 ) const ( ) <14>;
        ( vreg.15 var=5 ) trunc___i64___i32 ( vreg.14 ) <15>;
        ( vreg.16 var=5 ) srl___i32 ( vreg.13 vreg.15 ) <16>;
        ( vreg.17 var=11 ) const ( ) <17>;
        ( vreg.18 var=5 ) mul___i32 ( vreg.16 vreg.17 ) <18>;
        ( vreg.19 var=5 ) sub___i32 ( vreg.5 vreg.18 ) <19>;
        ( vreg.20 var=5 ) and___i32 ( vreg.19 vreg.10 ) <20>;
        ( vreg.21 var=12 ) const ( ) <21>;
        ( vreg.22 var=13 ) inttoptr___i64___Pvoid ( vreg.21 ) <22>;
        ( vreg.23 var=14 ) const ( ) <23>;
        ( vreg.24 var=3 ) const ( ) <24>;
        ( vreg.25 var=15 ) const ( ) <25>;
        ( vreg.26 var=16 ) const ( ) <26>;
        ( vreg.27 var=17 ) global ( vreg.25 vreg.26 ) <27>;
        ( vreg.28 var=15 ) const ( ) <28>;
        ( vreg.29 var=16 ) const ( ) <29>;
        ( vreg.30 var=18 ) global ( vreg.28 vreg.29 ) <30>;
        ( vreg.31 var=19 ) const ( ) <31>;
        ( vreg.32 var=20 ) seteq___i32 ( vreg.20 vreg.31 ) <32>;
        ( vreg.33 var=5 ) zext___i1___i32 ( vreg.32 ) <33>;
      } #7
      if {
        { // no associated BB
          ( ) if_expr ( vreg.32 ) <34>; // weights: 715827883,1431655765 : 33%
        } #9
        {
          // NOTE: GOTO FROM BB#1 TO BB#3 [HIDDEN]
          { // BB#3
            ( vreg.35 var=12 ) const ( ) <35>;
            ( vreg.36 var=13 ) inttoptr___i64___Pvoid ( vreg.35 ) <36>;
            ( vreg.37 var=7 ) const ( ) <37>;
            ( vreg.38 var=14 ) const ( ) <38>;
            ( vreg.39 var=3 ) const ( ) <39>;
            ( vreg.40 var=15 ) const ( ) <40>;
            ( vreg.41 var=16 ) const ( ) <41>;
            ( vreg.42 var=18 ) global ( vreg.40 vreg.41 ) <42>;
            ( vreg.43 var=15 ) const ( ) <43>;
            ( vreg.44 var=16 ) const ( ) <44>;
            ( vreg.45 var=21 ) global ( vreg.43 vreg.44 ) <45>;
          } #11
          // NOTE: GOTO FROM BB#3 TO BB#4 [HIDDEN]
        } #10
        {
          // NOTE: GOTO FROM BB#1 TO BB#10 [HIDDEN]
          { // BB#10
            ( vreg.46 var=22 ) const ( ) <46>;
            ( vreg.47 var=20 ) setne___i32 ( vreg.20 vreg.46 ) <47>;
            ( vreg.48 var=5 ) zext___i1___i32 ( vreg.47 ) <48>;
          } #13
          if {
            { // no associated BB
              ( ) if_expr ( vreg.47 ) <49>; // weights: 1073741823,1073741825 : 49%
            } #15
            {
              // NOTE: GOTO FROM BB#10 TO BB#4 [HIDDEN]
            } #16
            {
              // NOTE: GOTO FROM BB#10 TO BB#2 [HIDDEN]
              { // BB#2
                ( vreg.50 var=12 ) const ( ) <50>;
                ( vreg.51 var=13 ) inttoptr___i64___Pvoid ( vreg.50 ) <51>;
                ( vreg.52 var=7 ) const ( ) <52>;
                ( vreg.53 var=14 ) const ( ) <53>;
                ( vreg.54 var=3 ) const ( ) <54>;
                ( vreg.55 var=15 ) const ( ) <55>;
                ( vreg.56 var=16 ) const ( ) <56>;
                ( vreg.57 var=21 ) global ( vreg.55 vreg.56 ) <57>;
                ( vreg.58 var=15 ) const ( ) <58>;
                ( vreg.59 var=16 ) const ( ) <59>;
                ( vreg.60 var=17 ) global ( vreg.58 vreg.59 ) <60>;
              } #18
              // NOTE: GOTO FROM BB#2 TO BB#4 [HIDDEN]
            } #17
            { // no associated BB
              ( vreg.61 var=13 ) merge ( vreg.22 vreg.51 ) <61>;
              ( vreg.62 var=13 ) merge ( vreg.30 vreg.60 ) <62>;
              ( vreg.63 var=6 ) merge ( vreg.24 vreg.54 ) <63>;
              ( vreg.64 var=6 ) merge ( vreg.23 vreg.53 ) <64>;
              ( vreg.65 var=6 ) merge ( vreg.8 vreg.52 ) <65>;
              ( vreg.66 var=13 ) merge ( vreg.22 vreg.51 ) <66>;
              ( vreg.67 var=13 ) merge ( vreg.27 vreg.57 ) <67>;
              ( vreg.68 var=6 ) merge ( vreg.24 vreg.54 ) <68>;
              ( vreg.69 var=6 ) merge ( vreg.23 vreg.53 ) <69>;
              ( vreg.70 var=6 ) merge ( vreg.8 vreg.52 ) <70>;
            } #19
          } #14 // if
        } #12
        { // no associated BB
          ( vreg.71 var=13 ) merge ( vreg.36 vreg.61 ) <71>;
          ( vreg.72 var=13 ) merge ( vreg.45 vreg.62 ) <72>;
          ( vreg.73 var=6 ) merge ( vreg.39 vreg.63 ) <73>;
          ( vreg.74 var=6 ) merge ( vreg.38 vreg.64 ) <74>;
          ( vreg.75 var=6 ) merge ( vreg.37 vreg.65 ) <75>;
          ( vreg.76 var=13 ) merge ( vreg.36 vreg.66 ) <76>;
          ( vreg.77 var=13 ) merge ( vreg.42 vreg.67 ) <77>;
          ( vreg.78 var=6 ) merge ( vreg.39 vreg.68 ) <78>;
          ( vreg.79 var=6 ) merge ( vreg.38 vreg.69 ) <79>;
          ( vreg.80 var=6 ) merge ( vreg.37 vreg.70 ) <80>;
        } #20
      } #8 // if
      sync {
        ( vreg.81 var=13 ) sync_link ( vreg.71 ) sid=3 <81>;
        ( vreg.82 var=13 ) sync_link ( vreg.72 ) sid=4 <82>;
        ( vreg.83 var=6 ) sync_link ( vreg.73 ) sid=5 <83>;
        ( vreg.84 var=6 ) sync_link ( vreg.74 ) sid=6 <84>;
        ( vreg.85 var=6 ) sync_link ( vreg.75 ) sid=7 <85>;
        ( vreg.86 var=13 ) sync_link ( vreg.76 ) sid=8 <86>;
        ( vreg.87 var=13 ) sync_link ( vreg.77 ) sid=9 <87>;
        ( vreg.88 var=6 ) sync_link ( vreg.78 ) sid=10 <88>;
        ( vreg.89 var=6 ) sync_link ( vreg.79 ) sid=11 <89>;
        ( vreg.90 var=6 ) sync_link ( vreg.80 ) sid=12 <90>;
      } #21
      { // BB#4
        ( vreg.91 var=3 ) const ( ) <91>;
        ( vreg.92 var=20 ) seteq___i64 ( vreg.9 vreg.91 ) <92>;
        ( vreg.93 var=5 ) zext___i1___i32 ( vreg.92 ) <93>;
        ( vreg.94 var=15 ) const ( ) <94>;
        ( vreg.95 var=16 ) const ( ) <95>;
        ( vreg.96 var=23 ) global ( vreg.94 vreg.95 ) <96>;
        ( vreg.97 var=15 ) const ( ) <97>;
        ( vreg.98 var=16 ) const ( ) <98>;
        ( vreg.99 var=24 ) global ( vreg.97 vreg.98 ) <99>;
        ( vreg.100 var=13 ) select___Pvoid ( vreg.92 vreg.99 vreg.96 ) <100>;
        ( vreg.101 var=12 ) const ( ) <101>;
        ( vreg.102 var=13 ) inttoptr___i64___Pvoid ( vreg.101 ) <102>;
        ( vreg.103 var=7 ) const ( ) <103>;
        ( vreg.104 var=14 ) const ( ) <104>;
        ( vreg.105 var=25 ) const ( ) <105>;
        ( vreg.106 var=26 ) const ( ) <106>;
        ( vreg.107 var=27 ) const ( ) <107>;
        ( vreg.108 var=28 ) const ( ) <108>;
        ( ) lcall_tail /* llvm___aie2___acquire */ ( vreg.108 vreg.107 vreg.105 vreg.106 ) <109>;
        ( vreg.110 var=22 ) const ( ) <110>;
        ( vreg.111 var=29 ) const ( ) <111>;
        ( vreg.112 var=2 ) const ( ) <112>;
        ( vreg.113 var=20 ) seteq___i64 ( vreg.6 vreg.112 ) <113>;
        ( vreg.114 var=5 ) zext___i1___i32 ( vreg.113 ) <114>;
      } #22
      if {
        { // no associated BB
          ( ) if_expr ( vreg.113 ) <115>; // weights: 715827883,1431655765 : 33%
        } #24
        {
          // NOTE: GOTO FROM BB#4 TO BB#6 [HIDDEN]
          sync {
            ( vreg.116 var=5 ) sync_link ( vreg.111 ) sid=13 <116>;
            ( vreg.117 var=13 ) sync_link ( vreg.86 ) sid=14 <117>;
            ( vreg.118 var=13 ) sync_link ( vreg.87 ) sid=15 <118>;
            ( vreg.119 var=6 ) sync_link ( vreg.88 ) sid=16 <119>;
            ( vreg.120 var=6 ) sync_link ( vreg.89 ) sid=17 <120>;
            ( vreg.121 var=6 ) sync_link ( vreg.90 ) sid=18 <121>;
            ( vreg.122 var=5 ) sync_link ( vreg.110 ) sid=19 <122>;
            ( vreg.123 var=5 ) sync_link ( vreg.110 ) sid=20 <123>;
          } #26
          { // BB#6
            ( vreg.124 var=30 ) const ( ) <124>;
            ( vreg.125 var=27 ) const ( ) <125>;
            ( vreg.126 var=28 ) const ( ) <126>;
            ( ) lcall /* llvm___aie2___acquire */ ( vreg.126 vreg.125 vreg.124 vreg.116 ) <127>;
            ( vreg.128 var=31 ) const ( ) <128>;
            ( vreg.129 var=28 ) const ( ) <129>;
            ( ) lcall /* sum_64_i32 */ ( vreg.129 vreg.128 vreg.82 vreg.118 vreg.100 ) <130>;
            ( vreg.131 var=32 ) const ( ) <131>;
            ( vreg.132 var=33 ) const ( ) <132>;
            ( vreg.133 var=28 ) const ( ) <133>;
            ( ) lcall_tail /* llvm___aie2___release */ ( vreg.133 vreg.132 vreg.131 vreg.122 ) <134>;
          } #27
          // NOTE: GOTO FROM BB#6 TO BB#7 [HIDDEN]
        } #25
        {
          // NOTE: GOTO FROM BB#4 TO BB#11 [HIDDEN]
          { // BB#11
            ( vreg.135 var=3 ) const ( ) <135>;
            ( vreg.136 var=20 ) setne___i64 ( vreg.6 vreg.135 ) <136>;
            ( vreg.137 var=5 ) zext___i1___i32 ( vreg.136 ) <137>;
          } #29
          if {
            { // no associated BB
              ( ) if_expr ( vreg.136 ) <138>; // weights: 1073741823,1073741825 : 49%
            } #31
            {
              // NOTE: GOTO FROM BB#11 TO BB#9 [HIDDEN]
              { // BB#9
                ( vreg.139 var=19 ) const ( ) <139>;
                ( vreg.140 var=26 ) const ( ) <140>;
              } #33
              { // GOTO FROM BB#9 TO BB#6
                ( ) sync_sink ( vreg.140 ) sid=13 <141>;
                ( ) sync_sink ( vreg.81 ) sid=14 <142>;
                ( ) sync_sink ( vreg.82 ) sid=15 <143>;
                ( ) sync_sink ( vreg.83 ) sid=16 <144>;
                ( ) sync_sink ( vreg.84 ) sid=17 <145>;
                ( ) sync_sink ( vreg.85 ) sid=18 <146>;
                ( ) sync_sink ( vreg.139 ) sid=19 <147>;
                ( ) sync_sink ( vreg.139 ) sid=20 <148>;
                ( vreg.158 var=5 ) never ( ) <158>;
              } #34 nxt=-3 tgt=26
            } #32
            {
              // NOTE: GOTO FROM BB#11 TO BB#5 [HIDDEN]
              { // BB#5
                ( vreg.149 var=30 ) const ( ) <149>;
                ( vreg.150 var=26 ) const ( ) <150>;
                ( vreg.151 var=27 ) const ( ) <151>;
                ( vreg.152 var=28 ) const ( ) <152>;
                ( ) lcall /* llvm___aie2___acquire */ ( vreg.152 vreg.151 vreg.149 vreg.150 ) <153>;
                ( vreg.154 var=31 ) const ( ) <154>;
                ( vreg.155 var=28 ) const ( ) <155>;
                ( ) lcall_tail /* sum_64_i32 */ ( vreg.155 vreg.154 vreg.82 vreg.82 vreg.100 ) <156>;
                ( vreg.157 var=4 ) const ( ) <157>;
              } #36
              // NOTE: GOTO FROM BB#5 TO BB#7 [HIDDEN]
            } #35
            { // no associated BB
              ( vreg.159 var=5 ) merge ( vreg.158 vreg.157 ) <159>;
            } #37
          } #30 // if
        } #28
        { // no associated BB
          ( vreg.160 var=5 ) merge ( vreg.123 vreg.159 ) <160>;
        } #38
      } #23 // if
      sync {
        ( vreg.161 var=5 ) sync_link ( vreg.160 ) sid=21 <161>;
      } #39
      { // BB#7
        ( vreg.162 var=34 ) const ( ) <162>;
        ( vreg.163 var=22 ) const ( ) <163>;
        ( vreg.164 var=33 ) const ( ) <164>;
        ( vreg.165 var=28 ) const ( ) <165>;
        ( ) lcall_tail /* llvm___aie2___release */ ( vreg.165 vreg.164 vreg.162 vreg.163 ) <166>;
        ( vreg.167 var=7 ) const ( ) <167>;
        ( vreg.168 var=6 ) add___i64 ( vreg.6 vreg.167 ) <168>;
        ( vreg.169 var=2 ) const ( ) <169>;
        ( vreg.170 var=20 ) setult___i64 ( vreg.6 vreg.169 ) <170>;
        ( vreg.171 var=5 ) zext___i1___i32 ( vreg.170 ) <171>;
      } #40
      if {
        { // no associated BB
          ( ) if_expr ( vreg.170 ) <172>;
        } #42
        {
          // NOTE: GOTO FROM BB#7 TO BB#1 [HIDDEN]
        } #43
        {
          // NOTE: GOTO FROM BB#7 TO BB#8 [HIDDEN]
        } #44
        { // no associated BB
        } #45
      } #41 // if
    } #5
    { // no associated BB
      ( ) while_expr ( vreg.170 ) <175>;
      ( ) backedge_taken_count ( vreg.2 ) <176>;
    } #46
  } #3// do_while
  // NOTE: GOTO FROM BB#7 TO BB#8 [HIDDEN]
  { // BB#8
    ( ) return ( ) <177>;
  } #47 nxt=-2
} #1
0 : 'core_0_2';
----------
0 : (0,0:0,0);
----------

// Function: void llvm___aie2___acquire(i32 , i32 )
[
  0 : llvm___aie2___acquire bnd=e
  1 : _cst val=1f typ=__i1
  2 : __arg0 typ=__i32
  3 : __arg1 typ=__i32
  4 : _Z25chess_separator_schedulerv bnd=e
  5 : _cst val=0f
  6 : __regcall3__chessintr_void_acquire_guarded___uint___uint bnd=e
]
Lllvm___aie2___acquire
{
  { // BB#0
    ( vreg.1 var=1 ) const ( ) <1>;
    ( vreg.2 var=2 ) inp ( ) <2>;
    ( vreg.3 var=3 ) inp ( ) <3>;
    ( ) chain_tie_volatile ( ) <4>;
    ( vreg.5 var=4 ) const ( ) <5>;
    ( vreg.6 var=5 ) const ( ) <6>;
    ( ) lcall /* _Z25chess_separator_schedulerv */ ( vreg.6 vreg.5 ) <7>;
    ( vreg.8 var=6 ) const ( ) <8>;
    ( vreg.9 var=5 ) const ( ) <9>;
    ( ) lcall /* __regcall3__chessintr_void_acquire_guarded___uint___uint */ ( vreg.9 vreg.8 vreg.2 vreg.3 ) <10>;
    ( vreg.11 var=4 ) const ( ) <11>;
    ( vreg.12 var=5 ) const ( ) <12>;
    ( ) lcall /* _Z25chess_separator_schedulerv */ ( vreg.12 vreg.11 ) <13>;
    ( ) chain_tie_volatile ( ) <14>;
    ( ) return ( ) <15>;
  } #2 nxt=-2
} #1
0 : 'llvm___aie2___acquire';
----------
0 : (0,0:0,0);
----------
==========alias_info
4 :;
14 :;

// Function: void llvm___aie2___release(i32 , i32 )
[
  0 : llvm___aie2___release bnd=e
  1 : _cst val=1f typ=__i1
  2 : __arg0 typ=__i32
  3 : __arg1 typ=__i32
  4 : _Z25chess_separator_schedulerv bnd=e
  5 : _cst val=0f
  6 : __regcall3__chessintr_void_release_guarded___uint___sint bnd=e
]
Lllvm___aie2___release
{
  { // BB#0
    ( vreg.1 var=1 ) const ( ) <1>;
    ( vreg.2 var=2 ) inp ( ) <2>;
    ( vreg.3 var=3 ) inp ( ) <3>;
    ( ) chain_tie_volatile ( ) <4>;
    ( vreg.5 var=4 ) const ( ) <5>;
    ( vreg.6 var=5 ) const ( ) <6>;
    ( ) lcall /* _Z25chess_separator_schedulerv */ ( vreg.6 vreg.5 ) <7>;
    ( vreg.8 var=6 ) const ( ) <8>;
    ( vreg.9 var=5 ) const ( ) <9>;
    ( ) lcall /* __regcall3__chessintr_void_release_guarded___uint___sint */ ( vreg.9 vreg.8 vreg.2 vreg.3 ) <10>;
    ( vreg.11 var=4 ) const ( ) <11>;
    ( vreg.12 var=5 ) const ( ) <12>;
    ( ) lcall /* _Z25chess_separator_schedulerv */ ( vreg.12 vreg.11 ) <13>;
    ( ) chain_tie_volatile ( ) <14>;
    ( ) return ( ) <15>;
  } #2 nxt=-2
} #1
0 : 'llvm___aie2___release';
----------
0 : (0,0:0,0);
----------
==========alias_info
4 :;
14 :;

// Function: void llvm___aie___event0()
[
  0 : llvm___aie___event0 bnd=e
  1 : _cst val=1f typ=__i1
  2 : _cst val=0f typ=uint2_t
  3 : __regcall3__chessintr_void_event_uint2_t bnd=e
  4 : _cst val=0f
]
Lllvm___aie___event0
{
  { // BB#0
    ( vreg.1 var=1 ) const ( ) <1>;
    ( vreg.2 var=2 ) const ( ) <2>;
    ( vreg.3 var=3 ) const ( ) <3>;
    ( vreg.4 var=4 ) const ( ) <4>;
    ( ) lcall_tail /* __regcall3__chessintr_void_event_uint2_t */ ( vreg.4 vreg.3 vreg.2 ) <5>;
    ( ) return ( ) <6>;
  } #2 nxt=-2
} #1
0 : 'llvm___aie___event0';
----------
0 : (0,0:0,0);
----------

// Function: void llvm___aie___event1()
[
  0 : llvm___aie___event1 bnd=e
  1 : _cst val=1f typ=__i1
  2 : _cst val=1f typ=uint2_t
  3 : __regcall3__chessintr_void_event_uint2_t bnd=e
  4 : _cst val=0f
]
Lllvm___aie___event1
{
  { // BB#0
    ( vreg.1 var=1 ) const ( ) <1>;
    ( vreg.2 var=2 ) const ( ) <2>;
    ( vreg.3 var=3 ) const ( ) <3>;
    ( vreg.4 var=4 ) const ( ) <4>;
    ( ) lcall_tail /* __regcall3__chessintr_void_event_uint2_t */ ( vreg.4 vreg.3 vreg.2 ) <5>;
    ( ) return ( ) <6>;
  } #2 nxt=-2
} #1
0 : 'llvm___aie___event1';
----------
0 : (0,0:0,0);
----------

[
1 : _cst val=256f
2 : _cst val=4f
3 : input_fifo_cons_buff_2 typ=__Pvoid bnd=e
4 : input_fifo_cons_buff_1 typ=__Pvoid bnd=e
5 : input_fifo_cons_buff_0 typ=__Pvoid bnd=e
6 : output_fifo_buff_1 typ=__Pvoid bnd=e
7 : output_fifo_buff_0 typ=__Pvoid bnd=e
]
llvmgvt
{ // no associated BB
( vreg.1 var=1 ) const ( ) <1>;
( vreg.2 var=2 ) const ( ) <2>;
( vreg.3 var=3 ) global ( vreg.1 vreg.2 ) <3>;
( ) out ( vreg.3 ) <4>;
( vreg.5 var=1 ) const ( ) <5>;
( vreg.6 var=2 ) const ( ) <6>;
( vreg.7 var=4 ) global ( vreg.5 vreg.6 ) <7>;
( ) out ( vreg.7 ) <8>;
( vreg.9 var=1 ) const ( ) <9>;
( vreg.10 var=2 ) const ( ) <10>;
( vreg.11 var=5 ) global ( vreg.9 vreg.10 ) <11>;
( ) out ( vreg.11 ) <12>;
( vreg.13 var=1 ) const ( ) <13>;
( vreg.14 var=2 ) const ( ) <14>;
( vreg.15 var=6 ) global ( vreg.13 vreg.14 ) <15>;
( ) out ( vreg.15 ) <16>;
( vreg.17 var=1 ) const ( ) <17>;
( vreg.18 var=2 ) const ( ) <18>;
( vreg.19 var=7 ) global ( vreg.17 vreg.18 ) <19>;
( ) out ( vreg.19 ) <20>;
} #0
0 : './dummy_file';
----------
0 : (0,0:0,0);
----------
==========debug_type_info
==========data_init
	.section	".linker-options","e",@llvm_linker_options
