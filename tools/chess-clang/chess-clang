#!/bin/bash
#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2021 Xilinx Inc.

# ------------- Secondary Test Implementation, Take File input -----------------
# Need to find these as they're compiler supplied, although the .ll file is optional
# It could be possible just to ask a user to set these up as Env variables though.
# Ripping arguments from the xchesscc input that we might require, perhaps a
# little brittle for now.
# All of the Include directories
# The chess-proc-dir i.e. the cervino library
#declare -a ArgsArr
#for VAR in "$@"
#do
#  if [ ${VAR:0:11} = "-ochesswork" ]; then
#    ArgsArr+=( "$VAR" )
#  elif [ ${VAR:0:2} = "-I" ]; then
#    ArgsArr+=( "$VAR" )
#  elif [ ${VAR:0:17} = "--chess-proc-dir=" ]; then
#    ArgsArr+=( "$VAR" )
#  fi
#done

# just testing if its feasible to read in a file containing args and use them as
# an arg to the real clang-chess in place of the xchesscc args
# Very simple format at the moment, just a line per arg that's read into the
# array, includes the input file/s
# It may be feasible to generate these args in sycl-chess, place them in tmp
# and then read them in here. This may make life much easier if this script
# gets more complex.
#while IFS= read -r LINE; do
 # ArgsArr+=( "$LINE" )
#done < "$WRAPPER_SCRIPT_BIN/compile_ll_args"

# --------- First Test Implementation, Simple Arg Manipulation -----------------
declare -a ArgsArr
for var in "$@"
do
  if [ $var = "-xc++" ]; then
    echo ""
    echo "chess-clang script: removed '-xc++' argument from chess-clang
          invocation";
    echo ""
  # Force using C++2a instead of C++11, it should be irrelevant when passing
  # LLVM IR but it will remain for now so that if someone wishes to compile some
  # modern C++ with xchescc for AI Engine they can do so. It also helps to show
  # how you can manipulate the chess-clang arguments at the moment.
  elif [ $var = "-std=c++11" ]; then
    ArgsArr+=( "-std=c++2a" )
  else
    ArgsArr+=( "$var" )
  fi
done

# aie_api.h spews tons of warnings here.
ArgsArr+=( "-Wno-deprecated-declarations" )

# Has to be invoked with exec, which means it never returns to this script
# so this has to be the final invocation.
exec $CHESSROOT/target/bin/LNa64bin/chess-clang "${ArgsArr[@]}"