[build-system]
requires = [
    "setuptools>=42",
    "wheel",
    "ninja",
    "cmake>=3.12",
    "pybind11[global]>=2.10.4",
    "numpy",
    "dataclasses",
    "mlir-native-tools",
]
build-backend = "setuptools.build_meta"

[tool.cibuildwheel]
build-verbosity = 3
build = "cp310-* cp311-* cp312-*"
manylinux-aarch64-image = "manylinux_2_28"
manylinux-x86_64-image = "manylinux_2_28"

[tool.cibuildwheel.linux]
environment = { PATH = "/usr/lib/ccache:/usr/lib64/ccache:/usr/lib/ccache/bin:$PATH", PIP_FIND_LINKS = "wheelhouse https://github.com/Xilinx/mlir-aie/releases/expanded_assets/mlir-distro", PIP_NO_BUILD_ISOLATION = "false" }
environment-pass = [
    "CIBW_ARCHS",
    "CMAKE_ARGS",
    "CMAKE_GENERATOR",
    "DATETIME",
    "HOST_CCACHE_DIR",
    "AIE_PROJECT_COMMIT",
    "MATRIX_OS",
    "PARALLEL_LEVEL",
    "PIP_FIND_LINKS",
    "PIP_NO_BUILD_ISOLATION",
]
before-build = [
    "pip install -r requirements.txt",
    "{project}/scripts/pip_install_mlir.sh",
]
repair-wheel-command = [
    "auditwheel repair -w {dest_dir} {wheel} --exclude libmlir_float16_utils.so"
]

[tool.cibuildwheel.macos]
environment = { PATH = "/usr/local/opt/ccache/libexec:$PATH", PIP_FIND_LINKS = "wheelhouse https://github.com/Xilinx/mlir-aie/releases/expanded_assets/mlir-distro", PIP_NO_BUILD_ISOLATION = "false" }
before-build = [
    "pip install -r requirements.txt",
    "{project}/scripts/pip_install_mlir.sh",
]
repair-wheel-command = [
    "delocate-wheel --require-archs {delocate_archs} -w {dest_dir} -v {wheel}"
]

[tool.cibuildwheel.windows]
environment = { PIP_FIND_LINKS = "wheelhouse https://github.com/Xilinx/mlir-aie/releases/expanded_assets/mlir-distro", PIP_NO_BUILD_ISOLATION = "false" }
before-build = [
    "pip install delvewheel",
    "pip install -r requirements.txt",
    "bash {project}\\scripts\\pip_install_mlir.sh",
]