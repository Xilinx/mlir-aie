#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2021 Xilinx Inc.

if config.enable_chess_tests:
    # args for using xchesscc_wrapper
    xchesscc_aie2_args = 'aie2 -f -g +s'
    config.substitutions.append(('%xchesscc_aie2_args', xchesscc_aie2_args))

if "peano" in config.available_features:
    # args for clang from Peano
    clang_aie2_args = '-O2 -std=c++2a -fno-jump-tables --target=aie2 -v -Wall -D__AIE_ENGINE__ -D__LOCK_FENCE_MODE__=2 -DAIE_OPTION_SCALAR_FLOAT_ON_VECTOR -DAIE2_FP32_EMULATION_ACCURACY_FAST'
    config.substitutions.append(('%clang_aie2_args', clang_aie2_args))
    clang_aie2_lib_args = "-std=c++2a -O2 --target=aie2 -c -I{AIETOOLS}/include/ -I{AIETOOLS}/include/aie_api -D_LIBCPP_HAS_THREAD_API_PTHREAD -v -ferror-limit=10".format(AIETOOLS=config.vitis_aietools_dir)
    config.substitutions.append(('%clang_aie2_lib_args', clang_aie2_lib_args))

    # pipelines for using aie-opt and aie-translate
    vector_to_aievec = '--convert-vector-to-aievec="aie-target=aie2 target-backend=llvmir"'
    aievec_to_llvmir = '--convert-aievec-to-llvm -convert-vector-to-llvm -lower-affine -convert-scf-to-cf -canonicalize -cse -convert-math-to-llvm -expand-strided-metadata -finalize-memref-to-llvm -convert-func-to-llvm=\'use-bare-ptr-memref-call-conv\' -convert-index-to-llvm -canonicalize -cse'
    vector_to_generic_llvmir = '-canonicalize-vector-for-aievec=aie-target=aie2 -convert-vector-to-llvm -lower-affine -convert-scf-to-cf -canonicalize -cse -convert-math-to-llvm -expand-strided-metadata -finalize-memref-to-llvm -convert-func-to-llvm=\'use-bare-ptr-memref-call-conv\' -convert-index-to-llvm -canonicalize -cse'
    llvmir_to_ll = '--mlir-to-llvmir'
    config.substitutions.append(('%vector-to-aievec%', vector_to_aievec))
    config.substitutions.append(('%aievec-to-llvmir%', aievec_to_llvmir))
    config.substitutions.append(('%vector-to-llvmir%', vector_to_aievec+' '+aievec_to_llvmir))
    config.substitutions.append(('%vector-to-generic-llvmir%', vector_to_generic_llvmir))
    config.substitutions.append(('%llvmir-to-ll%', llvmir_to_ll))
