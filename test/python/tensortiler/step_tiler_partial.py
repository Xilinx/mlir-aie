import numpy as np

from aie.helpers.tensortiler import TensorTile, TensorTileSequence, TensorTiler2D
from util import construct_test

# RUN: %python %s | FileCheck %s


# CHECK-LABEL: step_tiler_partial_row
@construct_test
def step_tiler_partial_row():

    # all row major
    # tile col major
    # tile group col major
    # iter col major
    # all col major
    # pattern repeat

    # CHECK: Pass!
    print("Pass!")


# CHECK-LABEL: step_tiler_partial_col
@construct_test
def step_tiler_partial_col():

    # all row major
    tensor_dims = (3 * 5 * 3, 2 * 7 * 2)
    tiles = TensorTiler2D.step_tiler(
        tensor_dims,
        tile_dims=(3, 2),
        tile_group_repeats=(5, 7),
        tile_group_steps=(2, 2),
        allow_partial=True,
    )
    assert len(tiles) == 8
    reference_tiles = reference_tiles = TensorTileSequence.from_tiles(
        [
            TensorTile(
                tensor_dims, offset=0, sizes=[5, 7, 3, 2], strides=[168, 4, 28, 1]
            ),
            TensorTile(
                tensor_dims, offset=2, sizes=[5, 7, 3, 2], strides=[168, 4, 28, 1]
            ),
            TensorTile(
                tensor_dims, offset=84, sizes=[5, 7, 3, 2], strides=[168, 4, 28, 1]
            ),
            TensorTile(
                tensor_dims, offset=86, sizes=[5, 7, 3, 2], strides=[168, 4, 28, 1]
            ),
            TensorTile(
                tensor_dims, offset=840, sizes=[3, 7, 3, 2], strides=[168, 4, 28, 1]
            ),
            TensorTile(
                tensor_dims, offset=842, sizes=[3, 7, 3, 2], strides=[168, 4, 28, 1]
            ),
            TensorTile(
                tensor_dims, offset=924, sizes=[2, 7, 3, 2], strides=[168, 4, 28, 1]
            ),
            TensorTile(
                tensor_dims, offset=926, sizes=[2, 7, 3, 2], strides=[168, 4, 28, 1]
            ),
        ]
    )
    assert tiles == reference_tiles

    # fmt: off
    ref_access_order_tensor = np.array([
        [   0,    1,  210,  211,    6,    7,  216,  217,   12,   13,  222,  223,   18,   19,  228,  229,   24,   25,  234,  235,   30,   31,  240,  241,   36,   37,  246,  247],
        [   2,    3,  212,  213,    8,    9,  218,  219,   14,   15,  224,  225,   20,   21,  230,  231,   26,   27,  236,  237,   32,   33,  242,  243,   38,   39,  248,  249],
        [   4,    5,  214,  215,   10,   11,  220,  221,   16,   17,  226,  227,   22,   23,  232,  233,   28,   29,  238,  239,   34,   35,  244,  245,   40,   41,  250,  251],
        [ 420,  421,  630,  631,  426,  427,  636,  637,  432,  433,  642,  643,  438,  439,  648,  649,  444,  445,  654,  655,  450,  451,  660,  661,  456,  457,  666,  667],
        [ 422,  423,  632,  633,  428,  429,  638,  639,  434,  435,  644,  645,  440,  441,  650,  651,  446,  447,  656,  657,  452,  453,  662,  663,  458,  459,  668,  669],
        [ 424,  425,  634,  635,  430,  431,  640,  641,  436,  437,  646,  647,  442,  443,  652,  653,  448,  449,  658,  659,  454,  455,  664,  665,  460,  461,  670,  671],
        [  42,   43,  252,  253,   48,   49,  258,  259,   54,   55,  264,  265,   60,   61,  270,  271,   66,   67,  276,  277,   72,   73,  282,  283,   78,   79,  288,  289],
        [  44,   45,  254,  255,   50,   51,  260,  261,   56,   57,  266,  267,   62,   63,  272,  273,   68,   69,  278,  279,   74,   75,  284,  285,   80,   81,  290,  291],
        [  46,   47,  256,  257,   52,   53,  262,  263,   58,   59,  268,  269,   64,   65,  274,  275,   70,   71,  280,  281,   76,   77,  286,  287,   82,   83,  292,  293],
        [ 462,  463,  672,  673,  468,  469,  678,  679,  474,  475,  684,  685,  480,  481,  690,  691,  486,  487,  696,  697,  492,  493,  702,  703,  498,  499,  708,  709],
        [ 464,  465,  674,  675,  470,  471,  680,  681,  476,  477,  686,  687,  482,  483,  692,  693,  488,  489,  698,  699,  494,  495,  704,  705,  500,  501,  710,  711],
        [ 466,  467,  676,  677,  472,  473,  682,  683,  478,  479,  688,  689,  484,  485,  694,  695,  490,  491,  700,  701,  496,  497,  706,  707,  502,  503,  712,  713],
        [  84,   85,  294,  295,   90,   91,  300,  301,   96,   97,  306,  307,  102,  103,  312,  313,  108,  109,  318,  319,  114,  115,  324,  325,  120,  121,  330,  331],
        [  86,   87,  296,  297,   92,   93,  302,  303,   98,   99,  308,  309,  104,  105,  314,  315,  110,  111,  320,  321,  116,  117,  326,  327,  122,  123,  332,  333],
        [  88,   89,  298,  299,   94,   95,  304,  305,  100,  101,  310,  311,  106,  107,  316,  317,  112,  113,  322,  323,  118,  119,  328,  329,  124,  125,  334,  335],
        [ 504,  505,  714,  715,  510,  511,  720,  721,  516,  517,  726,  727,  522,  523,  732,  733,  528,  529,  738,  739,  534,  535,  744,  745,  540,  541,  750,  751],
        [ 506,  507,  716,  717,  512,  513,  722,  723,  518,  519,  728,  729,  524,  525,  734,  735,  530,  531,  740,  741,  536,  537,  746,  747,  542,  543,  752,  753],
        [ 508,  509,  718,  719,  514,  515,  724,  725,  520,  521,  730,  731,  526,  527,  736,  737,  532,  533,  742,  743,  538,  539,  748,  749,  544,  545,  754,  755],
        [ 126,  127,  336,  337,  132,  133,  342,  343,  138,  139,  348,  349,  144,  145,  354,  355,  150,  151,  360,  361,  156,  157,  366,  367,  162,  163,  372,  373],
        [ 128,  129,  338,  339,  134,  135,  344,  345,  140,  141,  350,  351,  146,  147,  356,  357,  152,  153,  362,  363,  158,  159,  368,  369,  164,  165,  374,  375],
        [ 130,  131,  340,  341,  136,  137,  346,  347,  142,  143,  352,  353,  148,  149,  358,  359,  154,  155,  364,  365,  160,  161,  370,  371,  166,  167,  376,  377],
        [ 546,  547,  756,  757,  552,  553,  762,  763,  558,  559,  768,  769,  564,  565,  774,  775,  570,  571,  780,  781,  576,  577,  786,  787,  582,  583,  792,  793],
        [ 548,  549,  758,  759,  554,  555,  764,  765,  560,  561,  770,  771,  566,  567,  776,  777,  572,  573,  782,  783,  578,  579,  788,  789,  584,  585,  794,  795],
        [ 550,  551,  760,  761,  556,  557,  766,  767,  562,  563,  772,  773,  568,  569,  778,  779,  574,  575,  784,  785,  580,  581,  790,  791,  586,  587,  796,  797],
        [ 168,  169,  378,  379,  174,  175,  384,  385,  180,  181,  390,  391,  186,  187,  396,  397,  192,  193,  402,  403,  198,  199,  408,  409,  204,  205,  414,  415],
        [ 170,  171,  380,  381,  176,  177,  386,  387,  182,  183,  392,  393,  188,  189,  398,  399,  194,  195,  404,  405,  200,  201,  410,  411,  206,  207,  416,  417],
        [ 172,  173,  382,  383,  178,  179,  388,  389,  184,  185,  394,  395,  190,  191,  400,  401,  196,  197,  406,  407,  202,  203,  412,  413,  208,  209,  418,  419],
        [ 588,  589,  798,  799,  594,  595,  804,  805,  600,  601,  810,  811,  606,  607,  816,  817,  612,  613,  822,  823,  618,  619,  828,  829,  624,  625,  834,  835],
        [ 590,  591,  800,  801,  596,  597,  806,  807,  602,  603,  812,  813,  608,  609,  818,  819,  614,  615,  824,  825,  620,  621,  830,  831,  626,  627,  836,  837],
        [ 592,  593,  802,  803,  598,  599,  808,  809,  604,  605,  814,  815,  610,  611,  820,  821,  616,  617,  826,  827,  622,  623,  832,  833,  628,  629,  838,  839],
        [ 840,  841,  966,  967,  846,  847,  972,  973,  852,  853,  978,  979,  858,  859,  984,  985,  864,  865,  990,  991,  870,  871,  996,  997,  876,  877, 1002, 1003],
        [ 842,  843,  968,  969,  848,  849,  974,  975,  854,  855,  980,  981,  860,  861,  986,  987,  866,  867,  992,  993,  872,  873,  998,  999,  878,  879, 1004, 1005],
        [ 844,  845,  970,  971,  850,  851,  976,  977,  856,  857,  982,  983,  862,  863,  988,  989,  868,  869,  994,  995,  874,  875, 1000, 1001,  880,  881, 1006, 1007],
        [1092, 1093, 1176, 1177, 1098, 1099, 1182, 1183, 1104, 1105, 1188, 1189, 1110, 1111, 1194, 1195, 1116, 1117, 1200, 1201, 1122, 1123, 1206, 1207, 1128, 1129, 1212, 1213],
        [1094, 1095, 1178, 1179, 1100, 1101, 1184, 1185, 1106, 1107, 1190, 1191, 1112, 1113, 1196, 1197, 1118, 1119, 1202, 1203, 1124, 1125, 1208, 1209, 1130, 1131, 1214, 1215],
        [1096, 1097, 1180, 1181, 1102, 1103, 1186, 1187, 1108, 1109, 1192, 1193, 1114, 1115, 1198, 1199, 1120, 1121, 1204, 1205, 1126, 1127, 1210, 1211, 1132, 1133, 1216, 1217],
        [ 882,  883, 1008, 1009,  888,  889, 1014, 1015,  894,  895, 1020, 1021,  900,  901, 1026, 1027,  906,  907, 1032, 1033,  912,  913, 1038, 1039,  918,  919, 1044, 1045],
        [ 884,  885, 1010, 1011,  890,  891, 1016, 1017,  896,  897, 1022, 1023,  902,  903, 1028, 1029,  908,  909, 1034, 1035,  914,  915, 1040, 1041,  920,  921, 1046, 1047],
        [ 886,  887, 1012, 1013,  892,  893, 1018, 1019,  898,  899, 1024, 1025,  904,  905, 1030, 1031,  910,  911, 1036, 1037,  916,  917, 1042, 1043,  922,  923, 1048, 1049],
        [1134, 1135, 1218, 1219, 1140, 1141, 1224, 1225, 1146, 1147, 1230, 1231, 1152, 1153, 1236, 1237, 1158, 1159, 1242, 1243, 1164, 1165, 1248, 1249, 1170, 1171, 1254, 1255],
        [1136, 1137, 1220, 1221, 1142, 1143, 1226, 1227, 1148, 1149, 1232, 1233, 1154, 1155, 1238, 1239, 1160, 1161, 1244, 1245, 1166, 1167, 1250, 1251, 1172, 1173, 1256, 1257],
        [1138, 1139, 1222, 1223, 1144, 1145, 1228, 1229, 1150, 1151, 1234, 1235, 1156, 1157, 1240, 1241, 1162, 1163, 1246, 1247, 1168, 1169, 1252, 1253, 1174, 1175, 1258, 1259],
        [ 924,  925, 1050, 1051,  930,  931, 1056, 1057,  936,  937, 1062, 1063,  942,  943, 1068, 1069,  948,  949, 1074, 1075,  954,  955, 1080, 1081,  960,  961, 1086, 1087],
        [ 926,  927, 1052, 1053,  932,  933, 1058, 1059,  938,  939, 1064, 1065,  944,  945, 1070, 1071,  950,  951, 1076, 1077,  956,  957, 1082, 1083,  962,  963, 1088, 1089],
        [ 928,  929, 1054, 1055,  934,  935, 1060, 1061,  940,  941, 1066, 1067,  946,  947, 1072, 1073,  952,  953, 1078, 1079,  958,  959, 1084, 1085,  964,  965, 1090, 1091]])
    # fmt: on
    access_order, access_count = tiles.access_tensors()
    assert (access_order == ref_access_order_tensor).all()
    assert (access_count == 1).all()

    # tile col major
    tensor_dims = (3 * 5 * 3, 2 * 7 * 2)
    tiles = TensorTiler2D.step_tiler(
        tensor_dims,
        tile_dims=(3, 2),
        tile_group_repeats=(5, 7),
        tile_group_steps=(2, 2),
        allow_partial=True,
        tile_col_major=True,
    )
    assert len(tiles) == 8
    reference_tiles = reference_tiles = TensorTileSequence.from_tiles(
        [
            TensorTile(
                tensor_dims, offset=0, sizes=[5, 7, 2, 3], strides=[168, 4, 1, 28]
            ),
            TensorTile(
                tensor_dims, offset=2, sizes=[5, 7, 2, 3], strides=[168, 4, 1, 28]
            ),
            TensorTile(
                tensor_dims, offset=84, sizes=[5, 7, 2, 3], strides=[168, 4, 1, 28]
            ),
            TensorTile(
                tensor_dims, offset=86, sizes=[5, 7, 2, 3], strides=[168, 4, 1, 28]
            ),
            TensorTile(
                tensor_dims, offset=840, sizes=[3, 7, 2, 3], strides=[168, 4, 1, 28]
            ),
            TensorTile(
                tensor_dims, offset=842, sizes=[3, 7, 2, 3], strides=[168, 4, 1, 28]
            ),
            TensorTile(
                tensor_dims, offset=924, sizes=[2, 7, 2, 3], strides=[168, 4, 1, 28]
            ),
            TensorTile(
                tensor_dims, offset=926, sizes=[2, 7, 2, 3], strides=[168, 4, 1, 28]
            ),
        ]
    )
    assert tiles == reference_tiles

    # fmt: off
    ref_access_order_tensor = np.array([
        [   0,    3,  210,  213,    6,    9,  216,  219,   12,   15,  222,  225,   18,   21,  228,  231,   24,   27,  234,  237,   30,   33,  240,  243,   36,   39,  246,  249],
        [   1,    4,  211,  214,    7,   10,  217,  220,   13,   16,  223,  226,   19,   22,  229,  232,   25,   28,  235,  238,   31,   34,  241,  244,   37,   40,  247,  250],
        [   2,    5,  212,  215,    8,   11,  218,  221,   14,   17,  224,  227,   20,   23,  230,  233,   26,   29,  236,  239,   32,   35,  242,  245,   38,   41,  248,  251],
        [ 420,  423,  630,  633,  426,  429,  636,  639,  432,  435,  642,  645,  438,  441,  648,  651,  444,  447,  654,  657,  450,  453,  660,  663,  456,  459,  666,  669],
        [ 421,  424,  631,  634,  427,  430,  637,  640,  433,  436,  643,  646,  439,  442,  649,  652,  445,  448,  655,  658,  451,  454,  661,  664,  457,  460,  667,  670],
        [ 422,  425,  632,  635,  428,  431,  638,  641,  434,  437,  644,  647,  440,  443,  650,  653,  446,  449,  656,  659,  452,  455,  662,  665,  458,  461,  668,  671],
        [  42,   45,  252,  255,   48,   51,  258,  261,   54,   57,  264,  267,   60,   63,  270,  273,   66,   69,  276,  279,   72,   75,  282,  285,   78,   81,  288,  291],
        [  43,   46,  253,  256,   49,   52,  259,  262,   55,   58,  265,  268,   61,   64,  271,  274,   67,   70,  277,  280,   73,   76,  283,  286,   79,   82,  289,  292],
        [  44,   47,  254,  257,   50,   53,  260,  263,   56,   59,  266,  269,   62,   65,  272,  275,   68,   71,  278,  281,   74,   77,  284,  287,   80,   83,  290,  293],
        [ 462,  465,  672,  675,  468,  471,  678,  681,  474,  477,  684,  687,  480,  483,  690,  693,  486,  489,  696,  699,  492,  495,  702,  705,  498,  501,  708,  711],
        [ 463,  466,  673,  676,  469,  472,  679,  682,  475,  478,  685,  688,  481,  484,  691,  694,  487,  490,  697,  700,  493,  496,  703,  706,  499,  502,  709,  712],
        [ 464,  467,  674,  677,  470,  473,  680,  683,  476,  479,  686,  689,  482,  485,  692,  695,  488,  491,  698,  701,  494,  497,  704,  707,  500,  503,  710,  713],
        [  84,   87,  294,  297,   90,   93,  300,  303,   96,   99,  306,  309,  102,  105,  312,  315,  108,  111,  318,  321,  114,  117,  324,  327,  120,  123,  330,  333],
        [  85,   88,  295,  298,   91,   94,  301,  304,   97,  100,  307,  310,  103,  106,  313,  316,  109,  112,  319,  322,  115,  118,  325,  328,  121,  124,  331,  334],
        [  86,   89,  296,  299,   92,   95,  302,  305,   98,  101,  308,  311,  104,  107,  314,  317,  110,  113,  320,  323,  116,  119,  326,  329,  122,  125,  332,  335],
        [ 504,  507,  714,  717,  510,  513,  720,  723,  516,  519,  726,  729,  522,  525,  732,  735,  528,  531,  738,  741,  534,  537,  744,  747,  540,  543,  750,  753],
        [ 505,  508,  715,  718,  511,  514,  721,  724,  517,  520,  727,  730,  523,  526,  733,  736,  529,  532,  739,  742,  535,  538,  745,  748,  541,  544,  751,  754],
        [ 506,  509,  716,  719,  512,  515,  722,  725,  518,  521,  728,  731,  524,  527,  734,  737,  530,  533,  740,  743,  536,  539,  746,  749,  542,  545,  752,  755],
        [ 126,  129,  336,  339,  132,  135,  342,  345,  138,  141,  348,  351,  144,  147,  354,  357,  150,  153,  360,  363,  156,  159,  366,  369,  162,  165,  372,  375],
        [ 127,  130,  337,  340,  133,  136,  343,  346,  139,  142,  349,  352,  145,  148,  355,  358,  151,  154,  361,  364,  157,  160,  367,  370,  163,  166,  373,  376],
        [ 128,  131,  338,  341,  134,  137,  344,  347,  140,  143,  350,  353,  146,  149,  356,  359,  152,  155,  362,  365,  158,  161,  368,  371,  164,  167,  374,  377],
        [ 546,  549,  756,  759,  552,  555,  762,  765,  558,  561,  768,  771,  564,  567,  774,  777,  570,  573,  780,  783,  576,  579,  786,  789,  582,  585,  792,  795],
        [ 547,  550,  757,  760,  553,  556,  763,  766,  559,  562,  769,  772,  565,  568,  775,  778,  571,  574,  781,  784,  577,  580,  787,  790,  583,  586,  793,  796],
        [ 548,  551,  758,  761,  554,  557,  764,  767,  560,  563,  770,  773,  566,  569,  776,  779,  572,  575,  782,  785,  578,  581,  788,  791,  584,  587,  794,  797],
        [ 168,  171,  378,  381,  174,  177,  384,  387,  180,  183,  390,  393,  186,  189,  396,  399,  192,  195,  402,  405,  198,  201,  408,  411,  204,  207,  414,  417],
        [ 169,  172,  379,  382,  175,  178,  385,  388,  181,  184,  391,  394,  187,  190,  397,  400,  193,  196,  403,  406,  199,  202,  409,  412,  205,  208,  415,  418],
        [ 170,  173,  380,  383,  176,  179,  386,  389,  182,  185,  392,  395,  188,  191,  398,  401,  194,  197,  404,  407,  200,  203,  410,  413,  206,  209,  416,  419],
        [ 588,  591,  798,  801,  594,  597,  804,  807,  600,  603,  810,  813,  606,  609,  816,  819,  612,  615,  822,  825,  618,  621,  828,  831,  624,  627,  834,  837],
        [ 589,  592,  799,  802,  595,  598,  805,  808,  601,  604,  811,  814,  607,  610,  817,  820,  613,  616,  823,  826,  619,  622,  829,  832,  625,  628,  835,  838],
        [ 590,  593,  800,  803,  596,  599,  806,  809,  602,  605,  812,  815,  608,  611,  818,  821,  614,  617,  824,  827,  620,  623,  830,  833,  626,  629,  836,  839],
        [ 840,  843,  966,  969,  846,  849,  972,  975,  852,  855,  978,  981,  858,  861,  984,  987,  864,  867,  990,  993,  870,  873,  996,  999,  876,  879, 1002, 1005],
        [ 841,  844,  967,  970,  847,  850,  973,  976,  853,  856,  979,  982,  859,  862,  985,  988,  865,  868,  991,  994,  871,  874,  997, 1000,  877,  880, 1003, 1006],
        [ 842,  845,  968,  971,  848,  851,  974,  977,  854,  857,  980,  983,  860,  863,  986,  989,  866,  869,  992,  995,  872,  875, 998, 1001,  878,  881, 1004, 1007],
        [1092, 1095, 1176, 1179, 1098, 1101, 1182, 1185, 1104, 1107, 1188, 1191, 1110, 1113, 1194, 1197, 1116, 1119, 1200, 1203, 1122, 1125, 1206, 1209, 1128, 1131, 1212, 1215],
        [1093, 1096, 1177, 1180, 1099, 1102, 1183, 1186, 1105, 1108, 1189, 1192, 1111, 1114, 1195, 1198, 1117, 1120, 1201, 1204, 1123, 1126, 1207, 1210, 1129, 1132, 1213, 1216],
        [1094, 1097, 1178, 1181, 1100, 1103, 1184, 1187, 1106, 1109, 1190, 1193, 1112, 1115, 1196, 1199, 1118, 1121, 1202, 1205, 1124, 1127, 1208, 1211, 1130, 1133, 1214, 1217],
        [ 882,  885, 1008, 1011,  888,  891, 1014, 1017,  894,  897, 1020, 1023,  900,  903, 1026, 1029,  906,  909, 1032, 1035,  912,  915, 1038, 1041,  918,  921, 1044, 1047],
        [ 883,  886, 1009, 1012,  889,  892, 1015, 1018,  895,  898, 1021, 1024,  901,  904, 1027, 1030,  907,  910, 1033, 1036,  913,  916, 1039, 1042,  919,  922, 1045, 1048],
        [ 884,  887, 1010, 1013,  890,  893, 1016, 1019,  896,  899, 1022, 1025,  902,  905, 1028, 1031,  908,  911, 1034, 1037,  914,  917, 1040, 1043,  920,  923, 1046, 1049],
        [1134, 1137, 1218, 1221, 1140, 1143, 1224, 1227, 1146, 1149, 1230, 1233, 1152, 1155, 1236, 1239, 1158, 1161, 1242, 1245, 1164, 1167, 1248, 1251, 1170, 1173, 1254, 1257],
        [1135, 1138, 1219, 1222, 1141, 1144, 1225, 1228, 1147, 1150, 1231, 1234, 1153, 1156, 1237, 1240, 1159, 1162, 1243, 1246, 1165, 1168, 1249, 1252, 1171, 1174, 1255, 1258],
        [1136, 1139, 1220, 1223, 1142, 1145, 1226, 1229, 1148, 1151, 1232, 1235, 1154, 1157, 1238, 1241, 1160, 1163, 1244, 1247, 1166, 1169, 1250, 1253, 1172, 1175, 1256, 1259],
        [ 924,  927, 1050, 1053,  930,  933, 1056, 1059,  936,  939, 1062, 1065,  942,  945, 1068, 1071,  948,  951, 1074, 1077,  954,  957, 1080, 1083,  960,  963, 1086, 1089],
        [ 925,  928, 1051, 1054,  931,  934, 1057, 1060,  937,  940, 1063, 1066,  943,  946, 1069, 1072,  949,  952, 1075, 1078,  955,  958, 1081, 1084,  961,  964, 1087, 1090],
        [ 926,  929, 1052, 1055,  932,  935, 1058, 1061,  938,  941, 1064, 1067,  944,  947, 1070, 1073,  950,  953, 1076, 1079,  956,  959, 1082, 1085,  962,  965, 1088, 1091]])
    # fmt: on
    access_order, access_count = tiles.access_tensors()
    assert (access_order == ref_access_order_tensor).all()
    assert (access_count == 1).all()

    # tile group col major
    tensor_dims = (3 * 5 * 3, 2 * 7 * 2)
    tiles = TensorTiler2D.step_tiler(
        tensor_dims,
        tile_dims=(3, 2),
        tile_group_repeats=(5, 7),
        tile_group_steps=(2, 2),
        tile_group_col_major=True,
        allow_partial=True,
    )
    assert len(tiles) == 8
    reference_tiles = reference_tiles = TensorTileSequence.from_tiles(
        [
            TensorTile(
                tensor_dims, offset=0, sizes=[7, 5, 3, 2], strides=[4, 168, 28, 1]
            ),
            TensorTile(
                tensor_dims, offset=2, sizes=[7, 5, 3, 2], strides=[4, 168, 28, 1]
            ),
            TensorTile(
                tensor_dims, offset=84, sizes=[7, 5, 3, 2], strides=[4, 168, 28, 1]
            ),
            TensorTile(
                tensor_dims, offset=86, sizes=[7, 5, 3, 2], strides=[4, 168, 28, 1]
            ),
            TensorTile(
                tensor_dims, offset=840, sizes=[7, 3, 3, 2], strides=[4, 168, 28, 1]
            ),
            TensorTile(
                tensor_dims, offset=842, sizes=[7, 3, 3, 2], strides=[4, 168, 28, 1]
            ),
            TensorTile(
                tensor_dims, offset=924, sizes=[7, 2, 3, 2], strides=[4, 168, 28, 1]
            ),
            TensorTile(
                tensor_dims, offset=926, sizes=[7, 2, 3, 2], strides=[4, 168, 28, 1]
            ),
        ]
    )
    assert tiles == reference_tiles

    # fmt: off
    ref_access_order_tensor = np.array([
        [   0,    1,  210,  211,   30,   31,  240,  241,   60,   61,  270,  271,   90,   91,  300,  301,  120,  121,  330,  331,  150,  151,  360,  361,  180,  181,  390,  391],
        [   2,    3,  212,  213,   32,   33,  242,  243,   62,   63,  272,  273,   92,   93,  302,  303,  122,  123,  332,  333,  152,  153,  362,  363,  182,  183,  392,  393],
        [   4,    5,  214,  215,   34,   35,  244,  245,   64,   65,  274,  275,   94,   95,  304,  305,  124,  125,  334,  335,  154,  155,  364,  365,  184,  185,  394,  395],
        [ 420,  421,  630,  631,  450,  451,  660,  661,  480,  481,  690,  691,  510,  511,  720,  721,  540,  541,  750,  751,  570,  571,  780,  781,  600,  601,  810,  811],
        [ 422,  423,  632,  633,  452,  453,  662,  663,  482,  483,  692,  693,  512,  513,  722,  723,  542,  543,  752,  753,  572,  573,  782,  783,  602,  603,  812,  813],
        [ 424,  425,  634,  635,  454,  455,  664,  665,  484,  485,  694,  695,  514,  515,  724,  725,  544,  545,  754,  755,  574,  575,  784,  785,  604,  605,  814,  815],
        [   6,    7,  216,  217,   36,   37,  246,  247,   66,   67,  276,  277,   96,   97,  306,  307,  126,  127,  336,  337,  156,  157,  366,  367,  186,  187,  396,  397],
        [   8,    9,  218,  219,   38,   39,  248,  249,   68,   69,  278,  279,   98,   99,  308,  309,  128,  129,  338,  339,  158,  159,  368,  369,  188,  189,  398,  399],
        [  10,   11,  220,  221,   40,   41,  250,  251,   70,   71,  280,  281,  100,  101,  310,  311,  130,  131,  340,  341,  160,  161,  370,  371,  190,  191,  400,  401],
        [ 426,  427,  636,  637,  456,  457,  666,  667,  486,  487,  696,  697,  516,  517,  726,  727,  546,  547,  756,  757,  576,  577,  786,  787,  606,  607,  816,  817],
        [ 428,  429,  638,  639,  458,  459,  668,  669,  488,  489,  698,  699,  518,  519,  728,  729,  548,  549,  758,  759,  578,  579,  788,  789,  608,  609,  818,  819],
        [ 430,  431,  640,  641,  460,  461,  670,  671,  490,  491,  700,  701,  520,  521,  730,  731,  550,  551,  760,  761,  580,  581,  790,  791,  610,  611,  820,  821],
        [  12,   13,  222,  223,   42,   43,  252,  253,   72,   73,  282,  283,  102,  103,  312,  313,  132,  133,  342,  343,  162,  163,  372,  373,  192,  193,  402,  403],
        [  14,   15,  224,  225,   44,   45,  254,  255,   74,   75,  284,  285,  104,  105,  314,  315,  134,  135,  344,  345,  164,  165,  374,  375,  194,  195,  404,  405],
        [  16,   17,  226,  227,   46,   47,  256,  257,   76,   77,  286,  287,  106,  107,  316,  317,  136,  137,  346,  347,  166,  167,  376,  377,  196,  197,  406,  407],
        [ 432,  433,  642,  643,  462,  463,  672,  673,  492,  493,  702,  703,  522,  523,  732,  733,  552,  553,  762,  763,  582,  583,  792,  793,  612,  613,  822,  823],
        [ 434,  435,  644,  645,  464,  465,  674,  675,  494,  495,  704,  705,  524,  525,  734,  735,  554,  555,  764,  765,  584,  585,  794,  795,  614,  615,  824,  825],
        [ 436,  437,  646,  647,  466,  467,  676,  677,  496,  497,  706,  707,  526,  527,  736,  737,  556,  557,  766,  767,  586,  587,  796,  797,  616,  617,  826,  827],
        [  18,   19,  228,  229,   48,   49,  258,  259,   78,   79,  288,  289,  108,  109,  318,  319,  138,  139,  348,  349,  168,  169,  378,  379,  198,  199,  408,  409],
        [  20,   21,  230,  231,   50,   51,  260,  261,   80,   81,  290,  291,  110,  111,  320,  321,  140,  141,  350,  351,  170,  171,  380,  381,  200,  201,  410,  411],
        [  22,   23,  232,  233,   52,   53,  262,  263,   82,   83,  292,  293,  112,  113,  322,  323,  142,  143,  352,  353,  172,  173,  382,  383,  202,  203,  412,  413],
        [ 438,  439,  648,  649,  468,  469,  678,  679,  498,  499,  708,  709,  528,  529,  738,  739,  558,  559,  768,  769,  588,  589,  798,  799,  618,  619,  828,  829],
        [ 440,  441,  650,  651,  470,  471,  680,  681,  500,  501,  710,  711,  530,  531,  740,  741,  560,  561,  770,  771,  590,  591,  800,  801,  620,  621,  830,  831],
        [ 442,  443,  652,  653,  472,  473,  682,  683,  502,  503,  712,  713,  532,  533,  742,  743,  562,  563,  772,  773,  592,  593,  802,  803,  622,  623,  832,  833],
        [  24,   25,  234,  235,   54,   55,  264,  265,   84,   85,  294,  295,  114,  115,  324,  325,  144,  145,  354,  355,  174,  175,  384,  385,  204,  205,  414,  415],
        [  26,   27,  236,  237,   56,   57,  266,  267,   86,   87,  296,  297,  116,  117,  326,  327,  146,  147,  356,  357,  176,  177,  386,  387,  206,  207,  416,  417],
        [  28,   29,  238,  239,   58,   59,  268,  269,   88,   89,  298,  299,  118,  119,  328,  329,  148,  149,  358,  359,  178,  179,  388,  389,  208,  209,  418,  419],
        [ 444,  445,  654,  655,  474,  475,  684,  685,  504,  505,  714,  715,  534,  535,  744,  745,  564,  565,  774,  775,  594,  595,  804,  805,  624,  625,  834,  835],
        [ 446,  447,  656,  657,  476,  477,  686,  687,  506,  507,  716,  717,  536,  537,  746,  747,  566,  567,  776,  777,  596,  597,  806,  807,  626,  627,  836,  837],
        [ 448,  449,  658,  659,  478,  479,  688,  689,  508,  509,  718,  719,  538,  539,  748,  749,  568,  569,  778,  779,  598,  599,  808,  809,  628,  629,  838,  839],
        [ 840,  841,  966,  967,  858,  859,  984,  985,  876,  877, 1002, 1003,  894,  895, 1020, 1021,  912,  913, 1038, 1039,  930,  931, 1056, 1057,  948,  949, 1074, 1075],
        [ 842,  843,  968,  969,  860,  861,  986,  987,  878,  879, 1004, 1005,  896,  897, 1022, 1023,  914,  915, 1040, 1041,  932,  933, 1058, 1059,  950,  951, 1076, 1077],
        [ 844,  845,  970,  971,  862,  863,  988,  989,  880,  881, 1006, 1007,  898,  899, 1024, 1025,  916,  917, 1042, 1043,  934,  935, 1060, 1061,  952,  953, 1078, 1079],
        [1092, 1093, 1176, 1177, 1104, 1105, 1188, 1189, 1116, 1117, 1200, 1201, 1128, 1129, 1212, 1213, 1140, 1141, 1224, 1225, 1152, 1153, 1236, 1237, 1164, 1165, 1248, 1249],
        [1094, 1095, 1178, 1179, 1106, 1107, 1190, 1191, 1118, 1119, 1202, 1203, 1130, 1131, 1214, 1215, 1142, 1143, 1226, 1227, 1154, 1155, 1238, 1239, 1166, 1167, 1250, 1251],
        [1096, 1097, 1180, 1181, 1108, 1109, 1192, 1193, 1120, 1121, 1204, 1205, 1132, 1133, 1216, 1217, 1144, 1145, 1228, 1229, 1156, 1157, 1240, 1241, 1168, 1169, 1252, 1253],
        [ 846,  847,  972,  973,  864,  865,  990,  991,  882,  883, 1008, 1009,  900,  901, 1026, 1027,  918,  919, 1044, 1045,  936,  937, 1062, 1063,  954,  955, 1080, 1081],
        [ 848,  849,  974,  975,  866,  867,  992,  993,  884,  885, 1010, 1011,  902,  903, 1028, 1029,  920,  921, 1046, 1047,  938,  939, 1064, 1065,  956,  957, 1082, 1083],
        [ 850,  851,  976,  977,  868,  869,  994,  995,  886,  887, 1012, 1013,  904,  905, 1030, 1031,  922,  923, 1048, 1049,  940,  941, 1066, 1067,  958,  959, 1084, 1085],
        [1098, 1099, 1182, 1183, 1110, 1111, 1194, 1195, 1122, 1123, 1206, 1207, 1134, 1135, 1218, 1219, 1146, 1147, 1230, 1231, 1158, 1159, 1242, 1243, 1170, 1171, 1254, 1255],
        [1100, 1101, 1184, 1185, 1112, 1113, 1196, 1197, 1124, 1125, 1208, 1209, 1136, 1137, 1220, 1221, 1148, 1149, 1232, 1233, 1160, 1161, 1244, 1245, 1172, 1173, 1256, 1257],
        [1102, 1103, 1186, 1187, 1114, 1115, 1198, 1199, 1126, 1127, 1210, 1211, 1138, 1139, 1222, 1223, 1150, 1151, 1234, 1235, 1162, 1163, 1246, 1247, 1174, 1175, 1258, 1259],
        [ 852,  853,  978,  979,  870,  871,  996,  997,  888,  889, 1014, 1015,  906,  907, 1032, 1033,  924,  925, 1050, 1051,  942,  943, 1068, 1069,  960,  961, 1086, 1087],
        [ 854,  855,  980,  981,  872,  873,  998,  999,  890,  891, 1016, 1017,  908,  909, 1034, 1035,  926,  927, 1052, 1053,  944,  945, 1070, 1071,  962,  963, 1088, 1089],
        [ 856,  857,  982,  983,  874,  875, 1000, 1001,  892,  893, 1018, 1019,  910,  911, 1036, 1037,  928,  929, 1054, 1055,  946,  947, 1072, 1073,  964,  965, 1090, 1091]]
    )
    # fmt: on
    access_order, access_count = tiles.access_tensors()
    assert (access_order == ref_access_order_tensor).all()
    assert (access_count == 1).all()

    # iter col major
    tensor_dims = (3 * 5 * 3, 2 * 7 * 2)
    tiles = TensorTiler2D.step_tiler(
        tensor_dims,
        tile_dims=(3, 2),
        tile_group_repeats=(5, 7),
        tile_group_steps=(2, 2),
        iter_col_major=True,
        allow_partial=True,
    )
    assert len(tiles) == 8
    reference_tiles = reference_tiles = TensorTileSequence.from_tiles(
        [
            TensorTile(
                tensor_dims, offset=0, sizes=[5, 7, 3, 2], strides=[168, 4, 28, 1]
            ),
            TensorTile(
                tensor_dims, offset=84, sizes=[5, 7, 3, 2], strides=[168, 4, 28, 1]
            ),
            TensorTile(
                tensor_dims, offset=840, sizes=[3, 7, 3, 2], strides=[168, 4, 28, 1]
            ),
            TensorTile(
                tensor_dims, offset=924, sizes=[2, 7, 3, 2], strides=[168, 4, 28, 1]
            ),
            TensorTile(
                tensor_dims, offset=2, sizes=[5, 7, 3, 2], strides=[168, 4, 28, 1]
            ),
            TensorTile(
                tensor_dims, offset=86, sizes=[5, 7, 3, 2], strides=[168, 4, 28, 1]
            ),
            TensorTile(
                tensor_dims, offset=842, sizes=[3, 7, 3, 2], strides=[168, 4, 28, 1]
            ),
            TensorTile(
                tensor_dims, offset=926, sizes=[2, 7, 3, 2], strides=[168, 4, 28, 1]
            ),
        ]
    )
    assert tiles == reference_tiles

    # fmt: off
    ref_access_order_tensor = np.array([
        [   0,    1,  630,  631,    6,    7,  636,  637,   12,   13,  642,    643,   18,   19,  648,  649,   24,   25,  654,  655,   30,   31,    660,  661,   36,   37,  666,  667],
        [   2,    3,  632,  633,    8,    9,  638,  639,   14,   15,  644,    645,   20,   21,  650,  651,   26,   27,  656,  657,   32,   33,    662,  663,   38,   39,  668,  669],
        [   4,    5,  634,  635,   10,   11,  640,  641,   16,   17,  646,    647,   22,   23,  652,  653,   28,   29,  658,  659,   34,   35,    664,  665,   40,   41,  670,  671],
        [ 210,  211,  840,  841,  216,  217,  846,  847,  222,  223,  852,    853,  228,  229,  858,  859,  234,  235,  864,  865,  240,  241,    870,  871,  246,  247,  876,  877],
        [ 212,  213,  842,  843,  218,  219,  848,  849,  224,  225,  854,    855,  230,  231,  860,  861,  236,  237,  866,  867,  242,  243,    872,  873,  248,  249,  878,  879],
        [ 214,  215,  844,  845,  220,  221,  850,  851,  226,  227,  856,    857,  232,  233,  862,  863,  238,  239,  868,  869,  244,  245,    874,  875,  250,  251,  880,  881],
        [  42,   43,  672,  673,   48,   49,  678,  679,   54,   55,  684,    685,   60,   61,  690,  691,   66,   67,  696,  697,   72,   73,    702,  703,   78,   79,  708,  709],
        [  44,   45,  674,  675,   50,   51,  680,  681,   56,   57,  686,    687,   62,   63,  692,  693,   68,   69,  698,  699,   74,   75,    704,  705,   80,   81,  710,  711],
        [  46,   47,  676,  677,   52,   53,  682,  683,   58,   59,  688,    689,   64,   65,  694,  695,   70,   71,  700,  701,   76,   77,    706,  707,   82,   83,  712,  713],
        [ 252,  253,  882,  883,  258,  259,  888,  889,  264,  265,  894,    895,  270,  271,  900,  901,  276,  277,  906,  907,  282,  283,    912,  913,  288,  289,  918,  919],
        [ 254,  255,  884,  885,  260,  261,  890,  891,  266,  267,  896,    897,  272,  273,  902,  903,  278,  279,  908,  909,  284,  285,    914,  915,  290,  291,  920,  921],
        [ 256,  257,  886,  887,  262,  263,  892,  893,  268,  269,  898,    899,  274,  275,  904,  905,  280,  281,  910,  911,  286,  287,    916,  917,  292,  293,  922,  923],
        [  84,   85,  714,  715,   90,   91,  720,  721,   96,   97,  726,    727,  102,  103,  732,  733,  108,  109,  738,  739,  114,  115,    744,  745,  120,  121,  750,  751],
        [  86,   87,  716,  717,   92,   93,  722,  723,   98,   99,  728,    729,  104,  105,  734,  735,  110,  111,  740,  741,  116,  117,    746,  747,  122,  123,  752,  753],
        [  88,   89,  718,  719,   94,   95,  724,  725,  100,  101,  730,    731,  106,  107,  736,  737,  112,  113,  742,  743,  118,  119,    748,  749,  124,  125,  754,  755],
        [ 294,  295,  924,  925,  300,  301,  930,  931,  306,  307,  936,    937,  312,  313,  942,  943,  318,  319,  948,  949,  324,  325,    954,  955,  330,  331,  960,  961],
        [ 296,  297,  926,  927,  302,  303,  932,  933,  308,  309,  938,    939,  314,  315,  944,  945,  320,  321,  950,  951,  326,  327,    956,  957,  332,  333,  962,  963],
        [ 298,  299,  928,  929,  304,  305,  934,  935,  310,  311,  940,    941,  316,  317,  946,  947,  322,  323,  952,  953,  328,  329,    958,  959,  334,  335,  964,  965],
        [ 126,  127,  756,  757,  132,  133,  762,  763,  138,  139,  768,    769,  144,  145,  774,  775,  150,  151,  780,  781,  156,  157,    786,  787,  162,  163,  792,  793],
        [ 128,  129,  758,  759,  134,  135,  764,  765,  140,  141,  770,    771,  146,  147,  776,  777,  152,  153,  782,  783,  158,  159,    788,  789,  164,  165,  794,  795],
        [ 130,  131,  760,  761,  136,  137,  766,  767,  142,  143,  772,    773,  148,  149,  778,  779,  154,  155,  784,  785,  160,  161,    790,  791,  166,  167,  796,  797],
        [ 336,  337,  966,  967,  342,  343,  972,  973,  348,  349,  978,    979,  354,  355,  984,  985,  360,  361,  990,  991,  366,  367,    996,  997,  372,  373, 1002, 1003],
        [ 338,  339,  968,  969,  344,  345,  974,  975,  350,  351,  980,    981,  356,  357,  986,  987,  362,  363,  992,  993,  368,  369,    998,  999,  374,  375, 1004, 1005],
        [ 340,  341,  970,  971,  346,  347,  976,  977,  352,  353,  982,    983,  358,  359,  988,  989,  364,  365,  994,  995,  370,  371,1000, 1001,  376,  377, 1006, 1007],
        [ 168,  169,  798,  799,  174,  175,  804,  805,  180,  181,  810,    811,  186,  187,  816,  817,  192,  193,  822,  823,  198,  199,    828,  829,  204,  205,  834,  835],
        [ 170,  171,  800,  801,  176,  177,  806,  807,  182,  183,  812,    813,  188,  189,  818,  819,  194,  195,  824,  825,  200,  201,    830,  831,  206,  207,  836,  837],
        [ 172,  173,  802,  803,  178,  179,  808,  809,  184,  185,  814,    815,  190,  191,  820,  821,  196,  197,  826,  827,  202,  203,    832,  833,  208,  209,  838,  839],
        [ 378,  379, 1008, 1009,  384,  385, 1014, 1015,  390,  391, 1020,1021,  396,  397, 1026, 1027,  402,  403, 1032, 1033,  408,  409,1038, 1039,  414,  415, 1044, 1045],
        [ 380,  381, 1010, 1011,  386,  387, 1016, 1017,  392,  393, 1022,1023,  398,  399, 1028, 1029,  404,  405, 1034, 1035,  410,  411,1040, 1041,  416,  417, 1046, 1047],
        [ 382,  383, 1012, 1013,  388,  389, 1018, 1019,  394,  395, 1024,1025,  400,  401, 1030, 1031,  406,  407, 1036, 1037,  412,  413,1042, 1043,  418,  419, 1048, 1049],
        [ 420,  421, 1050, 1051,  426,  427, 1056, 1057,  432,  433, 1062,1063,  438,  439, 1068, 1069,  444,  445, 1074, 1075,  450,  451,1080, 1081,  456,  457, 1086, 1087],
        [ 422,  423, 1052, 1053,  428,  429, 1058, 1059,  434,  435, 1064,1065,  440,  441, 1070, 1071,  446,  447, 1076, 1077,  452,  453,1082, 1083,  458,  459, 1088, 1089],
        [ 424,  425, 1054, 1055,  430,  431, 1060, 1061,  436,  437, 1066,1067,  442,  443, 1072, 1073,  448,  449, 1078, 1079,  454,  455,1084, 1085,  460,  461, 1090, 1091],
        [ 546,  547, 1176, 1177,  552,  553, 1182, 1183,  558,  559, 1188,1189,  564,  565, 1194, 1195,  570,  571, 1200, 1201,  576,  577,1206, 1207,  582,  583, 1212, 1213],
        [ 548,  549, 1178, 1179,  554,  555, 1184, 1185,  560,  561, 1190,1191,  566,  567, 1196, 1197,  572,  573, 1202, 1203,  578,  579,1208, 1209,  584,  585, 1214, 1215],
        [ 550,  551, 1180, 1181,  556,  557, 1186, 1187,  562,  563, 1192,1193,  568,  569, 1198, 1199,  574,  575, 1204, 1205,  580,  581,1210, 1211,  586,  587, 1216, 1217],
        [ 462,  463, 1092, 1093,  468,  469, 1098, 1099,  474,  475, 1104,1105,  480,  481, 1110, 1111,  486,  487, 1116, 1117,  492,  493,1122, 1123,  498,  499, 1128, 1129],
        [ 464,  465, 1094, 1095,  470,  471, 1100, 1101,  476,  477, 1106,1107,  482,  483, 1112, 1113,  488,  489, 1118, 1119,  494,  495,1124, 1125,  500,  501, 1130, 1131],
        [ 466,  467, 1096, 1097,  472,  473, 1102, 1103,  478,  479, 1108,1109,  484,  485, 1114, 1115,  490,  491, 1120, 1121,  496,  497,1126, 1127,  502,  503, 1132, 1133],
        [ 588,  589, 1218, 1219,  594,  595, 1224, 1225,  600,  601, 1230,1231,  606,  607, 1236, 1237,  612,  613, 1242, 1243,  618,  619,1248, 1249,  624,  625, 1254, 1255],
        [ 590,  591, 1220, 1221,  596,  597, 1226, 1227,  602,  603, 1232,1233,  608,  609, 1238, 1239,  614,  615, 1244, 1245,  620,  621,1250, 1251,  626,  627, 1256, 1257],
        [ 592,  593, 1222, 1223,  598,  599, 1228, 1229,  604,  605, 1234,1235,  610,  611, 1240, 1241,  616,  617, 1246, 1247,  622,  623,1252, 1253,  628,  629, 1258, 1259],
        [ 504,  505, 1134, 1135,  510,  511, 1140, 1141,  516,  517, 1146,1147,  522,  523, 1152, 1153,  528,  529, 1158, 1159,  534,  535,1164, 1165,  540,  541, 1170, 1171],
        [ 506,  507, 1136, 1137,  512,  513, 1142, 1143,  518,  519, 1148,1149,  524,  525, 1154, 1155,  530,  531, 1160, 1161,  536,  537,1166, 1167,  542,  543, 1172, 1173],
        [ 508,  509, 1138, 1139,  514,  515, 1144, 1145,  520,  521, 1150,1151,  526,  527, 1156, 1157,  532,  533, 1162, 1163,  538,  539,1168, 1169,  544,  545, 1174, 1175]])
    # fmt: on
    access_order, access_count = tiles.access_tensors()
    assert (access_order == ref_access_order_tensor).all()
    assert (access_count == 1).all()

    # all col major
    tensor_dims = (3 * 5 * 3, 2 * 7 * 2)
    tiles = TensorTiler2D.step_tiler(
        tensor_dims,
        tile_dims=(3, 2),
        tile_group_repeats=(5, 7),
        tile_group_steps=(2, 2),
        allow_partial=True,
        iter_col_major=True,
        tile_col_major=True,
        tile_group_col_major=True,
    )
    assert len(tiles) == 8
    reference_tiles = reference_tiles = TensorTileSequence.from_tiles(
        [
            TensorTile(
                tensor_dims, offset=0, sizes=[7, 5, 2, 3], strides=[4, 168, 1, 28]
            ),
            TensorTile(
                tensor_dims, offset=84, sizes=[7, 5, 2, 3], strides=[4, 168, 1, 28]
            ),
            TensorTile(
                tensor_dims, offset=840, sizes=[7, 3, 2, 3], strides=[4, 168, 1, 28]
            ),
            TensorTile(
                tensor_dims, offset=924, sizes=[7, 2, 2, 3], strides=[4, 168, 1, 28]
            ),
            TensorTile(
                tensor_dims, offset=2, sizes=[7, 5, 2, 3], strides=[4, 168, 1, 28]
            ),
            TensorTile(
                tensor_dims, offset=86, sizes=[7, 5, 2, 3], strides=[4, 168, 1, 28]
            ),
            TensorTile(
                tensor_dims, offset=842, sizes=[7, 3, 2, 3], strides=[4, 168, 1, 28]
            ),
            TensorTile(
                tensor_dims, offset=926, sizes=[7, 2, 2, 3], strides=[4, 168, 1, 28]
            ),
        ]
    )
    assert tiles == reference_tiles

    # fmt: off
    ref_access_order_tensor = np.array([
        [   0,    3,  630,  633,   30,   33,  660,  663,   60,   63,  690,  693,   90,   93,  720,  723,  120,  123,  750,  753,  150,  153,  780,  783,  180,  183,  810,  813],
        [   1,    4,  631,  634,   31,   34,  661,  664,   61,   64,  691,  694,   91,   94,  721,  724,  121,  124,  751,  754,  151,  154,  781,  784,  181,  184,  811,  814],
        [   2,    5,  632,  635,   32,   35,  662,  665,   62,   65,  692,  695,   92,   95,  722,  725,  122,  125,  752,  755,  152,  155,  782,  785,  182,  185,  812,  815],
        [ 210,  213,  840,  843,  240,  243,  870,  873,  270,  273,  900,  903,  300,  303,  930,  933,  330,  333,  960,  963,  360,  363,  990,  993,  390,  393, 1020, 1023],
        [ 211,  214,  841,  844,  241,  244,  871,  874,  271,  274,  901,  904,  301,  304,  931,  934,  331,  334,  961,  964,  361,  364,  991,  994,  391,  394, 1021, 1024],
        [ 212,  215,  842,  845,  242,  245,  872,  875,  272,  275,  902,  905,  302,  305,  932,  935,  332,  335,  962,  965,  362,  365,  992,  995,  392,  395, 1022, 1025],
        [   6,    9,  636,  639,   36,   39,  666,  669,   66,   69,  696,  699,   96,   99,  726,  729,  126,  129,  756,  759,  156,  159,  786,  789,  186,  189,  816,  819],
        [   7,   10,  637,  640,   37,   40,  667,  670,   67,   70,  697,  700,   97,  100,  727,  730,  127,  130,  757,  760,  157,  160,  787,  790,  187,  190,  817,  820],
        [   8,   11,  638,  641,   38,   41,  668,  671,   68,   71,  698,  701,   98,  101,  728,  731,  128,  131,  758,  761,  158,  161,  788,  791,  188,  191,  818,  821],
        [ 216,  219,  846,  849,  246,  249,  876,  879,  276,  279,  906,  909,  306,  309,  936,  939,  336,  339,  966,  969,  366,  369,  996,  999,  396,  399, 1026, 1029],
        [ 217,  220,  847,  850,  247,  250,  877,  880,  277,  280,  907,  910,  307,  310,  937,  940,  337,  340,  967,  970,  367,  370,  997, 1000,  397,  400, 1027, 1030],
        [ 218,  221,  848,  851,  248,  251,  878,  881,  278,  281,  908,  911,  308,  311,  938,  941,  338,  341,  968,  971,  368,  371,  998, 1001,  398,  401, 1028, 1031],
        [  12,   15,  642,  645,   42,   45,  672,  675,   72,   75,  702,  705,  102,  105,  732,  735,  132,  135,  762,  765,  162,  165,  792,  795,  192,  195,  822,  825],
        [  13,   16,  643,  646,   43,   46,  673,  676,   73,   76,  703,  706,  103,  106,  733,  736,  133,  136,  763,  766,  163,  166,  793,  796,  193,  196,  823,  826],
        [  14,   17,  644,  647,   44,   47,  674,  677,   74,   77,  704,  707,  104,  107,  734,  737,  134,  137,  764,  767,  164,  167,  794,  797,  194,  197,  824,  827],
        [ 222,  225,  852,  855,  252,  255,  882,  885,  282,  285,  912,  915,  312,  315,  942,  945,  342,  345,  972,  975,  372,  375, 1002, 1005,  402,  405, 1032, 1035],
        [ 223,  226,  853,  856,  253,  256,  883,  886,  283,  286,  913,  916,  313,  316,  943,  946,  343,  346,  973,  976,  373,  376, 1003, 1006,  403,  406, 1033, 1036],
        [ 224,  227,  854,  857,  254,  257,  884,  887,  284,  287,  914,  917,  314,  317,  944,  947,  344,  347,  974,  977,  374,  377, 1004, 1007,  404,  407, 1034, 1037],
        [  18,   21,  648,  651,   48,   51,  678,  681,   78,   81,  708,  711,  108,  111,  738,  741,  138,  141,  768,  771,  168,  171,  798,  801,  198,  201,  828,  831],
        [  19,   22,  649,  652,   49,   52,  679,  682,   79,   82,  709,  712,  109,  112,  739,  742,  139,  142,  769,  772,  169,  172,  799,  802,  199,  202,  829,  832],
        [  20,   23,  650,  653,   50,   53,  680,  683,   80,   83,  710,  713,  110,  113,  740,  743,  140,  143,  770,  773,  170,  173,  800,  803,  200,  203,  830,  833],
        [ 228,  231,  858,  861,  258,  261,  888,  891,  288,  291,  918,  921,  318,  321,  948,  951,  348,  351,  978,  981,  378,  381, 1008, 1011,  408,  411, 1038, 1041],
        [ 229,  232,  859,  862,  259,  262,  889,  892,  289,  292,  919,  922,  319,  322,  949,  952,  349,  352,  979,  982,  379,  382, 1009, 1012,  409,  412, 1039, 1042],
        [ 230,  233,  860,  863,  260,  263,  890,  893,  290,  293,  920,  923,  320,  323,  950,  953,  350,  353,  980,  983,  380,  383, 1010, 1013,  410,  413, 1040, 1043],
        [  24,   27,  654,  657,   54,   57,  684,  687,   84,   87,  714,  717,  114,  117,  744,  747,  144,  147,  774,  777,  174,  177,  804,  807,  204,  207,  834,  837],
        [  25,   28,  655,  658,   55,   58,  685,  688,   85,   88,  715,  718,  115,  118,  745,  748,  145,  148,  775,  778,  175,  178,  805,  808,  205,  208,  835,  838],
        [  26,   29,  656,  659,   56,   59,  686,  689,   86,   89,  716,  719,  116,  119,  746,  749,  146,  149,  776,  779,  176,  179,  806,  809,  206,  209,  836,  839],
        [ 234,  237,  864,  867,  264,  267,  894,  897,  294,  297,  924,  927,  324,  327,  954,  957,  354,  357,  984,  987,  384,  387, 1014, 1017,  414,  417, 1044, 1047],
        [ 235,  238,  865,  868,  265,  268,  895,  898,  295,  298,  925,  928,  325,  328,  955,  958,  355,  358,  985,  988,  385,  388, 1015, 1018,  415,  418, 1045, 1048],
        [ 236,  239,  866,  869,  266,  269,  896,  899,  296,  299,  926,  929,  326,  329,  956,  959,  356,  359,  986,  989,  386,  389, 1016, 1019,  416,  419, 1046, 1049],
        [ 420,  423, 1050, 1053,  438,  441, 1068, 1071,  456,  459, 1086, 1089,  474,  477, 1104, 1107,  492,  495, 1122, 1125,  510,  513, 1140, 1143,  528,  531, 1158, 1161],
        [ 421,  424, 1051, 1054,  439,  442, 1069, 1072,  457,  460, 1087, 1090,  475,  478, 1105, 1108,  493,  496, 1123, 1126,  511,  514, 1141, 1144,  529,  532, 1159, 1162],
        [ 422,  425, 1052, 1055,  440,  443, 1070, 1073,  458,  461, 1088, 1091,  476,  479, 1106, 1109,  494,  497, 1124, 1127,  512,  515, 1142, 1145,  530,  533, 1160, 1163],
        [ 546,  549, 1176, 1179,  558,  561, 1188, 1191,  570,  573, 1200, 1203,  582,  585, 1212, 1215,  594,  597, 1224, 1227,  606,  609, 1236, 1239,  618,  621, 1248, 1251],
        [ 547,  550, 1177, 1180,  559,  562, 1189, 1192,  571,  574, 1201, 1204,  583,  586, 1213, 1216,  595,  598, 1225, 1228,  607,  610, 1237, 1240,  619,  622, 1249, 1252],
        [ 548,  551, 1178, 1181,  560,  563, 1190, 1193,  572,  575, 1202, 1205,  584,  587, 1214, 1217,  596,  599, 1226, 1229,  608,  611, 1238, 1241,  620,  623, 1250, 1253],
        [ 426,  429, 1056, 1059,  444,  447, 1074, 1077,  462,  465, 1092, 1095,  480,  483, 1110, 1113,  498,  501, 1128, 1131,  516,  519, 1146, 1149,  534,  537, 1164, 1167],
        [ 427,  430, 1057, 1060,  445,  448, 1075, 1078,  463,  466, 1093, 1096,  481,  484, 1111, 1114,  499,  502, 1129, 1132,  517,  520, 1147, 1150,  535,  538, 1165, 1168],
        [ 428,  431, 1058, 1061,  446,  449, 1076, 1079,  464,  467, 1094, 1097,  482,  485, 1112, 1115,  500,  503, 1130, 1133,  518,  521, 1148, 1151,  536,  539, 1166, 1169],
        [ 552,  555, 1182, 1185,  564,  567, 1194, 1197,  576,  579, 1206, 1209,  588,  591, 1218, 1221,  600,  603, 1230, 1233,  612,  615, 1242, 1245,  624,  627, 1254, 1257],
        [ 553,  556, 1183, 1186,  565,  568, 1195, 1198,  577,  580, 1207, 1210,  589,  592, 1219, 1222,  601,  604, 1231, 1234,  613,  616, 1243, 1246,  625,  628, 1255, 1258],
        [ 554,  557, 1184, 1187,  566,  569, 1196, 1199,  578,  581, 1208, 1211,  590,  593, 1220, 1223,  602,  605, 1232, 1235,  614,  617, 1244, 1247,  626,  629, 1256, 1259],
        [ 432,  435, 1062, 1065,  450,  453, 1080, 1083,  468,  471, 1098, 1101,  486,  489, 1116, 1119,  504,  507, 1134, 1137,  522,  525, 1152, 1155,  540,  543, 1170, 1173],
        [ 433,  436, 1063, 1066,  451,  454, 1081, 1084,  469,  472, 1099, 1102,  487,  490, 1117, 1120,  505,  508, 1135, 1138,  523,  526, 1153, 1156,  541,  544, 1171, 1174],
        [ 434,  437, 1064, 1067,  452,  455, 1082, 1085,  470,  473, 1100, 1103,  488,  491, 1118, 1121,  506,  509, 1136, 1139,  524,  527, 1154, 1157,  542,  545, 1172, 1175]
    ])
    # fmt: on
    access_order, access_count = tiles.access_tensors()
    assert (access_order == ref_access_order_tensor).all()
    assert (access_count == 1).all()

    # pattern repeat
    tensor_dims = (3 * 5 * 3, 2 * 7 * 2)
    tiles = TensorTiler2D.step_tiler(
        tensor_dims,
        tile_dims=(3, 2),
        tile_group_repeats=(5, 7),
        tile_group_steps=(2, 1),
        allow_partial=True,
        pattern_repeat=2,
        tile_col_major=True,
    )
    assert len(tiles) == 8
    reference_tiles = reference_tiles = TensorTileSequence.from_tiles(
        [
            TensorTile(
                tensor_dims, offset=0, sizes=[2, 5, 14, 3], strides=[0, 168, 1, 28]
            ),
            TensorTile(
                tensor_dims, offset=14, sizes=[2, 5, 14, 3], strides=[0, 168, 1, 28]
            ),
            TensorTile(
                tensor_dims, offset=84, sizes=[2, 5, 14, 3], strides=[0, 168, 1, 28]
            ),
            TensorTile(
                tensor_dims, offset=98, sizes=[2, 5, 14, 3], strides=[0, 168, 1, 28]
            ),
            TensorTile(
                tensor_dims, offset=840, sizes=[2, 3, 14, 3], strides=[0, 168, 1, 28]
            ),
            TensorTile(
                tensor_dims, offset=854, sizes=[2, 3, 14, 3], strides=[0, 168, 1, 28]
            ),
            TensorTile(
                tensor_dims, offset=924, sizes=[2, 2, 14, 3], strides=[0, 168, 1, 28]
            ),
            TensorTile(
                tensor_dims, offset=938, sizes=[2, 2, 14, 3], strides=[0, 168, 1, 28]
            ),
        ]
    )
    assert tiles == reference_tiles

    # fmt: off
    ref_access_order_tensor = np.array([
        [ 210,  213,  216,  219,  222,  225,  228,  231,  234,  237,  240,  243,  246,  249,  630,  633,  636,  639,  642,  645,  648,  651,  654,  657,  660,  663,  666,  669],
        [ 211,  214,  217,  220,  223,  226,  229,  232,  235,  238,  241,  244,  247,  250,  631,  634,  637,  640,  643,  646,  649,  652,  655,  658,  661,  664,  667,  670],
        [ 212,  215,  218,  221,  224,  227,  230,  233,  236,  239,  242,  245,  248,  251,  632,  635,  638,  641,  644,  647,  650,  653,  656,  659,  662,  665,  668,  671],
        [1050, 1053, 1056, 1059, 1062, 1065, 1068, 1071, 1074, 1077, 1080, 1083, 1086, 1089, 1470, 1473, 1476, 1479, 1482, 1485, 1488, 1491, 1494, 1497, 1500, 1503, 1506, 1509],
        [1051, 1054, 1057, 1060, 1063, 1066, 1069, 1072, 1075, 1078, 1081, 1084, 1087, 1090, 1471, 1474, 1477, 1480, 1483, 1486, 1489, 1492, 1495, 1498, 1501, 1504, 1507, 1510],
        [1052, 1055, 1058, 1061, 1064, 1067, 1070, 1073, 1076, 1079, 1082, 1085, 1088, 1091, 1472, 1475, 1478, 1481, 1484, 1487, 1490, 1493, 1496, 1499, 1502, 1505, 1508, 1511],
        [ 252,  255,  258,  261,  264,  267,  270,  273,  276,  279,  282,  285,  288,  291,  672,  675,  678,  681,  684,  687,  690,  693,  696,  699,  702,  705,  708,  711],
        [ 253,  256,  259,  262,  265,  268,  271,  274,  277,  280,  283,  286,  289,  292,  673,  676,  679,  682,  685,  688,  691,  694,  697,  700,  703,  706,  709,  712],
        [ 254,  257,  260,  263,  266,  269,  272,  275,  278,  281,  284,  287,  290,  293,  674,  677,  680,  683,  686,  689,  692,  695,  698,  701,  704,  707,  710,  713],
        [1092, 1095, 1098, 1101, 1104, 1107, 1110, 1113, 1116, 1119, 1122, 1125, 1128, 1131, 1512, 1515, 1518, 1521, 1524, 1527, 1530, 1533, 1536, 1539, 1542, 1545, 1548, 1551],
        [1093, 1096, 1099, 1102, 1105, 1108, 1111, 1114, 1117, 1120, 1123, 1126, 1129, 1132, 1513, 1516, 1519, 1522, 1525, 1528, 1531, 1534, 1537, 1540, 1543, 1546, 1549, 1552],
        [1094, 1097, 1100, 1103, 1106, 1109, 1112, 1115, 1118, 1121, 1124, 1127, 1130, 1133, 1514, 1517, 1520, 1523, 1526, 1529, 1532, 1535, 1538, 1541, 1544, 1547, 1550, 1553],
        [ 294,  297,  300,  303,  306,  309,  312,  315,  318,  321,  324,  327,  330,  333,  714,  717,  720,  723,  726,  729,  732,  735,  738,  741,  744,  747,  750,  753],
        [ 295,  298,  301,  304,  307,  310,  313,  316,  319,  322,  325,  328,  331,  334,  715,  718,  721,  724,  727,  730,  733,  736,  739,  742,  745,  748,  751,  754],
        [ 296,  299,  302,  305,  308,  311,  314,  317,  320,  323,  326,  329,  332,  335,  716,  719,  722,  725,  728,  731,  734,  737,  740,  743,  746,  749,  752,  755],
        [1134, 1137, 1140, 1143, 1146, 1149, 1152, 1155, 1158, 1161, 1164, 1167, 1170, 1173, 1554, 1557, 1560, 1563, 1566, 1569, 1572, 1575, 1578, 1581, 1584, 1587, 1590, 1593],
        [1135, 1138, 1141, 1144, 1147, 1150, 1153, 1156, 1159, 1162, 1165, 1168, 1171, 1174, 1555, 1558, 1561, 1564, 1567, 1570, 1573, 1576, 1579, 1582, 1585, 1588, 1591, 1594],
        [1136, 1139, 1142, 1145, 1148, 1151, 1154, 1157, 1160, 1163, 1166, 1169, 1172, 1175, 1556, 1559, 1562, 1565, 1568, 1571, 1574, 1577, 1580, 1583, 1586, 1589, 1592, 1595],
        [ 336,  339,  342,  345,  348,  351,  354,  357,  360,  363,  366,  369,  372,  375,  756,  759,  762,  765,  768,  771,  774,  777,  780,  783,  786,  789,  792,  795],
        [ 337,  340,  343,  346,  349,  352,  355,  358,  361,  364,  367,  370,  373,  376,  757,  760,  763,  766,  769,  772,  775,  778,  781,  784,  787,  790,  793,  796],
        [ 338,  341,  344,  347,  350,  353,  356,  359,  362,  365,  368,  371,  374,  377,  758,  761,  764,  767,  770,  773,  776,  779,  782,  785,  788,  791,  794,  797],
        [1176, 1179, 1182, 1185, 1188, 1191, 1194, 1197, 1200, 1203, 1206, 1209, 1212, 1215, 1596, 1599, 1602, 1605, 1608, 1611, 1614, 1617, 1620, 1623, 1626, 1629, 1632, 1635],
        [1177, 1180, 1183, 1186, 1189, 1192, 1195, 1198, 1201, 1204, 1207, 1210, 1213, 1216, 1597, 1600, 1603, 1606, 1609, 1612, 1615, 1618, 1621, 1624, 1627, 1630, 1633, 1636],
        [1178, 1181, 1184, 1187, 1190, 1193, 1196, 1199, 1202, 1205, 1208, 1211, 1214, 1217, 1598, 1601, 1604, 1607, 1610, 1613, 1616, 1619, 1622, 1625, 1628, 1631, 1634, 1637],
        [ 378,  381,  384,  387,  390,  393,  396,  399,  402,  405,  408,  411,  414,  417,  798,  801,  804,  807,  810,  813,  816,  819,  822,  825,  828,  831,  834,  837],
        [ 379,  382,  385,  388,  391,  394,  397,  400,  403,  406,  409,  412,  415,  418,  799,  802,  805,  808,  811,  814,  817,  820,  823,  826,  829,  832,  835,  838],
        [ 380,  383,  386,  389,  392,  395,  398,  401,  404,  407,  410,  413,  416,  419,  800,  803,  806,  809,  812,  815,  818,  821,  824,  827,  830,  833,  836,  839],
        [1218, 1221, 1224, 1227, 1230, 1233, 1236, 1239, 1242, 1245, 1248, 1251, 1254, 1257, 1638, 1641, 1644, 1647, 1650, 1653, 1656, 1659, 1662, 1665, 1668, 1671, 1674, 1677],
        [1219, 1222, 1225, 1228, 1231, 1234, 1237, 1240, 1243, 1246, 1249, 1252, 1255, 1258, 1639, 1642, 1645, 1648, 1651, 1654, 1657, 1660, 1663, 1666, 1669, 1672, 1675, 1678],
        [1220, 1223, 1226, 1229, 1232, 1235, 1238, 1241, 1244, 1247, 1250, 1253, 1256, 1259, 1640, 1643, 1646, 1649, 1652, 1655, 1658, 1661, 1664, 1667, 1670, 1673, 1676, 1679],
        [1806, 1809, 1812, 1815, 1818, 1821, 1824, 1827, 1830, 1833, 1836, 1839, 1842, 1845, 2058, 2061, 2064, 2067, 2070, 2073, 2076, 2079, 2082, 2085, 2088, 2091, 2094, 2097],
        [1807, 1810, 1813, 1816, 1819, 1822, 1825, 1828, 1831, 1834, 1837, 1840, 1843, 1846, 2059, 2062, 2065, 2068, 2071, 2074, 2077, 2080, 2083, 2086, 2089, 2092, 2095, 2098],
        [1808, 1811, 1814, 1817, 1820, 1823, 1826, 1829, 1832, 1835, 1838, 1841, 1844, 1847, 2060, 2063, 2066, 2069, 2072, 2075, 2078, 2081, 2084, 2087, 2090, 2093, 2096, 2099],
        [2268, 2271, 2274, 2277, 2280, 2283, 2286, 2289, 2292, 2295, 2298, 2301, 2304, 2307, 2436, 2439, 2442, 2445, 2448, 2451, 2454, 2457, 2460, 2463, 2466, 2469, 2472, 2475],
        [2269, 2272, 2275, 2278, 2281, 2284, 2287, 2290, 2293, 2296, 2299, 2302, 2305, 2308, 2437, 2440, 2443, 2446, 2449, 2452, 2455, 2458, 2461, 2464, 2467, 2470, 2473, 2476],
        [2270, 2273, 2276, 2279, 2282, 2285, 2288, 2291, 2294, 2297, 2300, 2303, 2306, 2309, 2438, 2441, 2444, 2447, 2450, 2453, 2456, 2459, 2462, 2465, 2468, 2471, 2474, 2477],
        [1848, 1851, 1854, 1857, 1860, 1863, 1866, 1869, 1872, 1875, 1878, 1881, 1884, 1887, 2100, 2103, 2106, 2109, 2112, 2115, 2118, 2121, 2124, 2127, 2130, 2133, 2136, 2139],
        [1849, 1852, 1855, 1858, 1861, 1864, 1867, 1870, 1873, 1876, 1879, 1882, 1885, 1888, 2101, 2104, 2107, 2110, 2113, 2116, 2119, 2122, 2125, 2128, 2131, 2134, 2137, 2140],
        [1850, 1853, 1856, 1859, 1862, 1865, 1868, 1871, 1874, 1877, 1880, 1883, 1886, 1889, 2102, 2105, 2108, 2111, 2114, 2117, 2120, 2123, 2126, 2129, 2132, 2135, 2138, 2141],
        [2310, 2313, 2316, 2319, 2322, 2325, 2328, 2331, 2334, 2337, 2340, 2343, 2346, 2349, 2478, 2481, 2484, 2487, 2490, 2493, 2496, 2499, 2502, 2505, 2508, 2511, 2514, 2517],
        [2311, 2314, 2317, 2320, 2323, 2326, 2329, 2332, 2335, 2338, 2341, 2344, 2347, 2350, 2479, 2482, 2485, 2488, 2491, 2494, 2497, 2500, 2503, 2506, 2509, 2512, 2515, 2518],
        [2312, 2315, 2318, 2321, 2324, 2327, 2330, 2333, 2336, 2339, 2342, 2345, 2348, 2351, 2480, 2483, 2486, 2489, 2492, 2495, 2498, 2501, 2504, 2507, 2510, 2513, 2516, 2519],
        [1890, 1893, 1896, 1899, 1902, 1905, 1908, 1911, 1914, 1917, 1920, 1923, 1926, 1929, 2142, 2145, 2148, 2151, 2154, 2157, 2160, 2163, 2166, 2169, 2172, 2175, 2178, 2181],
        [1891, 1894, 1897, 1900, 1903, 1906, 1909, 1912, 1915, 1918, 1921, 1924, 1927, 1930, 2143, 2146, 2149, 2152, 2155, 2158, 2161, 2164, 2167, 2170, 2173, 2176, 2179, 2182],
        [1892, 1895, 1898, 1901, 1904, 1907, 1910, 1913, 1916, 1919, 1922, 1925, 1928, 1931, 2144, 2147, 2150, 2153, 2156, 2159, 2162, 2165, 2168, 2171, 2174, 2177, 2180, 2183]])
    # fmt: on
    access_order, access_count = tiles.access_tensors()
    assert (access_order == ref_access_order_tensor).all()
    assert (access_count == 2).all()

    # CHECK: Pass!
    print("Pass!")


# CHECK-LABEL: step_tiler_partial_both
@construct_test
def step_tiler_partial_both():

    # all row major
    # tile col major
    # tile group col major
    # iter col major
    # all col major
    # pattern repeat

    # CHECK: Pass!
    print("Pass!")
