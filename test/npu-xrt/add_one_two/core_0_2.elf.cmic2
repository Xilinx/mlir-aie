
// File generated by darts version U-2022.12#3eec2545bc#230622, Tue Aug 20 14:38:49 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// darts -I/proj/xbuilds/2023.2_INT_1013_2256/installs/all_platforms/Vitis/2023.2/aietools/data/aie_ml/lib -d -h -I/proj/xbuilds/2023.2_INT_1013_2256/installs/all_platforms/Vitis/2023.2/aietools/data/aie_ml/lib/runtime_cxx/libcxx-lite/include -I/proj/xbuilds/2023.2_INT_1013_2256/installs/all_platforms/Vitis/2023.2/aietools/data/aie_ml/lib/runtime_cxx/libs/libcxx-9.0.0/include-lite -I/proj/xbuilds/2023.2_INT_1013_2256/installs/all_platforms/Vitis/2023.2/aietools/data/aie_ml/lib/runtime/include -I<BOOST_DIR> -D__AIENGINE__ -D__AIE_ARCH__=20 -D__AIEARCH__=20 -D__tct_tgt__=230622 -L +Ihex +nanno +u core_0_2.elf me

// Release: ipp U-2022.12-TGT-230622
.label __AIE_ARCH_MODEL_VERSION__20010300__inlined__1__me_basic___main_init_
.label _main_init
.function_start
	     0      "01000011" // 	                                                                                          MOVXM sp, #458752 /* MW 8 */
	     1      "00010000" // /* MW 7 */
	     2      "00000000" // /* MW 6 */
	     3      "00111000" // /* MW 5 */
	     4      "11000011" // /* MW 4 */
	     5      "00000001" // /* MW 3 */
	     6      "00000000" // /* MW 2 */
	     7      "00000000" // /* MW 1 */
	     8      "01010101" // 	                                                                                          MOVXM r16, #0 /* MW 6 */
	     9      "00000000" // /* MW 5 */
	    10      "00000000" // /* MW 4 */
	    11      "00001000" // /* MW 3 */
	    12      "00000000" // /* MW 2 */
	    13      "00000000" // /* MW 1 */
	    14      "01010101" // 	                                                                                          MOVXM r24, #0 /* MW 6 */
	    15      "00000000" // /* MW 5 */
	    16      "00000000" // /* MW 4 */
	    17      "00001100" // /* MW 3 */
	    18      "00000000" // /* MW 2 */
	    19      "00000000" // /* MW 1 */
	    20      "10011001" // 	                                                                                          EQ r24, r24, r16 /* MW 4 */
	    21      "00000111" // /* MW 3 */
	    22      "00110001" // /* MW 2 */
	    23      "00010110" // /* MW 1 */
	    24      "10010101" // 	                                                                                          JNZ r24, #128 /* MW 6 */
	    25      "00000001" // /* MW 5 */
	    26      "01000000" // /* MW 4 */
	    27      "01000000" // /* MW 3 */
	    28      "00000000" // /* MW 2 */
	    29      "11000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    30      "00000001" // 	NOPX /* MW 2 */
	    31      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    32      "00000001" // 	NOPX /* MW 2 */
	    33      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    34      "00000001" // 	NOPX /* MW 2 */
	    35      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    36      "00000001" // 	NOPX /* MW 2 */
	    37      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    38      "00000001" // 	NOPX /* MW 2 */
	    39      "00000000" // /* MW 1 */
	    40      "01010101" // 	                                                                                          MOVXM p6, #-4 /* MW 6 */
	    41      "11111000" // /* MW 5 */
	    42      "01111111" // /* MW 4 */
	    43      "11111100" // /* MW 3 */
	    44      "11111111" // /* MW 2 */
	    45      "11111111" // /* MW 1 */
	    46      "01011001" // 	                                                                                                                        MOV p7, p0 /* MW 4 */
	    47      "01110110" // /* MW 3 */
	    48      "00110000" // /* MW 2 */
	    49      "00011111" // /* MW 1 */
	    50      "00101111" // 	NOPA;                                                       NOPS;                                                       MOV r17, r1;                            NOPV /* MW 14 */
	    51      "01111000" // /* MW 13 */
	    52      "00000000" // /* MW 12 */
	    53      "00000000" // /* MW 11 */
	    54      "10110010" // /* MW 10 */
	    55      "00000100" // /* MW 9 */
	    56      "01100010" // /* MW 8 */
	    57      "00000000" // /* MW 7 */
	    58      "00000000" // /* MW 6 */
	    59      "00000000" // /* MW 5 */
	    60      "00000000" // /* MW 4 */
	    61      "00000000" // /* MW 3 */
	    62      "00000000" // /* MW 2 */
	    63      "00000000" // /* MW 1 */
.label TGT_F_main_init_64
.loop_nesting 1
	    64      "01001101" // 	LDA p0, [p6], #-4;                                                                                                      MOV r18, p6 /* MW 6 */
	    65      "01110110" // /* MW 5 */
	    66      "10001100" // /* MW 4 */
	    67      "11011100" // /* MW 3 */
	    68      "11110000" // /* MW 2 */
	    69      "11011111" // /* MW 1 */
	    70      "00000001" // 	NOPX /* MW 2 */
	    71      "00000000" // /* MW 1 */
	    72      "00000001" // 	NOPX /* MW 2 */
	    73      "00000000" // /* MW 1 */
	    74      "00000001" // 	NOPX /* MW 2 */
	    75      "00000000" // /* MW 1 */
	    76      "00000001" // 	NOPX /* MW 2 */
	    77      "00000000" // /* MW 1 */
	    78      "00000001" // 	NOPX /* MW 2 */
	    79      "00000000" // /* MW 1 */
	    80      "00000001" // 	NOPX /* MW 2 */
	    81      "00000000" // /* MW 1 */
.no_stack_arguments
	    82      "00011001" // 	                                                                                          JL p0 /* MW 4 */
	    83      "00010100" // /* MW 3 */
	    84      "00000000" // /* MW 2 */
	    85      "00010000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    86      "00000001" // 	NOPX /* MW 2 */
	    87      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    88      "00000001" // 	NOPX /* MW 2 */
	    89      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    90      "00000001" // 	NOPX /* MW 2 */
	    91      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    92      "00000001" // 	NOPX /* MW 2 */
	    93      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    94      "00000001" // 	NOPX /* MW 2 */
	    95      "00000000" // /* MW 1 */
.return_address
	    96      "10011001" // 	                                                                                          NE r24, r18, r16 /* MW 4 */
	    97      "00001000" // /* MW 3 */
	    98      "10110001" // /* MW 2 */
	    99      "00010100" // /* MW 1 */
	   100      "10010101" // 	                                                                                          JNZ r24, #64 /* MW 6 */
	   101      "00000001" // /* MW 5 */
	   102      "01000000" // /* MW 4 */
	   103      "00100000" // /* MW 3 */
	   104      "00000000" // /* MW 2 */
	   105      "11000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   106      "00000001" // 	NOPX /* MW 2 */
	   107      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   108      "00000001" // 	NOPX /* MW 2 */
	   109      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   110      "00000001" // 	NOPX /* MW 2 */
	   111      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   112      "00000001" // 	NOPX /* MW 2 */
	   113      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   114      "00000001" // 	NOPX /* MW 2 */
	   115      "00000000" // /* MW 1 */
.loop_nesting 0
	   116      "01011001" // 	                                                                                                                        MOV p0, p7 /* MW 4 */
	   117      "01110110" // /* MW 3 */
	   118      "00111110" // /* MW 2 */
	   119      "00011000" // /* MW 1 */
	   120      "00000011" // 	                                                            NOPS;                                                       MOV r1, r17 /* MW 8 */
	   121      "00100000" // /* MW 7 */
	   122      "01001011" // /* MW 6 */
	   123      "00100100" // /* MW 5 */
	   124      "00000000" // /* MW 4 */
	   125      "00000000" // /* MW 3 */
	   126      "00000000" // /* MW 2 */
	   127      "00000000" // /* MW 1 */
.label TGT_F_main_init_128
.no_stack_arguments
	   128      "00010101" // 	                                                                                          JL #224 /* MW 6 */
	   129      "00000001" // /* MW 5 */
	   130      "00000000" // /* MW 4 */
	   131      "01110000" // /* MW 3 */
	   132      "00000000" // /* MW 2 */
	   133      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   134      "00000001" // 	NOPX /* MW 2 */
	   135      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   136      "00000001" // 	NOPX /* MW 2 */
	   137      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   138      "00000001" // 	NOPX /* MW 2 */
	   139      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   140      "00000001" // 	NOPX /* MW 2 */
	   141      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   142      "00000001" // 	NOPX /* MW 2 */
	   143      "00000000" // /* MW 1 */
.return_address
.no_stack_arguments
	   144      "00010101" // 	                                                                                          JL #1072 /* MW 6 */
	   145      "00000001" // /* MW 5 */
	   146      "00000000" // /* MW 4 */
	   147      "00011000" // /* MW 3 */
	   148      "00000010" // /* MW 2 */
	   149      "00000000" // /* MW 1 */
.delay_slot
	   150      "10011001" // 	                                                                                                                        MOV p0, #0 /* MW 4 */
	   151      "00000110" // /* MW 3 */
	   152      "00110000" // /* MW 2 */
	   153      "00011000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   154      "00000001" // 	NOPX /* MW 2 */
	   155      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   156      "00000001" // 	NOPX /* MW 2 */
	   157      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   158      "00000001" // 	NOPX /* MW 2 */
	   159      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   160      "11000000" // 	NOPA;                         NOPB;                         NOPS;                         NOPX;                         NOPM;                                   NOPV /* MW 16 */
	   161      "00000011" // /* MW 15 */
	   162      "00000000" // /* MW 14 */
	   163      "10001000" // /* MW 13 */
	   164      "00000011" // /* MW 12 */
	   165      "00000000" // /* MW 11 */
	   166      "00000000" // /* MW 10 */
	   167      "00000000" // /* MW 9 */
	   168      "00000000" // /* MW 8 */
	   169      "00000000" // /* MW 7 */
	   170      "00000000" // /* MW 6 */
	   171      "00000000" // /* MW 5 */
	   172      "00000000" // /* MW 4 */
	   173      "00000000" // /* MW 3 */
	   174      "00000000" // /* MW 2 */
	   175      "00000000" // /* MW 1 */
.return_address
.swstall chess_separator_scheduler
	   176      "00000001" // 	NOPX /* MW 2 */
	   177      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   178      "00000001" // 	NOPX /* MW 2 */
	   179      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   180      "00000001" // 	NOPX /* MW 2 */
	   181      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   182      "00000001" // 	NOPX /* MW 2 */
	   183      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   184      "00000001" // 	NOPX /* MW 2 */
	   185      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   186      "00000001" // 	NOPX /* MW 2 */
	   187      "00000000" // /* MW 1 */
	   188      "00011001" // 	                                                                                          DONE /* MW 4 */
	   189      "00001000" // /* MW 3 */
	   190      "00000000" // /* MW 2 */
	   191      "00010000" // /* MW 1 */
.swstall chess_separator_scheduler
	   192      "00000001" // 	NOPX /* MW 2 */
	   193      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   194      "00000001" // 	NOPX /* MW 2 */
	   195      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   196      "00000001" // 	NOPX /* MW 2 */
	   197      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   198      "00000001" // 	NOPX /* MW 2 */
	   199      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   200      "00000001" // 	NOPX /* MW 2 */
	   201      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   202      "00000001" // 	NOPX /* MW 2 */
	   203      "00000000" // /* MW 1 */
.swstall for_chess_exit
.exit
	   204      "00011001" // 	NOPA /* MW 4 */
	   205      "00000000" // /* MW 3 */
	   206      "00000000" // /* MW 2 */
	   207      "00000000" // /* MW 1 */
.label TGT_F_main_init_208
.loop_nesting 1
	   208      "10010101" // 	                                                                                          J #208 /* MW 6 */
	   209      "00000000" // /* MW 5 */
	   210      "00000000" // /* MW 4 */
	   211      "01101000" // /* MW 3 */
	   212      "00000000" // /* MW 2 */
	   213      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   214      "00000001" // 	NOPX /* MW 2 */
	   215      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   216      "00000001" // 	NOPX /* MW 2 */
	   217      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   218      "00000001" // 	NOPX /* MW 2 */
	   219      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   220      "00000001" // 	NOPX /* MW 2 */
	   221      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   222      "00000001" // 	NOPX /* MW 2 */
.label _main_init__end
	   223      "00000000" // /* MW 1 */
.label core_0_2
.function_start
	   224      "01000101" // 	                              PADDB [sp], #64;                                                                          MOV r3, r22 /* MW 6 */
	   225      "00010110" // /* MW 5 */
	   226      "11001011" // /* MW 4 */
	   227      "01000000" // /* MW 3 */
	   228      "00000011" // /* MW 2 */
	   229      "00000000" // /* MW 1 */
	   230      "00111011" // 	                                                            ST p6, [sp, #-36];            MOVX r20, #3;                 MOV r1, r20 /* MW 10 */
	   231      "00101001" // /* MW 9 */
	   232      "00001011" // /* MW 8 */
	   233      "00100101" // /* MW 7 */
	   234      "01101000" // /* MW 6 */
	   235      "01000000" // /* MW 5 */
	   236      "00000001" // /* MW 4 */
	   237      "11010000" // /* MW 3 */
	   238      "01111110" // /* MW 2 */
	   239      "11111111" // /* MW 1 */
	   240      "00111011" // 	                                                            ST r16, [sp, #-28];           MOVXM dn0, #491520 /* MW 10 */
	   241      "00010001" // /* MW 9 */
	   242      "00000000" // /* MW 8 */
	   243      "00010000" // /* MW 7 */
	   244      "11100001" // /* MW 6 */
	   245      "00000001" // /* MW 5 */
	   246      "00000000" // /* MW 4 */
	   247      "00000000" // /* MW 3 */
	   248      "10011100" // /* MW 2 */
	   249      "11111111" // /* MW 1 */
	   250      "00000011" // 	                                                            ST p7, [sp, #-32];                                          MOV r4, r23 /* MW 8 */
	   251      "00100000" // /* MW 7 */
	   252      "11001011" // /* MW 6 */
	   253      "10000101" // /* MW 5 */
	   254      "00000000" // /* MW 4 */
	   255      "11010000" // /* MW 3 */
	   256      "10001111" // /* MW 2 */
	   257      "11111111" // /* MW 1 */
	   258      "00000011" // 	                                                            ST r18, [sp, #-24];                                         MOV r2, r21 /* MW 8 */
	   259      "00100000" // /* MW 7 */
	   260      "01001011" // /* MW 6 */
	   261      "01000101" // /* MW 5 */
	   262      "00000000" // /* MW 4 */
	   263      "10000000" // /* MW 3 */
	   264      "10101100" // /* MW 2 */
	   265      "11111111" // /* MW 1 */
	   266      "00000011" // 	                                                            ST r4, [sp, #-20];                                          MOV r0, r19 /* MW 8 */
	   267      "00100000" // /* MW 7 */
	   268      "11001011" // /* MW 6 */
	   269      "00000100" // /* MW 5 */
	   270      "00000000" // /* MW 4 */
	   271      "00000000" // /* MW 3 */
	   272      "10111001" // /* MW 2 */
	   273      "11111111" // /* MW 1 */
	   274      "00111011" // 	                                                            ST r3, [sp, #-16];            MOVXM p6, #507904 /* MW 10 */
	   275      "00010001" // /* MW 9 */
	   276      "00000000" // /* MW 8 */
	   277      "00011000" // /* MW 7 */
	   278      "11110011" // /* MW 6 */
	   279      "00000001" // /* MW 5 */
	   280      "00000000" // /* MW 4 */
	   281      "11000000" // /* MW 3 */
	   282      "11001000" // /* MW 2 */
	   283      "11111111" // /* MW 1 */
	   284      "00111011" // 	                                                            ST r2, [sp, #-12];            MOVXM r22, #459776 /* MW 10 */
	   285      "00010001" // /* MW 9 */
	   286      "00000000" // /* MW 8 */
	   287      "11000010" // /* MW 7 */
	   288      "11000010" // /* MW 6 */
	   289      "00000001" // /* MW 5 */
	   290      "00000000" // /* MW 4 */
	   291      "10000000" // /* MW 3 */
	   292      "11011000" // /* MW 2 */
	   293      "11111111" // /* MW 1 */
	   294      "00111011" // 	                                                            ST r1, [sp, #-8];             MOVXM r16, #475136 /* MW 10 */
	   295      "00010001" // /* MW 9 */
	   296      "00000000" // /* MW 8 */
	   297      "00000000" // /* MW 7 */
	   298      "11010010" // /* MW 6 */
	   299      "00000001" // /* MW 5 */
	   300      "00000000" // /* MW 4 */
	   301      "01000000" // /* MW 3 */
	   302      "11101000" // /* MW 2 */
	   303      "11111111" // /* MW 1 */
	   304      "00011001" // 	                                                            ST r17, [sp, #-4] /* MW 4 */
	   305      "11100010" // /* MW 3 */
	   306      "11111111" // /* MW 2 */
	   307      "00001111" // /* MW 1 */
	   308      "00011001" // 	                                                            ST r0, [sp, #-40] /* MW 4 */
	   309      "01000000" // /* MW 3 */
	   310      "11111011" // /* MW 2 */
	   311      "00001111" // /* MW 1 */
	   312      "10011001" // 	                                                            ST lr, [sp, #-44] /* MW 4 */
	   313      "11000010" // /* MW 3 */
	   314      "11111010" // /* MW 2 */
	   315      "00001111" // /* MW 1 */
	   316      "00011001" // 	                                                            ST dn0, [sp, #-48] /* MW 4 */
	   317      "01010001" // /* MW 3 */
	   318      "11111010" // /* MW 2 */
	   319      "00001111" // /* MW 1 */
.label TGT_Fcore_0_2_96
.loop_nesting 1
	   320      "11011001" // 	LDA p7, [sp, #-48] /* MW 4 */
	   321      "01111110" // /* MW 3 */
	   322      "11111010" // /* MW 2 */
	   323      "00000111" // /* MW 1 */
.no_stack_arguments
	   324      "00010101" // 	                                                                                          JL #832 /* MW 6 */
	   325      "00000001" // /* MW 5 */
	   326      "00000000" // /* MW 4 */
	   327      "10100000" // /* MW 3 */
	   328      "00000001" // /* MW 2 */
	   329      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   330      "00000001" // 	NOPX /* MW 2 */
	   331      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   332      "00000001" // 	NOPX /* MW 2 */
	   333      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   334      "00000001" // 	NOPX /* MW 2 */
	   335      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   336      "00000001" // 	NOPX /* MW 2 */
	   337      "00000000" // /* MW 1 */
.delay_slot
	   338      "01111111" // 	NOPA;                         NOPB;                         NOPS;                         MOVX r0, #49;                 MOV r1, #-1 /* MW 14 */
	   339      "00000000" // /* MW 13 */
	   340      "00000000" // /* MW 12 */
	   341      "00000000" // /* MW 11 */
	   342      "11111001" // /* MW 10 */
	   343      "11111111" // /* MW 9 */
	   344      "00000100" // /* MW 8 */
	   345      "11000101" // /* MW 7 */
	   346      "00000000" // /* MW 6 */
	   347      "00000000" // /* MW 5 */
	   348      "00000000" // /* MW 4 */
	   349      "00000000" // /* MW 3 */
	   350      "00000000" // /* MW 2 */
	   351      "00000000" // /* MW 1 */
.return_address
.no_stack_arguments
	   352      "00010101" // 	                                                                                          JL #832 /* MW 6 */
	   353      "00000001" // /* MW 5 */
	   354      "00000000" // /* MW 4 */
	   355      "10100000" // /* MW 3 */
	   356      "00000001" // /* MW 2 */
	   357      "00000000" // /* MW 1 */
.delay_slot
	   358      "01000011" // 	                                                                                          MOVX r1, #-1;                 MOV r0, #50 /* MW 8 */
	   359      "01001000" // /* MW 7 */
	   360      "01100111" // /* MW 6 */
	   361      "00000000" // /* MW 5 */
	   362      "11101000" // /* MW 4 */
	   363      "00010111" // /* MW 3 */
	   364      "00111110" // /* MW 2 */
	   365      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   366      "00000001" // 	NOPX /* MW 2 */
	   367      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   368      "00000001" // 	NOPX /* MW 2 */
	   369      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   370      "00000001" // 	NOPX /* MW 2 */
	   371      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   372      "00110111" // 	NOPA;                         NOPB;                         NOPS;                         NOPX /* MW 12 */
	   373      "00000001" // /* MW 11 */
	   374      "00000000" // /* MW 10 */
	   375      "00000000" // /* MW 9 */
	   376      "00000000" // /* MW 8 */
	   377      "00000000" // /* MW 7 */
	   378      "00000000" // /* MW 6 */
	   379      "00000000" // /* MW 5 */
	   380      "00000000" // /* MW 4 */
	   381      "00000000" // /* MW 3 */
	   382      "00000000" // /* MW 2 */
	   383      "00000000" // /* MW 1 */
.return_address
	   384      "01001101" // 	LDA r24, [p7], #4;                                                                                                      MOV p0, r22 /* MW 6 */
	   385      "00010110" // /* MW 5 */
	   386      "00111011" // /* MW 4 */
	   387      "00001000" // /* MW 3 */
	   388      "01110110" // /* MW 2 */
	   389      "11100000" // /* MW 1 */
	   390      "01011001" // 	LDA r25, [p7], #4 /* MW 4 */
	   391      "10110010" // /* MW 3 */
	   392      "00000011" // /* MW 2 */
	   393      "00000111" // /* MW 1 */
	   394      "01011001" // 	LDA r29, [p7], #4 /* MW 4 */
	   395      "10111010" // /* MW 3 */
	   396      "00000011" // /* MW 2 */
	   397      "00000111" // /* MW 1 */
	   398      "01011001" // 	LDA r27, [p7], #4 /* MW 4 */
	   399      "10110110" // /* MW 3 */
	   400      "00000011" // /* MW 2 */
	   401      "00000111" // /* MW 1 */
	   402      "01011001" // 	LDA r26, [p7], #4 /* MW 4 */
	   403      "10110100" // /* MW 3 */
	   404      "00000011" // /* MW 2 */
	   405      "00000111" // /* MW 1 */
	   406      "01011001" // 	LDA r28, [p7], #4 /* MW 4 */
	   407      "10111000" // /* MW 3 */
	   408      "00000011" // /* MW 2 */
	   409      "00000111" // /* MW 1 */
	   410      "01011001" // 	LDA r30, [p7], #4 /* MW 4 */
	   411      "10111100" // /* MW 3 */
	   412      "00000011" // /* MW 2 */
	   413      "00000111" // /* MW 1 */
	   414      "01101101" // 	LDA r24, [p7], #-28;                                                                                                    ADD.NC r31, r24, #2 /* MW 6 */
	   415      "00000111" // /* MW 5 */
	   416      "11001100" // /* MW 4 */
	   417      "00001111" // /* MW 3 */
	   418      "01110110" // /* MW 2 */
	   419      "11111110" // /* MW 1 */
	   420      "00000011" // 	                                                            ST r31, [p0], #4;                                           ADD.NC r25, r25, #2 /* MW 8 */
	   421      "10110000" // /* MW 7 */
	   422      "01000011" // /* MW 6 */
	   423      "00100110" // /* MW 5 */
	   424      "00000011" // /* MW 4 */
	   425      "11000000" // /* MW 3 */
	   426      "01110111" // /* MW 2 */
	   427      "00000000" // /* MW 1 */
	   428      "00000011" // 	                                                            ST r25, [p0], #4;                                           ADD.NC r25, r29, #2 /* MW 8 */
	   429      "10110000" // /* MW 7 */
	   430      "01000011" // /* MW 6 */
	   431      "00100111" // /* MW 5 */
	   432      "00000011" // /* MW 4 */
	   433      "01000000" // /* MW 3 */
	   434      "01110110" // /* MW 2 */
	   435      "00000000" // /* MW 1 */
	   436      "00000011" // 	                                                            ST r25, [p0], #4;                                           ADD.NC r25, r27, #2 /* MW 8 */
	   437      "10110000" // /* MW 7 */
	   438      "11000011" // /* MW 6 */
	   439      "00100110" // /* MW 5 */
	   440      "00000011" // /* MW 4 */
	   441      "01000000" // /* MW 3 */
	   442      "01110110" // /* MW 2 */
	   443      "00000000" // /* MW 1 */
	   444      "00000011" // 	                                                            ST r25, [p0], #4;                                           ADD.NC r25, r26, #2 /* MW 8 */
	   445      "10110000" // /* MW 7 */
	   446      "10000011" // /* MW 6 */
	   447      "00100110" // /* MW 5 */
	   448      "00000011" // /* MW 4 */
	   449      "01000000" // /* MW 3 */
	   450      "01110110" // /* MW 2 */
	   451      "00000000" // /* MW 1 */
.no_stack_arguments
	   452      "00111011" // 	                                                            ST p7, [sp, #-48];            JL #864 /* MW 10 */
	   453      "01000001" // /* MW 9 */
	   454      "00000000" // /* MW 8 */
	   455      "00000000" // /* MW 7 */
	   456      "01101100" // /* MW 6 */
	   457      "00000000" // /* MW 5 */
	   458      "00000000" // /* MW 4 */
	   459      "11010000" // /* MW 3 */
	   460      "01001111" // /* MW 2 */
	   461      "11111111" // /* MW 1 */
.delay_slot
	   462      "00000011" // 	                                                            ST r25, [p0], #4;                                           ADD.NC r25, r28, #2 /* MW 8 */
	   463      "10110000" // /* MW 7 */
	   464      "00000011" // /* MW 6 */
	   465      "00100111" // /* MW 5 */
	   466      "00000011" // /* MW 4 */
	   467      "01000000" // /* MW 3 */
	   468      "01110110" // /* MW 2 */
	   469      "00000000" // /* MW 1 */
.delay_slot
	   470      "00000011" // 	                                                            ST r25, [p0], #4;                                           ADD.NC r25, r30, #2 /* MW 8 */
	   471      "10110000" // /* MW 7 */
	   472      "10000011" // /* MW 6 */
	   473      "00100111" // /* MW 5 */
	   474      "00000011" // /* MW 4 */
	   475      "01000000" // /* MW 3 */
	   476      "01110110" // /* MW 2 */
	   477      "00000000" // /* MW 1 */
.delay_slot
	   478      "00000011" // 	                                                            ST r25, [p0], #4;                                           ADD.NC r24, r24, #2 /* MW 8 */
	   479      "10110000" // /* MW 7 */
	   480      "00000011" // /* MW 6 */
	   481      "00000110" // /* MW 5 */
	   482      "00000011" // /* MW 4 */
	   483      "01000000" // /* MW 3 */
	   484      "01110110" // /* MW 2 */
	   485      "00000000" // /* MW 1 */
.delay_slot
	   486      "01111011" // 	NOPA;                                                       ST r24, [p0], #-28;           NOPX /* MW 10 */
	   487      "00000000" // /* MW 9 */
	   488      "00000000" // /* MW 8 */
	   489      "00000000" // /* MW 7 */
	   490      "00000000" // /* MW 6 */
	   491      "10110000" // /* MW 5 */
	   492      "11110011" // /* MW 4 */
	   493      "00000000" // /* MW 3 */
	   494      "00000000" // /* MW 2 */
	   495      "00000000" // /* MW 1 */
.delay_slot
	   496      "11000000" // 	MOVA r0, #48;                 NOPB;                         NOPS;                         MOVX r1, #1;                  MOV r22, p0;                            NOPV /* MW 16 */
	   497      "00000011" // /* MW 15 */
	   498      "00000000" // /* MW 14 */
	   499      "00101000" // /* MW 13 */
	   500      "00111011" // /* MW 12 */
	   501      "11000000" // /* MW 11 */
	   502      "00101010" // /* MW 10 */
	   503      "00010000" // /* MW 9 */
	   504      "00000000" // /* MW 8 */
	   505      "00000000" // /* MW 7 */
	   506      "00000000" // /* MW 6 */
	   507      "00001000" // /* MW 5 */
	   508      "00000000" // /* MW 4 */
	   509      "00000110" // /* MW 3 */
	   510      "00000000" // /* MW 2 */
	   511      "00000000" // /* MW 1 */
.return_address
.no_stack_arguments
	   512      "00010101" // 	                                                                                          JL #864 /* MW 6 */
	   513      "00000001" // /* MW 5 */
	   514      "00000000" // /* MW 4 */
	   515      "10110000" // /* MW 3 */
	   516      "00000001" // /* MW 2 */
	   517      "00000000" // /* MW 1 */
.delay_slot
	   518      "01000011" // 	                                                                                          MOVX r0, #51;                 MOV r1, #1 /* MW 8 */
	   519      "11001000" // /* MW 7 */
	   520      "00000011" // /* MW 6 */
	   521      "00100000" // /* MW 5 */
	   522      "01101000" // /* MW 4 */
	   523      "00000110" // /* MW 3 */
	   524      "00000000" // /* MW 2 */
	   525      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   526      "00000001" // 	NOPX /* MW 2 */
	   527      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   528      "00000001" // 	NOPX /* MW 2 */
	   529      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   530      "00000001" // 	NOPX /* MW 2 */
	   531      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   532      "00110111" // 	NOPA;                         NOPB;                         NOPS;                         NOPX /* MW 12 */
	   533      "00000001" // /* MW 11 */
	   534      "00000000" // /* MW 10 */
	   535      "00000000" // /* MW 9 */
	   536      "00000000" // /* MW 8 */
	   537      "00000000" // /* MW 7 */
	   538      "00000000" // /* MW 6 */
	   539      "00000000" // /* MW 5 */
	   540      "00000000" // /* MW 4 */
	   541      "00000000" // /* MW 3 */
	   542      "00000000" // /* MW 2 */
	   543      "00000000" // /* MW 1 */
.return_address
.no_stack_arguments
	   544      "00010101" // 	                                                                                          JL #832 /* MW 6 */
	   545      "00000001" // /* MW 5 */
	   546      "00000000" // /* MW 4 */
	   547      "10100000" // /* MW 3 */
	   548      "00000001" // /* MW 2 */
	   549      "00000000" // /* MW 1 */
.delay_slot
	   550      "01000011" // 	                                                                                          MOVX r0, #49;                 MOV r1, #-1 /* MW 8 */
	   551      "11001000" // /* MW 7 */
	   552      "11111111" // /* MW 6 */
	   553      "00100111" // /* MW 5 */
	   554      "00101000" // /* MW 4 */
	   555      "00000110" // /* MW 3 */
	   556      "00000000" // /* MW 2 */
	   557      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   558      "00000001" // 	NOPX /* MW 2 */
	   559      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   560      "00000001" // 	NOPX /* MW 2 */
	   561      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   562      "00000001" // 	NOPX /* MW 2 */
	   563      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   564      "00110111" // 	NOPA;                         NOPB;                         NOPS;                         NOPX /* MW 12 */
	   565      "00000001" // /* MW 11 */
	   566      "00000000" // /* MW 10 */
	   567      "00000000" // /* MW 9 */
	   568      "00000000" // /* MW 8 */
	   569      "00000000" // /* MW 7 */
	   570      "00000000" // /* MW 6 */
	   571      "00000000" // /* MW 5 */
	   572      "00000000" // /* MW 4 */
	   573      "00000000" // /* MW 3 */
	   574      "00000000" // /* MW 2 */
	   575      "00000000" // /* MW 1 */
.return_address
.no_stack_arguments
	   576      "00010101" // 	                                                                                          JL #832 /* MW 6 */
	   577      "00000001" // /* MW 5 */
	   578      "00000000" // /* MW 4 */
	   579      "10100000" // /* MW 3 */
	   580      "00000001" // /* MW 2 */
	   581      "00000000" // /* MW 1 */
.delay_slot
	   582      "01000011" // 	                                                                                          MOVX r1, #-1;                 MOV r0, #50 /* MW 8 */
	   583      "01001000" // /* MW 7 */
	   584      "01100111" // /* MW 6 */
	   585      "00000000" // /* MW 5 */
	   586      "11101000" // /* MW 4 */
	   587      "00010111" // /* MW 3 */
	   588      "00111110" // /* MW 2 */
	   589      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   590      "00000001" // 	NOPX /* MW 2 */
	   591      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   592      "00000001" // 	NOPX /* MW 2 */
	   593      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   594      "00000001" // 	NOPX /* MW 2 */
	   595      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   596      "00110111" // 	NOPA;                         NOPB;                         NOPS;                         NOPX /* MW 12 */
	   597      "00000001" // /* MW 11 */
	   598      "00000000" // /* MW 10 */
	   599      "00000000" // /* MW 9 */
	   600      "00000000" // /* MW 8 */
	   601      "00000000" // /* MW 7 */
	   602      "00000000" // /* MW 6 */
	   603      "00000000" // /* MW 5 */
	   604      "00000000" // /* MW 4 */
	   605      "00000000" // /* MW 3 */
	   606      "00000000" // /* MW 2 */
	   607      "00000000" // /* MW 1 */
.return_address
	   608      "01001101" // 	LDA r24, [p6], #4;                                                                                                      MOV p7, r16 /* MW 6 */
	   609      "00010110" // /* MW 5 */
	   610      "00111000" // /* MW 4 */
	   611      "00001111" // /* MW 3 */
	   612      "01110110" // /* MW 2 */
	   613      "11000000" // /* MW 1 */
	   614      "01011001" // 	LDA r25, [p6], #4 /* MW 4 */
	   615      "10110010" // /* MW 3 */
	   616      "00000011" // /* MW 2 */
	   617      "00000110" // /* MW 1 */
	   618      "01011001" // 	LDA r30, [p6], #4 /* MW 4 */
	   619      "10111100" // /* MW 3 */
	   620      "00000011" // /* MW 2 */
	   621      "00000110" // /* MW 1 */
	   622      "01011001" // 	LDA r28, [p6], #4 /* MW 4 */
	   623      "10111000" // /* MW 3 */
	   624      "00000011" // /* MW 2 */
	   625      "00000110" // /* MW 1 */
	   626      "01011001" // 	LDA r26, [p6], #4 /* MW 4 */
	   627      "10110100" // /* MW 3 */
	   628      "00000011" // /* MW 2 */
	   629      "00000110" // /* MW 1 */
	   630      "01011001" // 	LDA r27, [p6], #4 /* MW 4 */
	   631      "10110110" // /* MW 3 */
	   632      "00000011" // /* MW 2 */
	   633      "00000110" // /* MW 1 */
	   634      "01011001" // 	LDA r29, [p6], #4 /* MW 4 */
	   635      "10111010" // /* MW 3 */
	   636      "00000011" // /* MW 2 */
	   637      "00000110" // /* MW 1 */
	   638      "01101101" // 	LDA r24, [p6], #-28;                                                                                                    ADD.NC r31, r24, #2 /* MW 6 */
	   639      "00000111" // /* MW 5 */
	   640      "11001100" // /* MW 4 */
	   641      "00001111" // /* MW 3 */
	   642      "01110110" // /* MW 2 */
	   643      "11011110" // /* MW 1 */
	   644      "00000011" // 	                                                            ST r31, [p7], #4;                                           ADD.NC r25, r25, #2 /* MW 8 */
	   645      "10110000" // /* MW 7 */
	   646      "01000011" // /* MW 6 */
	   647      "00100110" // /* MW 5 */
	   648      "00000011" // /* MW 4 */
	   649      "11000000" // /* MW 3 */
	   650      "01110111" // /* MW 2 */
	   651      "11100000" // /* MW 1 */
	   652      "00000011" // 	                                                            ST r25, [p7], #4;                                           ADD.NC r25, r30, #2 /* MW 8 */
	   653      "10110000" // /* MW 7 */
	   654      "10000011" // /* MW 6 */
	   655      "00100111" // /* MW 5 */
	   656      "00000011" // /* MW 4 */
	   657      "01000000" // /* MW 3 */
	   658      "01110110" // /* MW 2 */
	   659      "11100000" // /* MW 1 */
	   660      "00000011" // 	                                                            ST r25, [p7], #4;                                           ADD.NC r25, r28, #2 /* MW 8 */
	   661      "10110000" // /* MW 7 */
	   662      "00000011" // /* MW 6 */
	   663      "00100111" // /* MW 5 */
	   664      "00000011" // /* MW 4 */
	   665      "01000000" // /* MW 3 */
	   666      "01110110" // /* MW 2 */
	   667      "11100000" // /* MW 1 */
	   668      "00000011" // 	                                                            ST r25, [p7], #4;                                           ADD.NC r25, r26, #2 /* MW 8 */
	   669      "10110000" // /* MW 7 */
	   670      "10000011" // /* MW 6 */
	   671      "00100110" // /* MW 5 */
	   672      "00000011" // /* MW 4 */
	   673      "01000000" // /* MW 3 */
	   674      "01110110" // /* MW 2 */
	   675      "11100000" // /* MW 1 */
.no_stack_arguments
	   676      "00010101" // 	                                                                                          JL #864 /* MW 6 */
	   677      "00000001" // /* MW 5 */
	   678      "00000000" // /* MW 4 */
	   679      "10110000" // /* MW 3 */
	   680      "00000001" // /* MW 2 */
	   681      "00000000" // /* MW 1 */
.delay_slot
	   682      "00000011" // 	                                                            ST r25, [p7], #4;                                           ADD.NC r25, r27, #2 /* MW 8 */
	   683      "10110000" // /* MW 7 */
	   684      "11000011" // /* MW 6 */
	   685      "00100110" // /* MW 5 */
	   686      "00000011" // /* MW 4 */
	   687      "01000000" // /* MW 3 */
	   688      "01110110" // /* MW 2 */
	   689      "11100000" // /* MW 1 */
.delay_slot
	   690      "00000011" // 	                                                            ST r25, [p7], #4;                                           ADD.NC r25, r29, #2 /* MW 8 */
	   691      "10110000" // /* MW 7 */
	   692      "01000011" // /* MW 6 */
	   693      "00100111" // /* MW 5 */
	   694      "00000011" // /* MW 4 */
	   695      "01000000" // /* MW 3 */
	   696      "01110110" // /* MW 2 */
	   697      "11100000" // /* MW 1 */
.delay_slot
	   698      "00000011" // 	                                                            ST r25, [p7], #4;                                           ADD.NC r24, r24, #2 /* MW 8 */
	   699      "10110000" // /* MW 7 */
	   700      "00000011" // /* MW 6 */
	   701      "00000110" // /* MW 5 */
	   702      "00000011" // /* MW 4 */
	   703      "01000000" // /* MW 3 */
	   704      "01110110" // /* MW 2 */
	   705      "11100000" // /* MW 1 */
.delay_slot
	   706      "00011001" // 	                                                            ST r24, [p7], #-28 /* MW 4 */
	   707      "10110000" // /* MW 3 */
	   708      "11110011" // /* MW 2 */
	   709      "00001111" // /* MW 1 */
.delay_slot
	   710      "10111011" // 	MOVA r0, #48;                                                                             MOVX r1, #1;                  MOV r16, p7 /* MW 10 */
	   711      "00101000" // /* MW 9 */
	   712      "00111011" // /* MW 8 */
	   713      "00000111" // /* MW 7 */
	   714      "00101010" // /* MW 6 */
	   715      "00010000" // /* MW 5 */
	   716      "00000000" // /* MW 4 */
	   717      "00001000" // /* MW 3 */
	   718      "00000000" // /* MW 2 */
	   719      "00000110" // /* MW 1 */
.return_address
.no_stack_arguments
	   720      "00010101" // 	                                                                                          JL #864 /* MW 6 */
	   721      "00000001" // /* MW 5 */
	   722      "00000000" // /* MW 4 */
	   723      "10110000" // /* MW 3 */
	   724      "00000001" // /* MW 2 */
	   725      "00000000" // /* MW 1 */
.delay_slot
	   726      "01010101" // 	                                                                                          MOVXM p7, #320 /* MW 6 */
	   727      "10000000" // /* MW 5 */
	   728      "01100010" // /* MW 4 */
	   729      "00001110" // /* MW 3 */
	   730      "00000000" // /* MW 2 */
	   731      "00000000" // /* MW 1 */
.delay_slot
	   732      "01000011" // 	                                                                                          MOVX r0, #51;                 MOV r1, #1 /* MW 8 */
	   733      "11001000" // /* MW 7 */
	   734      "00000011" // /* MW 6 */
	   735      "00100000" // /* MW 5 */
	   736      "01101000" // /* MW 4 */
	   737      "00000110" // /* MW 3 */
	   738      "00000000" // /* MW 2 */
	   739      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   740      "00000001" // 	NOPX /* MW 2 */
	   741      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   742      "00000001" // 	NOPX /* MW 2 */
	   743      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   744      "00100011" // 	NOPA;                                                                                                                                                           NOPV /* MW 8 */
	   745      "01111000" // /* MW 7 */
	   746      "00000000" // /* MW 6 */
	   747      "00000000" // /* MW 5 */
	   748      "00000100" // /* MW 4 */
	   749      "00000000" // /* MW 3 */
	   750      "00000000" // /* MW 2 */
	   751      "00000000" // /* MW 1 */
.return_address
	   752      "00011001" // 	                                                                                          JNZD r20, r20, p7 /* MW 4 */
	   753      "11001100" // /* MW 3 */
	   754      "00101001" // /* MW 2 */
	   755      "00010101" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   756      "00000001" // 	NOPX /* MW 2 */
	   757      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   758      "00000001" // 	NOPX /* MW 2 */
	   759      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   760      "00000001" // 	NOPX /* MW 2 */
	   761      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   762      "00000001" // 	NOPX /* MW 2 */
	   763      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   764      "00000001" // 	NOPX /* MW 2 */
	   765      "00000000" // /* MW 1 */
.loop_nesting 0
	   766      "11011001" // 	LDA lr, [sp, #-44] /* MW 4 */
	   767      "11000010" // /* MW 3 */
	   768      "11111010" // /* MW 2 */
	   769      "00000111" // /* MW 1 */
	   770      "01011001" // 	LDA r19, [sp, #-40] /* MW 4 */
	   771      "01100110" // /* MW 3 */
	   772      "11111011" // /* MW 2 */
	   773      "00000111" // /* MW 1 */
	   774      "01011001" // 	LDA r17, [sp, #-4] /* MW 4 */
	   775      "11100010" // /* MW 3 */
	   776      "11111111" // /* MW 2 */
	   777      "00000111" // /* MW 1 */
	   778      "01011001" // 	LDA r20, [sp, #-8] /* MW 4 */
	   779      "01101000" // /* MW 3 */
	   780      "11111111" // /* MW 2 */
	   781      "00000111" // /* MW 1 */
	   782      "01011001" // 	LDA r21, [sp, #-12] /* MW 4 */
	   783      "11101010" // /* MW 3 */
	   784      "11111110" // /* MW 2 */
	   785      "00000111" // /* MW 1 */
	   786      "01011001" // 	LDA r22, [sp, #-16] /* MW 4 */
	   787      "01101100" // /* MW 3 */
	   788      "11111110" // /* MW 2 */
	   789      "00000111" // /* MW 1 */
	   790      "01011001" // 	LDA r23, [sp, #-20] /* MW 4 */
	   791      "11101110" // /* MW 3 */
	   792      "11111101" // /* MW 2 */
	   793      "00000111" // /* MW 1 */
	   794      "01011001" // 	LDA r18, [sp, #-24] /* MW 4 */
	   795      "01100100" // /* MW 3 */
	   796      "11111101" // /* MW 2 */
	   797      "00000111" // /* MW 1 */
	   798      "01011001" // 	LDA r16, [sp, #-28] /* MW 4 */
	   799      "11100000" // /* MW 3 */
	   800      "11111100" // /* MW 2 */
	   801      "00000111" // /* MW 1 */
	   802      "11011001" // 	LDA p7, [sp, #-32] /* MW 4 */
	   803      "01111110" // /* MW 3 */
	   804      "11111100" // /* MW 2 */
	   805      "00000111" // /* MW 1 */
	   806      "11011001" // 	LDA p6, [sp, #-36] /* MW 4 */
	   807      "11110110" // /* MW 3 */
	   808      "11111011" // /* MW 2 */
	   809      "00000111" // /* MW 1 */
	   810      "00011001" // 	                                                                                          RET lr /* MW 4 */
	   811      "00011000" // /* MW 3 */
	   812      "00000000" // /* MW 2 */
	   813      "00010000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   814      "00000001" // 	NOPX /* MW 2 */
	   815      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   816      "00000001" // 	NOPX /* MW 2 */
	   817      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   818      "00000001" // 	NOPX /* MW 2 */
	   819      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   820      "00000001" // 	NOPX /* MW 2 */
	   821      "00000000" // /* MW 1 */
.delay_slot
	   822      "10111011" // 	NOPA;                         PADDB [sp], #-64;                                                                         NOPM /* MW 10 */
	   823      "10001110" // /* MW 9 */
	   824      "00000011" // /* MW 8 */
	   825      "00000000" // /* MW 7 */
	   826      "00000000" // /* MW 6 */
	   827      "11000000" // /* MW 5 */
	   828      "11111111" // /* MW 4 */
	   829      "00000111" // /* MW 3 */
	   830      "00000000" // /* MW 2 */
.label core_0_2__end
	   831      "00000000" // /* MW 1 */
.label llvm___aie2___acquire
.function_start
	   832      "00011001" // 	                                                                                          ACQ r0, r1 /* MW 4 */
	   833      "00010010" // /* MW 3 */
	   834      "00010010" // /* MW 2 */
	   835      "00010000" // /* MW 1 */
	   836      "00011001" // 	                                                                                          RET lr /* MW 4 */
	   837      "00011000" // /* MW 3 */
	   838      "00000000" // /* MW 2 */
	   839      "00010000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   840      "00000001" // 	NOPX /* MW 2 */
	   841      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   842      "00000001" // 	NOPX /* MW 2 */
	   843      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   844      "00000001" // 	NOPX /* MW 2 */
	   845      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   846      "00000001" // 	NOPX /* MW 2 */
	   847      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   848      "11000000" // 	NOPA;                         NOPB;                         NOPS;                         NOPX;                         NOPM;                                   NOPV /* MW 16 */
	   849      "00000011" // /* MW 15 */
	   850      "00000000" // /* MW 14 */
	   851      "10001000" // /* MW 13 */
	   852      "00000011" // /* MW 12 */
	   853      "00000000" // /* MW 11 */
	   854      "00000000" // /* MW 10 */
	   855      "00000000" // /* MW 9 */
	   856      "00000000" // /* MW 8 */
	   857      "00000000" // /* MW 7 */
	   858      "00000000" // /* MW 6 */
	   859      "00000000" // /* MW 5 */
	   860      "00000000" // /* MW 4 */
	   861      "00000000" // /* MW 3 */
	   862      "00000000" // /* MW 2 */
.label llvm___aie2___acquire__end
	   863      "00000000" // /* MW 1 */
.label llvm___aie2___release
.function_start
	   864      "00000001" // 	NOPX /* MW 2 */
	   865      "00000000" // /* MW 1 */
	   866      "00000001" // 	NOPX /* MW 2 */
	   867      "00000000" // /* MW 1 */
	   868      "00000001" // 	NOPX /* MW 2 */
	   869      "00000000" // /* MW 1 */
	   870      "00000001" // 	NOPX /* MW 2 */
	   871      "00000000" // /* MW 1 */
	   872      "00000001" // 	NOPX /* MW 2 */
	   873      "00000000" // /* MW 1 */
	   874      "00000001" // 	NOPX /* MW 2 */
	   875      "00000000" // /* MW 1 */
	   876      "00011001" // 	                                                                                          REL r0, r1 /* MW 4 */
	   877      "00010010" // /* MW 3 */
	   878      "00010000" // /* MW 2 */
	   879      "00010000" // /* MW 1 */
	   880      "00011001" // 	                                                                                          RET lr /* MW 4 */
	   881      "00011000" // /* MW 3 */
	   882      "00000000" // /* MW 2 */
	   883      "00010000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   884      "00000001" // 	NOPX /* MW 2 */
	   885      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   886      "00000001" // 	NOPX /* MW 2 */
	   887      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   888      "00000001" // 	NOPX /* MW 2 */
	   889      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   890      "00000001" // 	NOPX /* MW 2 */
	   891      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   892      "00011001" // 	NOPA /* MW 4 */
	   893      "00000000" // /* MW 3 */
	   894      "00000000" // /* MW 2 */
.label llvm___aie2___release__end
	   895      "00000000" // /* MW 1 */
.label _fini
.function_start
	   896      "01011001" // 	                                                                                                                        MOV r0, r23 /* MW 4 */
	   897      "10010110" // /* MW 3 */
	   898      "00001011" // /* MW 2 */
	   899      "00011000" // /* MW 1 */
	   900      "01010101" // 	                                                                                          MOVXM r24, #0 /* MW 6 */
	   901      "00000000" // /* MW 5 */
	   902      "00000000" // /* MW 4 */
	   903      "00001100" // /* MW 3 */
	   904      "00000000" // /* MW 2 */
	   905      "00000000" // /* MW 1 */
	   906      "01011001" // 	                                                                                                                        MOV p0, p7 /* MW 4 */
	   907      "01110110" // /* MW 3 */
	   908      "00111110" // /* MW 2 */
	   909      "00011000" // /* MW 1 */
	   910      "01010101" // 	                                                                                          MOVXM r23, #0 /* MW 6 */
	   911      "00000000" // /* MW 5 */
	   912      "10000000" // /* MW 4 */
	   913      "00001011" // /* MW 3 */
	   914      "00000000" // /* MW 2 */
	   915      "00000000" // /* MW 1 */
	   916      "01000011" // 	                                                                                          EQ r24, r23, r24;             MOV p7, r24 /* MW 8 */
	   917      "00101000" // /* MW 7 */
	   918      "00001011" // /* MW 6 */
	   919      "10011110" // /* MW 5 */
	   920      "00111111" // /* MW 4 */
	   921      "10001100" // /* MW 3 */
	   922      "00101111" // /* MW 2 */
	   923      "00000000" // /* MW 1 */
	   924      "10010101" // 	                                                                                          JNZ r24, #1024 /* MW 6 */
	   925      "00000001" // /* MW 5 */
	   926      "01000000" // /* MW 4 */
	   927      "00000000" // /* MW 3 */
	   928      "00000010" // /* MW 2 */
	   929      "11000000" // /* MW 1 */
.delay_slot
	   930      "00011001" // 	                              PADDB [sp], #32 /* MW 4 */
	   931      "00100000" // /* MW 3 */
	   932      "00000011" // /* MW 2 */
	   933      "00111000" // /* MW 1 */
.delay_slot
	   934      "00011001" // 	                                                            ST r22, [sp, #-4] /* MW 4 */
	   935      "11101100" // /* MW 3 */
	   936      "11111111" // /* MW 2 */
	   937      "00001111" // /* MW 1 */
.delay_slot
	   938      "10011001" // 	                                                            ST lr, [sp, #-16] /* MW 4 */
	   939      "01000010" // /* MW 3 */
	   940      "11111110" // /* MW 2 */
	   941      "00001111" // /* MW 1 */
.delay_slot
	   942      "00011001" // 	                                                            ST r0, [sp, #-12] /* MW 4 */
	   943      "11000000" // /* MW 3 */
	   944      "11111110" // /* MW 2 */
	   945      "00001111" // /* MW 1 */
.delay_slot
	   946      "00101111" // 	NOPA;                                                       ST p0, [sp, #-8];                                           NOPM;                                   NOPV /* MW 14 */
	   947      "01111000" // /* MW 13 */
	   948      "00000000" // /* MW 12 */
	   949      "00000000" // /* MW 11 */
	   950      "00111000" // /* MW 10 */
	   951      "00000000" // /* MW 9 */
	   952      "01000000" // /* MW 8 */
	   953      "00000000" // /* MW 7 */
	   954      "10000000" // /* MW 6 */
	   955      "01000110" // /* MW 5 */
	   956      "11111111" // /* MW 4 */
	   957      "00000111" // /* MW 3 */
	   958      "00000000" // /* MW 2 */
	   959      "00000000" // /* MW 1 */
.label TGT_F_fini_64
.loop_nesting 1
	   960      "11011001" // 	LDA p0, [p7], #4 /* MW 4 */
	   961      "10000110" // /* MW 3 */
	   962      "00000011" // /* MW 2 */
	   963      "00000111" // /* MW 1 */
	   964      "00000001" // 	NOPX /* MW 2 */
	   965      "00000000" // /* MW 1 */
	   966      "00000001" // 	NOPX /* MW 2 */
	   967      "00000000" // /* MW 1 */
	   968      "00000001" // 	NOPX /* MW 2 */
	   969      "00000000" // /* MW 1 */
	   970      "00000001" // 	NOPX /* MW 2 */
	   971      "00000000" // /* MW 1 */
	   972      "00000001" // 	NOPX /* MW 2 */
	   973      "00000000" // /* MW 1 */
	   974      "00000001" // 	NOPX /* MW 2 */
	   975      "00000000" // /* MW 1 */
.no_stack_arguments
	   976      "00011001" // 	                                                                                          JL p0 /* MW 4 */
	   977      "00010100" // /* MW 3 */
	   978      "00000000" // /* MW 2 */
	   979      "00010000" // /* MW 1 */
.delay_slot
	   980      "01011001" // 	                                                                                                                        MOV r22, p7 /* MW 4 */
	   981      "01110110" // /* MW 3 */
	   982      "10001110" // /* MW 2 */
	   983      "00011101" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   984      "00000001" // 	NOPX /* MW 2 */
	   985      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   986      "00000001" // 	NOPX /* MW 2 */
	   987      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   988      "00000001" // 	NOPX /* MW 2 */
	   989      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   990      "00000001" // 	NOPX /* MW 2 */
	   991      "00000000" // /* MW 1 */
.return_address
	   992      "10011001" // 	                                                                                          NE r24, r23, r22 /* MW 4 */
	   993      "01101000" // /* MW 3 */
	   994      "11110001" // /* MW 2 */
	   995      "00010101" // /* MW 1 */
	   996      "10010101" // 	                                                                                          JNZ r24, #960 /* MW 6 */
	   997      "00000001" // /* MW 5 */
	   998      "01000000" // /* MW 4 */
	   999      "11100000" // /* MW 3 */
	  1000      "00000001" // /* MW 2 */
	  1001      "11000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1002      "00000001" // 	NOPX /* MW 2 */
	  1003      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1004      "00000001" // 	NOPX /* MW 2 */
	  1005      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1006      "00000001" // 	NOPX /* MW 2 */
	  1007      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1008      "00000001" // 	NOPX /* MW 2 */
	  1009      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1010      "00101111" // 	NOPA;                                                       NOPS;                                                       NOPM;                                   NOPV /* MW 14 */
	  1011      "01111000" // /* MW 13 */
	  1012      "00000000" // /* MW 12 */
	  1013      "00000000" // /* MW 11 */
	  1014      "00111000" // /* MW 10 */
	  1015      "00000000" // /* MW 9 */
	  1016      "01000000" // /* MW 8 */
	  1017      "00000000" // /* MW 7 */
	  1018      "00000000" // /* MW 6 */
	  1019      "00000000" // /* MW 5 */
	  1020      "00000000" // /* MW 4 */
	  1021      "00000000" // /* MW 3 */
	  1022      "00000000" // /* MW 2 */
	  1023      "00000000" // /* MW 1 */
.label TGT_F_fini_128
.loop_nesting 0
	  1024      "11011001" // 	LDA lr, [sp, #-16] /* MW 4 */
	  1025      "01000010" // /* MW 3 */
	  1026      "11111110" // /* MW 2 */
	  1027      "00000111" // /* MW 1 */
	  1028      "01011001" // 	LDA r23, [sp, #-12] /* MW 4 */
	  1029      "11101110" // /* MW 3 */
	  1030      "11111110" // /* MW 2 */
	  1031      "00000111" // /* MW 1 */
	  1032      "01011001" // 	LDA r22, [sp, #-4] /* MW 4 */
	  1033      "11101100" // /* MW 3 */
	  1034      "11111111" // /* MW 2 */
	  1035      "00000111" // /* MW 1 */
	  1036      "11011001" // 	LDA p7, [sp, #-8] /* MW 4 */
	  1037      "01111110" // /* MW 3 */
	  1038      "11111111" // /* MW 2 */
	  1039      "00000111" // /* MW 1 */
	  1040      "00000001" // 	NOPX /* MW 2 */
	  1041      "00000000" // /* MW 1 */
	  1042      "00000001" // 	NOPX /* MW 2 */
	  1043      "00000000" // /* MW 1 */
	  1044      "00000001" // 	NOPX /* MW 2 */
	  1045      "00000000" // /* MW 1 */
	  1046      "00011001" // 	                                                                                          RET lr /* MW 4 */
	  1047      "00011000" // /* MW 3 */
	  1048      "00000000" // /* MW 2 */
	  1049      "00010000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1050      "00000001" // 	NOPX /* MW 2 */
	  1051      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1052      "00000001" // 	NOPX /* MW 2 */
	  1053      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1054      "00000001" // 	NOPX /* MW 2 */
	  1055      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1056      "00000001" // 	NOPX /* MW 2 */
	  1057      "00000000" // /* MW 1 */
.delay_slot
	  1058      "01111111" // 	NOPA;                         PADDB [sp], #-32;             NOPS;                         NOPX;                         NOPM /* MW 14 */
	  1059      "00000000" // /* MW 13 */
	  1060      "00000000" // /* MW 12 */
	  1061      "00000000" // /* MW 11 */
	  1062      "01110001" // /* MW 10 */
	  1063      "00000000" // /* MW 9 */
	  1064      "00000000" // /* MW 8 */
	  1065      "00000000" // /* MW 7 */
	  1066      "00000000" // /* MW 6 */
	  1067      "11100000" // /* MW 5 */
	  1068      "11111111" // /* MW 4 */
	  1069      "00000111" // /* MW 3 */
	  1070      "00000000" // /* MW 2 */
.label _fini__end
	  1071      "00000000" // /* MW 1 */
.label __cxa_finalize
.function_start
	  1072      "10111011" // 	MOVA r1, #8;                                                                              MOVXM p0, #459840 /* MW 10 */
	  1073      "00010000" // /* MW 9 */
	  1074      "00100000" // /* MW 8 */
	  1075      "00011010" // /* MW 7 */
	  1076      "11000000" // /* MW 6 */
	  1077      "00000001" // /* MW 5 */
	  1078      "00000000" // /* MW 4 */
	  1079      "01001000" // /* MW 3 */
	  1080      "00000000" // /* MW 2 */
	  1081      "00000001" // /* MW 1 */
	  1082      "10111011" // 	LDA r3, [p0, #0];                                                                         MOVXM r2, #459808 /* MW 10 */
	  1083      "00010000" // /* MW 9 */
	  1084      "00010000" // /* MW 8 */
	  1085      "01000010" // /* MW 7 */
	  1086      "11000000" // /* MW 6 */
	  1087      "00000001" // /* MW 5 */
	  1088      "00000000" // /* MW 4 */
	  1089      "11001000" // /* MW 3 */
	  1090      "01010000" // /* MW 2 */
	  1091      "00000000" // /* MW 1 */
	  1092      "00111011" // 	                                                            ST r1, [p0, #0];              MOVX r1, #-3;                 MOV r17, crSat /* MW 10 */
	  1093      "00101001" // /* MW 9 */
	  1094      "10011011" // /* MW 8 */
	  1095      "00100100" // /* MW 7 */
	  1096      "10101010" // /* MW 6 */
	  1097      "00010111" // /* MW 5 */
	  1098      "00111110" // /* MW 4 */
	  1099      "01000000" // /* MW 3 */
	  1100      "01010000" // /* MW 2 */
	  1101      "00000000" // /* MW 1 */
	  1102      "01011001" // 	                                                                                                                        MOV r16, crRnd /* MW 4 */
	  1103      "00110110" // /* MW 3 */
	  1104      "00000110" // /* MW 2 */
	  1105      "00011100" // /* MW 1 */
	  1106      "01011001" // 	                                                                                                                        MOV r18, lr /* MW 4 */
	  1107      "11110110" // /* MW 3 */
	  1108      "10000100" // /* MW 2 */
	  1109      "00011100" // /* MW 1 */
	  1110      "01010101" // 	                                                                                          MOVXM p6, #1136 /* MW 6 */
	  1111      "11100000" // /* MW 5 */
	  1112      "01101000" // /* MW 4 */
	  1113      "00001100" // /* MW 3 */
	  1114      "00000000" // /* MW 2 */
	  1115      "00000000" // /* MW 1 */
	  1116      "00000001" // 	NOPX /* MW 2 */
	  1117      "00000000" // /* MW 1 */
	  1118      "00000001" // 	NOPX /* MW 2 */
	  1119      "00000000" // /* MW 1 */
	  1120      "01111001" // 	                                                                                                                        ADD.NC r3, r3, #-8 /* MW 4 */
	  1121      "11110110" // /* MW 3 */
	  1122      "11000001" // /* MW 2 */
	  1123      "00011000" // /* MW 1 */
	  1124      "10011001" // 	                                                                                          ADD r2, r3, r2 /* MW 4 */
	  1125      "00100000" // /* MW 3 */
	  1126      "11000100" // /* MW 2 */
	  1127      "00010000" // /* MW 1 */
	  1128      "01000011" // 	                                                                                          ASHL r19, r3, r1;             MOV p7, r2 /* MW 8 */
	  1129      "00101000" // /* MW 7 */
	  1130      "10001011" // /* MW 6 */
	  1131      "10011000" // /* MW 5 */
	  1132      "11110111" // /* MW 4 */
	  1133      "00110000" // /* MW 3 */
	  1134      "00000111" // /* MW 2 */
	  1135      "00000000" // /* MW 1 */
.label TGT_F__cxa_finalize_64
.loop_nesting 1
	  1136      "11011001" // 	LDA p1, [p7], #4 /* MW 4 */
	  1137      "10001110" // /* MW 3 */
	  1138      "00000011" // /* MW 2 */
	  1139      "00000111" // /* MW 1 */
	  1140      "11011001" // 	LDA p0, [p7], #-12 /* MW 4 */
	  1141      "10000110" // /* MW 3 */
	  1142      "11111011" // /* MW 2 */
	  1143      "00000111" // /* MW 1 */
	  1144      "00000001" // 	NOPX /* MW 2 */
	  1145      "00000000" // /* MW 1 */
	  1146      "00000001" // 	NOPX /* MW 2 */
	  1147      "00000000" // /* MW 1 */
	  1148      "00000001" // 	NOPX /* MW 2 */
	  1149      "00000000" // /* MW 1 */
	  1150      "00000001" // 	NOPX /* MW 2 */
	  1151      "00000000" // /* MW 1 */
	  1152      "00000001" // 	NOPX /* MW 2 */
	  1153      "00000000" // /* MW 1 */
.no_stack_arguments
	  1154      "00011001" // 	                                                                                          JL p1 /* MW 4 */
	  1155      "01010100" // /* MW 3 */
	  1156      "00000000" // /* MW 2 */
	  1157      "00010000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1158      "00000001" // 	NOPX /* MW 2 */
	  1159      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1160      "00000001" // 	NOPX /* MW 2 */
	  1161      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1162      "00000001" // 	NOPX /* MW 2 */
	  1163      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1164      "00011001" // 	NOPA /* MW 4 */
	  1165      "00000000" // /* MW 3 */
	  1166      "00000000" // /* MW 2 */
	  1167      "00000000" // /* MW 1 */
.delay_slot
	  1168      "11000000" // 	NOPA;                         NOPB;                         NOPS;                         NOPX;                         MOV r20, r0;                            NOPV /* MW 16 */
	  1169      "00000011" // /* MW 15 */
	  1170      "00000000" // /* MW 14 */
	  1171      "00101000" // /* MW 13 */
	  1172      "00001011" // /* MW 12 */
	  1173      "10000000" // /* MW 11 */
	  1174      "00000010" // /* MW 10 */
	  1175      "00000000" // /* MW 9 */
	  1176      "00000000" // /* MW 8 */
	  1177      "00000000" // /* MW 7 */
	  1178      "00000000" // /* MW 6 */
	  1179      "00000000" // /* MW 5 */
	  1180      "00000000" // /* MW 4 */
	  1181      "00000000" // /* MW 3 */
	  1182      "00000000" // /* MW 2 */
	  1183      "00000000" // /* MW 1 */
.return_address
	  1184      "00011001" // 	                                                                                          JNZD r19, r19, p6 /* MW 4 */
	  1185      "10001100" // /* MW 3 */
	  1186      "11100111" // /* MW 2 */
	  1187      "00010100" // /* MW 1 */
.delay_slot
	  1188      "01011001" // 	                                                                                                                        MOV r0, r20 /* MW 4 */
	  1189      "00010110" // /* MW 3 */
	  1190      "00001010" // /* MW 2 */
	  1191      "00011000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1192      "00000001" // 	NOPX /* MW 2 */
	  1193      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1194      "00000001" // 	NOPX /* MW 2 */
	  1195      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1196      "00000001" // 	NOPX /* MW 2 */
	  1197      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1198      "00000001" // 	NOPX /* MW 2 */
	  1199      "00000000" // /* MW 1 */
.loop_nesting 0
	  1200      "01011001" // 	                                                                                                                        MOV lr, r18 /* MW 4 */
	  1201      "00010110" // /* MW 3 */
	  1202      "01111001" // /* MW 2 */
	  1203      "00011010" // /* MW 1 */
	  1204      "00011001" // 	                                                                                          RET lr /* MW 4 */
	  1205      "00011000" // /* MW 3 */
	  1206      "00000000" // /* MW 2 */
	  1207      "00010000" // /* MW 1 */
.delay_slot
	  1208      "01000011" // 	                                                                                          MOVX crSat, r17;              MOV crRnd, r16 /* MW 8 */
	  1209      "00101000" // /* MW 7 */
	  1210      "00001011" // /* MW 6 */
	  1211      "10001100" // /* MW 5 */
	  1212      "00000001" // /* MW 4 */
	  1213      "00100001" // /* MW 3 */
	  1214      "00100011" // /* MW 2 */
	  1215      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1216      "00000001" // 	NOPX /* MW 2 */
	  1217      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1218      "00000001" // 	NOPX /* MW 2 */
	  1219      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1220      "00000001" // 	NOPX /* MW 2 */
	  1221      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1222      "10111011" // 	NOPA;                         NOPB;                                                                                     NOPM /* MW 10 */
	  1223      "10001110" // /* MW 9 */
	  1224      "00000011" // /* MW 8 */
	  1225      "00000000" // /* MW 7 */
	  1226      "00000000" // /* MW 6 */
	  1227      "00000000" // /* MW 5 */
	  1228      "00000000" // /* MW 4 */
	  1229      "00000000" // /* MW 3 */
	  1230      "00000000" // /* MW 2 */
.label __cxa_finalize__end
	  1231      "00000000" // /* MW 1 */
