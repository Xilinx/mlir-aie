#
# This file is licensed under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
# (c) Copyright 2021 Xilinx Inc.

if config.aie_include_integration_tests != 'ON':
    config.unsupported = True

tosa_to_linalg = '--pass-pipeline="builtin.module(func.func(tosa-to-linalg-named, tosa-to-linalg, tosa-to-tensor))"'
transform_linalg_for_aievec_cpp = '--dynamic-size-no-implicit-broadcast'
linalg_to_affine = '--linalg-fuse-elementwise-ops --linalg-fold-unit-extent-dims --eliminate-empty-tensors --empty-tensor-to-alloc-tensor --one-shot-bufferize="allow-return-allocs-from-loops allow-unknown-ops bufferize-function-boundaries function-boundary-type-conversion=identity-layout-map unknown-type-conversion=identity-layout-map" --drop-equivalent-buffer-results --buffer-results-to-out-params --buffer-deallocation --canonicalize --cse --convert-linalg-to-affine-loops'

config.substitutions.append(('%tosa-to-linalg%', tosa_to_linalg))
config.substitutions.append(('%linalg-to-vector-v64%', transform_linalg_for_aievec_cpp+' '+linalg_to_affine+' --affine-super-vectorize="virtual-vector-size=64"'))
config.substitutions.append(('%linalg-to-vector-v32%', transform_linalg_for_aievec_cpp+' '+linalg_to_affine+' --affine-super-vectorize="virtual-vector-size=32"'))
config.substitutions.append(('%linalg-to-vector-v16%', transform_linalg_for_aievec_cpp+' '+linalg_to_affine+' --affine-super-vectorize="virtual-vector-size=16"'))
config.substitutions.append(('%linalg-to-affine%', linalg_to_affine))
