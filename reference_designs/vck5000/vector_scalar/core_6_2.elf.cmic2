
// File generated by darts version U-2022.12#3eec2545bc#230622, Sat Mar 16 13:07:54 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// darts -I/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2/aietools/data/versal_prod/lib -d -h -I/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2/aietools/data/versal_prod/lib/runtime_cxx/libcxx-lite/include -I/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2/aietools/data/versal_prod/lib/runtime_cxx/libs/libcxx-9.0.0/include-lite -I/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2/aietools/data/versal_prod/lib/runtime/include -D__AIENGINE__ -D__AIE_ARCH__=10 -D__AIEARCH__=10 -D__tct_tgt__=230622 -L +Ihex +nanno +u core_6_2.elf me

// Release: ipp U-2022.12-TGT-230622
.label __AIE_ARCH_MODEL_VERSION__10022400__inlined__1__me_basic___main_init_
.label _main_init
.function_start
	     0      "00001011" // 	NOP;                                                                                                MOV.u20 sp, #163840 /* MW 4 */
	     1      "00000000" // /* MW 3 */
	     2      "01100100" // /* MW 2 */
	     3      "01001010" // /* MW 1 */
	     4      "00000011" // 	NOP;                                                                  MOV.s12 r12, #0 /* MW 4 */
	     5      "11000000" // /* MW 3 */
	     6      "00000011" // /* MW 2 */
	     7      "01000000" // /* MW 1 */
	     8      "00100001" // 	MOV mc0, r12 /* MW 2 */
	     9      "11001010" // /* MW 1 */
	    10      "01100001" // 	MOV mc1, r12 /* MW 2 */
	    11      "11001010" // /* MW 1 */
	    12      "00111111" // 	NOP;                MOV.s9 r12, #0;     NOP;                                                        MOV.u20 r10, #0;              NOP /* MW 12 */
	    13      "00000000" // /* MW 11 */
	    14      "10000000" // /* MW 10 */
	    15      "00001110" // /* MW 9 */
	    16      "00000100" // /* MW 8 */
	    17      "00000000" // /* MW 7 */
	    18      "00000000" // /* MW 6 */
	    19      "00010000" // /* MW 5 */
	    20      "11000000" // /* MW 4 */
	    21      "00011100" // /* MW 3 */
	    22      "00000000" // /* MW 2 */
	    23      "00000000" // /* MW 1 */
	    24      "11110111" // 	                                        NOP;                                                        MOV.u20 r13, #0;              NOP /* MW 8 */
	    25      "00000111" // /* MW 7 */
	    26      "00000000" // /* MW 6 */
	    27      "11110100" // /* MW 5 */
	    28      "01000000" // /* MW 4 */
	    29      "00000000" // /* MW 3 */
	    30      "00000000" // /* MW 2 */
	    31      "10000000" // /* MW 1 */
	    32      "00100001" // 	MOV md0, r12 /* MW 2 */
	    33      "11001011" // /* MW 1 */
	    34      "01110111" // 	NOP;                                                                  EQ r12, r10, r13;             MOV md1, r12 /* MW 8 */
	    35      "01011000" // /* MW 7 */
	    36      "00011011" // /* MW 6 */
	    37      "01000111" // /* MW 5 */
	    38      "11001011" // /* MW 4 */
	    39      "00000010" // /* MW 3 */
	    40      "00000000" // /* MW 2 */
	    41      "00000000" // /* MW 1 */
	    42      "11110111" // 	                                        NOP;                                                        BNEZ r12,#160;                NOP /* MW 8 */
	    43      "00000111" // /* MW 7 */
	    44      "00001010" // /* MW 6 */
	    45      "10000000" // /* MW 5 */
	    46      "10010001" // /* MW 4 */
	    47      "00000000" // /* MW 3 */
	    48      "00000000" // /* MW 2 */
	    49      "10000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    50      "00000001" // 	NOP /* MW 2 */
	    51      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    52      "00000001" // 	NOP /* MW 2 */
	    53      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    54      "00000001" // 	NOP /* MW 2 */
	    55      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    56      "00000001" // 	NOP /* MW 2 */
	    57      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    58      "00000001" // 	NOP /* MW 2 */
	    59      "00000000" // /* MW 1 */
	    60      "11110111" // 	                                        NOP;                                                        MOV.u20 p6, #1048572;         NOP /* MW 8 */
	    61      "11000111" // /* MW 7 */
	    62      "11111111" // /* MW 6 */
	    63      "10111011" // /* MW 5 */
	    64      "01111111" // /* MW 4 */
	    65      "00000000" // /* MW 3 */
	    66      "00000000" // /* MW 2 */
	    67      "10000000" // /* MW 1 */
	    68      "00000011" // 	NOP;                                                                                                MOV p7, p0 /* MW 4 */
	    69      "10011000" // /* MW 3 */
	    70      "00010111" // /* MW 2 */
	    71      "00001101" // /* MW 1 */
	    72      "01110111" // 	NOP;                                                                  NOP;                          MOV r11, r6 /* MW 8 */
	    73      "00000000" // /* MW 7 */
	    74      "00000000" // /* MW 6 */
	    75      "11000000" // /* MW 5 */
	    76      "01101110" // /* MW 4 */
	    77      "00000111" // /* MW 3 */
	    78      "00000000" // /* MW 2 */
	    79      "00000000" // /* MW 1 */
.label TGT_F_main_init_80
.loop_nesting 1
	    80      "01110111" // 	LDA cb0, [p6], #-4;                                                   NOP;                          MOV r4, p6 /* MW 8 */
	    81      "00000000" // /* MW 7 */
	    82      "00000000" // /* MW 6 */
	    83      "00000000" // /* MW 5 */
	    84      "11101101" // /* MW 4 */
	    85      "10000110" // /* MW 3 */
	    86      "10111111" // /* MW 2 */
	    87      "01000000" // /* MW 1 */
	    88      "00000001" // 	NOP /* MW 2 */
	    89      "00000000" // /* MW 1 */
	    90      "00000001" // 	NOP /* MW 2 */
	    91      "00000000" // /* MW 1 */
	    92      "00000001" // 	NOP /* MW 2 */
	    93      "00000000" // /* MW 1 */
	    94      "00000001" // 	NOP /* MW 2 */
	    95      "00000000" // /* MW 1 */
	    96      "00000001" // 	NOP /* MW 2 */
	    97      "00000000" // /* MW 1 */
	    98      "00000001" // 	NOP /* MW 2 */
	    99      "00000000" // /* MW 1 */
	   100      "00000001" // 	NOP /* MW 2 */
	   101      "00000000" // /* MW 1 */
.no_stack_arguments
	   102      "01000001" // 	JAL cb0 /* MW 2 */
	   103      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   104      "00000001" // 	NOP /* MW 2 */
	   105      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   106      "00000001" // 	NOP /* MW 2 */
	   107      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   108      "00000001" // 	NOP /* MW 2 */
	   109      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   110      "00000001" // 	NOP /* MW 2 */
	   111      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   112      "00000010" // 	NOP;                NOP;                NOP;                          NOP;                          NOP;                          NOP;                                    NOP /* MW 16 */
	   113      "00000000" // /* MW 15 */
	   114      "00000000" // /* MW 14 */
	   115      "00000000" // /* MW 13 */
	   116      "00000000" // /* MW 12 */
	   117      "00000000" // /* MW 11 */
	   118      "00000000" // /* MW 10 */
	   119      "00000000" // /* MW 9 */
	   120      "00000000" // /* MW 8 */
	   121      "00000000" // /* MW 7 */
	   122      "00000000" // /* MW 6 */
	   123      "00000000" // /* MW 5 */
	   124      "00000000" // /* MW 4 */
	   125      "00000000" // /* MW 3 */
	   126      "00000000" // /* MW 2 */
	   127      "00000000" // /* MW 1 */
.return_address
	   128      "00000011" // 	NOP;                                                                  NE r12, r4, r10 /* MW 4 */
	   129      "11000000" // /* MW 3 */
	   130      "10100100" // /* MW 2 */
	   131      "00111001" // /* MW 1 */
	   132      "11110111" // 	                                        NOP;                                                        BNEZ r12,#80;                 NOP /* MW 8 */
	   133      "00000111" // /* MW 7 */
	   134      "00000101" // /* MW 6 */
	   135      "10000000" // /* MW 5 */
	   136      "10010001" // /* MW 4 */
	   137      "00000000" // /* MW 3 */
	   138      "00000000" // /* MW 2 */
	   139      "10000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   140      "00000001" // 	NOP /* MW 2 */
	   141      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   142      "00000001" // 	NOP /* MW 2 */
	   143      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   144      "00000001" // 	NOP /* MW 2 */
	   145      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   146      "00000001" // 	NOP /* MW 2 */
	   147      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   148      "00000001" // 	NOP /* MW 2 */
	   149      "00000000" // /* MW 1 */
.loop_nesting 0
	   150      "10000101" // 	MOV p0, p7 /* MW 2 */
	   151      "10111110" // /* MW 1 */
	   152      "01110111" // 	NOP;                                                                  NOP;                          MOV r6, r11 /* MW 8 */
	   153      "00000000" // /* MW 7 */
	   154      "00000000" // /* MW 6 */
	   155      "10000000" // /* MW 5 */
	   156      "10111101" // /* MW 4 */
	   157      "00000111" // /* MW 3 */
	   158      "00000000" // /* MW 2 */
	   159      "00000000" // /* MW 1 */
.label TGT_F_main_init_160
.no_stack_arguments
	   160      "11110111" // 	                                        NOP;                                                        JAL #288;                     NOP /* MW 8 */
	   161      "00000111" // /* MW 7 */
	   162      "00010010" // /* MW 6 */
	   163      "00100000" // /* MW 5 */
	   164      "10100000" // /* MW 4 */
	   165      "00000000" // /* MW 3 */
	   166      "00000000" // /* MW 2 */
	   167      "10000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   168      "00000001" // 	NOP /* MW 2 */
	   169      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   170      "00000001" // 	NOP /* MW 2 */
	   171      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   172      "00000001" // 	NOP /* MW 2 */
	   173      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   174      "00000001" // 	NOP /* MW 2 */
	   175      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   176      "00000010" // 	NOP;                NOP;                NOP;                          NOP;                          NOP;                          NOP;                                    NOP /* MW 16 */
	   177      "00000000" // /* MW 15 */
	   178      "00000000" // /* MW 14 */
	   179      "00000000" // /* MW 13 */
	   180      "00000000" // /* MW 12 */
	   181      "00000000" // /* MW 11 */
	   182      "00000000" // /* MW 10 */
	   183      "00000000" // /* MW 9 */
	   184      "00000000" // /* MW 8 */
	   185      "00000000" // /* MW 7 */
	   186      "00000000" // /* MW 6 */
	   187      "00000000" // /* MW 5 */
	   188      "00000000" // /* MW 4 */
	   189      "00000000" // /* MW 3 */
	   190      "00000000" // /* MW 2 */
	   191      "00000000" // /* MW 1 */
.return_address
.no_stack_arguments
	   192      "11110111" // 	                                        NOP;                                                        JAL #1584;                    NOP /* MW 8 */
	   193      "00000111" // /* MW 7 */
	   194      "01100011" // /* MW 6 */
	   195      "00100000" // /* MW 5 */
	   196      "10100000" // /* MW 4 */
	   197      "00000000" // /* MW 3 */
	   198      "00000000" // /* MW 2 */
	   199      "10000000" // /* MW 1 */
.delay_slot
	   200      "11110111" // 	                                        NOP;                                                        MOV.u20 p0, #0;               NOP /* MW 8 */
	   201      "00000111" // /* MW 7 */
	   202      "00000000" // /* MW 6 */
	   203      "10100000" // /* MW 5 */
	   204      "01000000" // /* MW 4 */
	   205      "00000000" // /* MW 3 */
	   206      "00000000" // /* MW 2 */
	   207      "10000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   208      "00000001" // 	NOP /* MW 2 */
	   209      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   210      "00000001" // 	NOP /* MW 2 */
	   211      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   212      "00000011" // 	NOP;                                                                  NOP /* MW 4 */
	   213      "00000000" // /* MW 3 */
	   214      "00000000" // /* MW 2 */
	   215      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   216      "00110111" // 	NOP;                                    NOP;                          NOP /* MW 8 */
	   217      "00000000" // /* MW 7 */
	   218      "00000000" // /* MW 6 */
	   219      "00000000" // /* MW 5 */
	   220      "00000000" // /* MW 4 */
	   221      "00000000" // /* MW 3 */
	   222      "00000000" // /* MW 2 */
	   223      "00000000" // /* MW 1 */
.return_address
.swstall chess_separator_scheduler
	   224      "00000001" // 	NOP /* MW 2 */
	   225      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   226      "00000001" // 	NOP /* MW 2 */
	   227      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   228      "00000001" // 	NOP /* MW 2 */
	   229      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   230      "00000001" // 	NOP /* MW 2 */
	   231      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   232      "00000001" // 	NOP /* MW 2 */
	   233      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   234      "00000001" // 	NOP /* MW 2 */
	   235      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   236      "00000001" // 	NOP /* MW 2 */
	   237      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   238      "00000001" // 	NOP /* MW 2 */
	   239      "00000000" // /* MW 1 */
	   240      "00000011" // 	NOP;                                                                  EVENT #2 /* MW 4 */
	   241      "00100000" // /* MW 3 */
	   242      "00000000" // /* MW 2 */
	   243      "00000100" // /* MW 1 */
.swstall chess_separator_scheduler
	   244      "00000001" // 	NOP /* MW 2 */
	   245      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   246      "00000001" // 	NOP /* MW 2 */
	   247      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   248      "00000001" // 	NOP /* MW 2 */
	   249      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   250      "00000001" // 	NOP /* MW 2 */
	   251      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   252      "00000001" // 	NOP /* MW 2 */
	   253      "00000000" // /* MW 1 */
.swstall for_chess_exit
.exit
	   254      "00000001" // 	NOP /* MW 2 */
	   255      "00000000" // /* MW 1 */
.label TGT_F_main_init_256
.loop_nesting 1
	   256      "11110111" // 	                                        NOP;                                                        J #256;                       NOP /* MW 8 */
	   257      "00000111" // /* MW 7 */
	   258      "00010000" // /* MW 6 */
	   259      "00000000" // /* MW 5 */
	   260      "10100000" // /* MW 4 */
	   261      "00000000" // /* MW 3 */
	   262      "00000000" // /* MW 2 */
	   263      "10000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   264      "00000001" // 	NOP /* MW 2 */
	   265      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   266      "00000001" // 	NOP /* MW 2 */
	   267      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   268      "00000001" // 	NOP /* MW 2 */
	   269      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   270      "00000001" // 	NOP /* MW 2 */
	   271      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   272      "00000001" // 	NOP /* MW 2 */
.label _main_init__end
	   273      "00000000" // /* MW 1 */
.label core_6_2
.function_start
	   288      "00111111" // 	NOP;                MOV.s9 r12, #0;                                   MOV.s12 m0, #64;              MOV.u20 ch0, #1048575;        NOP /* MW 12 */
	   289      "11111111" // /* MW 11 */
	   290      "00111111" // /* MW 10 */
	   291      "11110000" // /* MW 9 */
	   292      "00000111" // /* MW 8 */
	   293      "01000000" // /* MW 7 */
	   294      "00100000" // /* MW 6 */
	   295      "00001000" // /* MW 5 */
	   296      "11000000" // /* MW 4 */
	   297      "00011100" // /* MW 3 */
	   298      "00000000" // /* MW 2 */
	   299      "00000000" // /* MW 1 */
	   300      "01110111" // 	PADDA [sp], m0;                                                       MOV.s12 r11, #3;              MOV r8, r11 /* MW 8 */
	   301      "11110110" // /* MW 7 */
	   302      "00000001" // /* MW 6 */
	   303      "00001000" // /* MW 5 */
	   304      "10111110" // /* MW 4 */
	   305      "00000111" // /* MW 3 */
	   306      "10010000" // /* MW 2 */
	   307      "00001000" // /* MW 1 */
	   308      "11110111" // 	                                        NOP;                                                        MOVT.s12 ch0, #2047;          NOP /* MW 8 */
	   309      "11110111" // /* MW 7 */
	   310      "01111111" // /* MW 6 */
	   311      "00000000" // /* MW 5 */
	   312      "00000001" // /* MW 4 */
	   313      "00000000" // /* MW 3 */
	   314      "00000000" // /* MW 2 */
	   315      "10000000" // /* MW 1 */
	   316      "11110111" // 	                                        ST p7, [sp, #-16];            NOP;                          MOV r0, r4 /* MW 8 */
	   317      "01100000" // /* MW 7 */
	   318      "00111010" // /* MW 6 */
	   319      "00000000" // /* MW 5 */
	   320      "00000000" // /* MW 4 */
	   321      "11000000" // /* MW 3 */
	   322      "11111111" // /* MW 2 */
	   323      "01011011" // /* MW 1 */
	   324      "11110111" // 	                                        ST r12, [sp, #-36];                                         MOV.u20 cl0, #164864;         NOP /* MW 8 */
	   325      "00000111" // /* MW 7 */
	   326      "01000000" // /* MW 6 */
	   327      "00100000" // /* MW 5 */
	   328      "01001010" // /* MW 4 */
	   329      "10111000" // /* MW 3 */
	   330      "10011111" // /* MW 2 */
	   331      "10101111" // /* MW 1 */
	   332      "11110111" // 	                                        ST r12, [sp, #-32];                                         MOV.u20 r13, #164928;         NOP /* MW 8 */
	   333      "00000111" // /* MW 7 */
	   334      "01000100" // /* MW 6 */
	   335      "11110100" // /* MW 5 */
	   336      "01001010" // /* MW 4 */
	   337      "11000000" // /* MW 3 */
	   338      "10011111" // /* MW 2 */
	   339      "10101111" // /* MW 1 */
	   340      "11110111" // 	                                        NOP;                                                        ST.SPIL r8, [sp, #-24];       NOP /* MW 8 */
	   341      "01000111" // /* MW 7 */
	   342      "11101000" // /* MW 6 */
	   343      "11111111" // /* MW 5 */
	   344      "11111000" // /* MW 4 */
	   345      "00000000" // /* MW 3 */
	   346      "00000000" // /* MW 2 */
	   347      "10000000" // /* MW 1 */
	   348      "11110111" // 	                                        NOP;                                                        ST.SPIL r10, [sp, #-20];      NOP /* MW 8 */
	   349      "01000111" // /* MW 7 */
	   350      "11101100" // /* MW 6 */
	   351      "11111111" // /* MW 5 */
	   352      "11111010" // /* MW 4 */
	   353      "00000000" // /* MW 3 */
	   354      "00000000" // /* MW 2 */
	   355      "10000000" // /* MW 1 */
	   356      "11110111" // 	                                        NOP;                                                        ST.SPIL p6, [sp, #-12];       NOP /* MW 8 */
	   357      "01000111" // /* MW 7 */
	   358      "11110100" // /* MW 6 */
	   359      "11111111" // /* MW 5 */
	   360      "11101110" // /* MW 4 */
	   361      "00000000" // /* MW 3 */
	   362      "00000000" // /* MW 2 */
	   363      "10000000" // /* MW 1 */
	   364      "11110111" // 	                                        NOP;                                                        ST.SPIL r0, [sp, #-8];        NOP /* MW 8 */
	   365      "01000111" // /* MW 7 */
	   366      "11111000" // /* MW 6 */
	   367      "11111111" // /* MW 5 */
	   368      "11110000" // /* MW 4 */
	   369      "00000000" // /* MW 3 */
	   370      "00000000" // /* MW 2 */
	   371      "10000000" // /* MW 1 */
	   372      "00111111" // 	NOP;                NOP;                NOP;                                                        ST.SPIL ch0, [sp, #-4];       NOP /* MW 12 */
	   373      "11000100" // /* MW 11 */
	   374      "11111111" // /* MW 10 */
	   375      "00001111" // /* MW 9 */
	   376      "00001101" // /* MW 8 */
	   377      "00000000" // /* MW 7 */
	   378      "00000000" // /* MW 6 */
	   379      "00010000" // /* MW 5 */
	   380      "00000000" // /* MW 4 */
	   381      "00000000" // /* MW 3 */
	   382      "00000000" // /* MW 2 */
	   383      "00000000" // /* MW 1 */
	   384      "00000000" // 	NOP;                NOP;                NOP;                          NOP;                          ST.SPIL lr, [sp, #-28];       NOP;                                    NOP /* MW 16 */
	   385      "00000000" // /* MW 15 */
	   386      "00000000" // /* MW 14 */
	   387      "00000000" // /* MW 13 */
	   388      "10000000" // /* MW 12 */
	   389      "01000100" // /* MW 11 */
	   390      "11111110" // /* MW 10 */
	   391      "10001111" // /* MW 9 */
	   392      "00001100" // /* MW 8 */
	   393      "00000000" // /* MW 7 */
	   394      "00000000" // /* MW 6 */
	   395      "00010000" // /* MW 5 */
	   396      "00000000" // /* MW 4 */
	   397      "00000000" // /* MW 3 */
	   398      "00000000" // /* MW 2 */
	   399      "00000000" // /* MW 1 */
.label TGT_Fcore_6_2_112
.loop_nesting 1
	   400      "00000000" // 	NOP;                MOV.s9 r10, #1;     ST r13, [sp, #-40];           NOP;                          MOV.u20 p6, #164992;          NOP;                                    NOP /* MW 16 */
	   401      "00000000" // /* MW 15 */
	   402      "00000000" // /* MW 14 */
	   403      "00000000" // /* MW 13 */
	   404      "10000000" // /* MW 12 */
	   405      "10000000" // /* MW 11 */
	   406      "10000100" // /* MW 10 */
	   407      "10101011" // /* MW 9 */
	   408      "00000100" // /* MW 8 */
	   409      "11110110" // /* MW 7 */
	   410      "11110111" // /* MW 6 */
	   411      "00110101" // /* MW 5 */
	   412      "11000000" // /* MW 4 */
	   413      "00011010" // /* MW 3 */
	   414      "00000000" // /* MW 2 */
	   415      "00000000" // /* MW 1 */
	   416      "00000000" // 	NOP;                NOP;                ST cl0, [sp, #-44];           NOP;                          MOV.u20 p7, #165056;          NOP;                                    NOP /* MW 16 */
	   417      "00000000" // /* MW 15 */
	   418      "00000000" // /* MW 14 */
	   419      "00000000" // /* MW 13 */
	   420      "10000000" // /* MW 12 */
	   421      "11000000" // /* MW 11 */
	   422      "11000100" // /* MW 10 */
	   423      "10101011" // /* MW 9 */
	   424      "00000100" // /* MW 8 */
	   425      "11110101" // /* MW 7 */
	   426      "01100011" // /* MW 6 */
	   427      "00010101" // /* MW 5 */
	   428      "00000000" // /* MW 4 */
	   429      "00000000" // /* MW 3 */
	   430      "00000000" // /* MW 2 */
	   431      "00000000" // /* MW 1 */
.label TGT_Fcore_6_2_144
.no_stack_arguments
.loop_nesting 2
	   432      "11110111" // 	                                        NOP;                                                        JAL #1312;                    NOP /* MW 8 */
	   433      "00000111" // /* MW 7 */
	   434      "01010010" // /* MW 6 */
	   435      "00100000" // /* MW 5 */
	   436      "10100000" // /* MW 4 */
	   437      "00000000" // /* MW 3 */
	   438      "00000000" // /* MW 2 */
	   439      "10000000" // /* MW 1 */
.delay_slot
	   440      "01110111" // 	NOP;                                                                  MOV.s12 r7, #1;               MOV.s8 r6, #16 /* MW 8 */
	   441      "11101110" // /* MW 7 */
	   442      "00000000" // /* MW 6 */
	   443      "10001000" // /* MW 5 */
	   444      "00001101" // /* MW 4 */
	   445      "00110001" // /* MW 3 */
	   446      "00000000" // /* MW 2 */
	   447      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   448      "00000001" // 	NOP /* MW 2 */
	   449      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   450      "00000001" // 	NOP /* MW 2 */
	   451      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   452      "00000011" // 	NOP;                                                                  NOP /* MW 4 */
	   453      "00000000" // /* MW 3 */
	   454      "00000000" // /* MW 2 */
	   455      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   456      "00110111" // 	NOP;                                    NOP;                          NOP /* MW 8 */
	   457      "00000000" // /* MW 7 */
	   458      "00000000" // /* MW 6 */
	   459      "00000000" // /* MW 5 */
	   460      "00000000" // /* MW 4 */
	   461      "00000000" // /* MW 3 */
	   462      "00000000" // /* MW 2 */
	   463      "00000000" // /* MW 1 */
.return_address
.no_stack_arguments
	   464      "11110111" // 	                                        NOP;                                                        JAL #1312;                    NOP /* MW 8 */
	   465      "00000111" // /* MW 7 */
	   466      "01010010" // /* MW 6 */
	   467      "00100000" // /* MW 5 */
	   468      "10100000" // /* MW 4 */
	   469      "00000000" // /* MW 3 */
	   470      "00000000" // /* MW 2 */
	   471      "10000000" // /* MW 1 */
.delay_slot
	   472      "01110111" // 	NOP;                                                                  MOV.s12 r6, #18;              MOV.s8 r7, #0 /* MW 8 */
	   473      "01101100" // /* MW 7 */
	   474      "00001001" // /* MW 6 */
	   475      "11001000" // /* MW 5 */
	   476      "00001101" // /* MW 4 */
	   477      "00110000" // /* MW 3 */
	   478      "00000000" // /* MW 2 */
	   479      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   480      "00000001" // 	NOP /* MW 2 */
	   481      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   482      "00000001" // 	NOP /* MW 2 */
	   483      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   484      "00000011" // 	NOP;                                                                  NOP /* MW 4 */
	   485      "00000000" // /* MW 3 */
	   486      "00000000" // /* MW 2 */
	   487      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   488      "00110111" // 	NOP;                                    NOP;                          NOP /* MW 8 */
	   489      "00000000" // /* MW 7 */
	   490      "00000000" // /* MW 6 */
	   491      "00000000" // /* MW 5 */
	   492      "00000000" // /* MW 4 */
	   493      "00000000" // /* MW 3 */
	   494      "00000000" // /* MW 2 */
	   495      "00000000" // /* MW 1 */
.return_address
	   496      "00000011" // 	NOP;                                                                  MOV.s12 m0, #-60 /* MW 4 */
	   497      "00000000" // /* MW 3 */
	   498      "00010010" // /* MW 2 */
	   499      "01111111" // /* MW 1 */
	   500      "00000001" // 	NOP /* MW 2 */
	   501      "00000000" // /* MW 1 */
	   502      "00000001" // 	NOP /* MW 2 */
	   503      "00000000" // /* MW 1 */
	   504      "00111111" // 	NOP;                LDB r13, [p6], #4;  NOP;                                                        LDA.SPIL p0, [sp, #-44];      NOP /* MW 12 */
	   505      "10101110" // /* MW 11 */
	   506      "00111111" // /* MW 10 */
	   507      "01111010" // /* MW 9 */
	   508      "00001100" // /* MW 8 */
	   509      "00000000" // /* MW 7 */
	   510      "00000000" // /* MW 6 */
	   511      "11010000" // /* MW 5 */
	   512      "11010001" // /* MW 4 */
	   513      "00111101" // /* MW 3 */
	   514      "00000000" // /* MW 2 */
	   515      "00000000" // /* MW 1 */
	   516      "00110111" // 	LDA r12, [p6], #4;                      NOP;                          NOP /* MW 8 */
	   517      "00000000" // /* MW 7 */
	   518      "00000000" // /* MW 6 */
	   519      "00000000" // /* MW 5 */
	   520      "00000000" // /* MW 4 */
	   521      "10000000" // /* MW 3 */
	   522      "10100011" // /* MW 2 */
	   523      "01111100" // /* MW 1 */
	   524      "00110111" // 	LDA r14, [p6], #4;                      NOP;                          NOP /* MW 8 */
	   525      "00000000" // /* MW 7 */
	   526      "00000000" // /* MW 6 */
	   527      "00000000" // /* MW 5 */
	   528      "00000000" // /* MW 4 */
	   529      "10000000" // /* MW 3 */
	   530      "10100011" // /* MW 2 */
	   531      "01111110" // /* MW 1 */
	   532      "00000011" // 	NOP;                LDB r15, [p6], #4 /* MW 4 */
	   533      "10111000" // /* MW 3 */
	   534      "10100011" // /* MW 2 */
	   535      "01111111" // /* MW 1 */
	   536      "00000011" // 	NOP;                LDB r9, [p6], #4 /* MW 4 */
	   537      "10111000" // /* MW 3 */
	   538      "10100011" // /* MW 2 */
	   539      "01110011" // /* MW 1 */
	   540      "00000011" // 	NOP;                LDB r8, [p6], #4 /* MW 4 */
	   541      "10111000" // /* MW 3 */
	   542      "10100011" // /* MW 2 */
	   543      "01110001" // /* MW 1 */
	   544      "00110111" // 	LDA r6, [p6], #4;                       NOP;                          NOP /* MW 8 */
	   545      "00000000" // /* MW 7 */
	   546      "00000000" // /* MW 6 */
	   547      "00000000" // /* MW 5 */
	   548      "00000000" // /* MW 4 */
	   549      "10000000" // /* MW 3 */
	   550      "10100011" // /* MW 2 */
	   551      "01110110" // /* MW 1 */
	   552      "00000011" // 	NOP;                LDB r0, [p6], #4 /* MW 4 */
	   553      "10111000" // /* MW 3 */
	   554      "10100011" // /* MW 2 */
	   555      "01100001" // /* MW 1 */
	   556      "00010111" // 	NOP;                LDB r13, [p6], #4;                                MUL r7, r13, r11 /* MW 8 */
	   557      "10101110" // /* MW 7 */
	   558      "11110111" // /* MW 6 */
	   559      "11000110" // /* MW 5 */
	   560      "11010001" // /* MW 4 */
	   561      "00111101" // /* MW 3 */
	   562      "00000000" // /* MW 2 */
	   563      "00000000" // /* MW 1 */
	   564      "00010111" // 	NOP;                LDB r12, [p6], #4;                                MUL r5, r12, r11 /* MW 8 */
	   565      "10001010" // /* MW 7 */
	   566      "11110111" // /* MW 6 */
	   567      "11000110" // /* MW 5 */
	   568      "11010001" // /* MW 4 */
	   569      "00111100" // /* MW 3 */
	   570      "00000000" // /* MW 2 */
	   571      "00000000" // /* MW 1 */
	   572      "00010111" // 	NOP;                LDB r14, [p6], #4;                                MUL r1, r14, r11 /* MW 8 */
	   573      "11000010" // /* MW 7 */
	   574      "11110111" // /* MW 6 */
	   575      "11000110" // /* MW 5 */
	   576      "11010001" // /* MW 4 */
	   577      "00111110" // /* MW 3 */
	   578      "00000000" // /* MW 2 */
	   579      "00000000" // /* MW 1 */
	   580      "00010111" // 	NOP;                LDB r7, [p6], #4;   ST r7, [p0], #4 /* MW 8 */
	   581      "10001000" // /* MW 7 */
	   582      "11011110" // /* MW 6 */
	   583      "11010101" // /* MW 5 */
	   584      "11010001" // /* MW 4 */
	   585      "00110111" // /* MW 3 */
	   586      "00000000" // /* MW 2 */
	   587      "00000000" // /* MW 1 */
	   588      "00011111" // 	NOP;                LDB r5, [p6], #4;   ST r5, [p0], #4;              MUL r15, r11, r15;            NOP /* MW 12 */
	   589      "00000000" // /* MW 11 */
	   590      "11000000" // /* MW 10 */
	   591      "11101111" // /* MW 9 */
	   592      "11011111" // /* MW 8 */
	   593      "00010000" // /* MW 7 */
	   594      "10101101" // /* MW 6 */
	   595      "11001011" // /* MW 5 */
	   596      "11010001" // /* MW 4 */
	   597      "00110101" // /* MW 3 */
	   598      "00000000" // /* MW 2 */
	   599      "00000000" // /* MW 1 */
	   600      "00011111" // 	NOP;                LDB r9, [p6], #4;   ST r1, [p0], #4;              MUL r2, r9, r11;              NOP /* MW 12 */
	   601      "00000000" // /* MW 11 */
	   602      "10000000" // /* MW 10 */
	   603      "11100100" // /* MW 9 */
	   604      "11011110" // /* MW 8 */
	   605      "00010000" // /* MW 7 */
	   606      "10001101" // /* MW 6 */
	   607      "11001011" // /* MW 5 */
	   608      "11010001" // /* MW 4 */
	   609      "00111001" // /* MW 3 */
	   610      "00000000" // /* MW 2 */
	   611      "00000000" // /* MW 1 */
	   612      "00010111" // 	NOP;                LDB r8, [p6], #4;                                 MUL r1, r8, r11 /* MW 8 */
	   613      "00000010" // /* MW 7 */
	   614      "11110111" // /* MW 6 */
	   615      "11000110" // /* MW 5 */
	   616      "11010001" // /* MW 4 */
	   617      "00111000" // /* MW 3 */
	   618      "00000000" // /* MW 2 */
	   619      "00000000" // /* MW 1 */
	   620      "00011111" // 	NOP;                LDB r15, [p6], m0;  ST r15, [p0], #4;             MUL r3, r6, r11;              NOP /* MW 12 */
	   621      "00000000" // /* MW 11 */
	   622      "11000000" // /* MW 10 */
	   623      "11011000" // /* MW 9 */
	   624      "11011110" // /* MW 8 */
	   625      "00010000" // /* MW 7 */
	   626      "11111101" // /* MW 6 */
	   627      "11001011" // /* MW 5 */
	   628      "11000000" // /* MW 4 */
	   629      "00111111" // /* MW 3 */
	   630      "00000000" // /* MW 2 */
	   631      "00000000" // /* MW 1 */
	   632      "00110111" // 	NOP;                                    ST r2, [p0], #4;              MUL r0, r0, r11 /* MW 8 */
	   633      "01000100" // /* MW 7 */
	   634      "11100101" // /* MW 6 */
	   635      "00000010" // /* MW 5 */
	   636      "11011000" // /* MW 4 */
	   637      "00011011" // /* MW 3 */
	   638      "00000000" // /* MW 2 */
	   639      "00000000" // /* MW 1 */
	   640      "00110111" // 	NOP;                                    ST r1, [p0], #4;              MUL r13, r13, r11 /* MW 8 */
	   641      "01000100" // /* MW 7 */
	   642      "11100011" // /* MW 6 */
	   643      "11101010" // /* MW 5 */
	   644      "11011110" // /* MW 4 */
	   645      "00011011" // /* MW 3 */
	   646      "00000000" // /* MW 2 */
	   647      "00000000" // /* MW 1 */
	   648      "00110111" // 	NOP;                                    ST r3, [p0], #4;              MUL r12, r12, r11 /* MW 8 */
	   649      "01000100" // /* MW 7 */
	   650      "11100111" // /* MW 6 */
	   651      "01100010" // /* MW 5 */
	   652      "11011110" // /* MW 4 */
	   653      "00011011" // /* MW 3 */
	   654      "00000000" // /* MW 2 */
	   655      "00000000" // /* MW 1 */
	   656      "00110111" // 	NOP;                                    ST r0, [p0], #4;              MUL r14, r14, r11 /* MW 8 */
	   657      "01000100" // /* MW 7 */
	   658      "11100001" // /* MW 6 */
	   659      "01110010" // /* MW 5 */
	   660      "11011111" // /* MW 4 */
	   661      "00011011" // /* MW 3 */
	   662      "00000000" // /* MW 2 */
	   663      "00000000" // /* MW 1 */
	   664      "00110111" // 	NOP;                                    ST r13, [p0], #4;             MUL r13, r11, r7 /* MW 8 */
	   665      "01000100" // /* MW 7 */
	   666      "11111011" // /* MW 6 */
	   667      "11101010" // /* MW 5 */
	   668      "10111101" // /* MW 4 */
	   669      "00011011" // /* MW 3 */
	   670      "00000000" // /* MW 2 */
	   671      "00000000" // /* MW 1 */
	   672      "00110111" // 	NOP;                                    ST r12, [p0], #4;             MUL r12, r5, r11 /* MW 8 */
	   673      "01000100" // /* MW 7 */
	   674      "11111001" // /* MW 6 */
	   675      "11100010" // /* MW 5 */
	   676      "11011010" // /* MW 4 */
	   677      "00011011" // /* MW 3 */
	   678      "00000000" // /* MW 2 */
	   679      "00000000" // /* MW 1 */
	   680      "00110111" // 	NOP;                                    ST r14, [p0], #4;             MUL r14, r9, r11 /* MW 8 */
	   681      "01000100" // /* MW 7 */
	   682      "11111101" // /* MW 6 */
	   683      "11110010" // /* MW 5 */
	   684      "11011100" // /* MW 4 */
	   685      "00011011" // /* MW 3 */
	   686      "00000000" // /* MW 2 */
	   687      "00000000" // /* MW 1 */
	   688      "00110111" // 	NOP;                                    ST r13, [p0], #4;             MUL r13, r8, r11 /* MW 8 */
	   689      "01000100" // /* MW 7 */
	   690      "11111011" // /* MW 6 */
	   691      "01101010" // /* MW 5 */
	   692      "11011100" // /* MW 4 */
	   693      "00011011" // /* MW 3 */
	   694      "00000000" // /* MW 2 */
	   695      "00000000" // /* MW 1 */
	   696      "00110111" // 	NOP;                                    ST r12, [p0], #4;             MUL r12, r11, r15 /* MW 8 */
	   697      "01000100" // /* MW 7 */
	   698      "11111001" // /* MW 6 */
	   699      "11100010" // /* MW 5 */
	   700      "11111101" // /* MW 4 */
	   701      "00011011" // /* MW 3 */
	   702      "00000000" // /* MW 2 */
	   703      "00000000" // /* MW 1 */
.no_stack_arguments
	   704      "11110111" // 	                                        NOP;                                                        JAL #1328;                    NOP /* MW 8 */
	   705      "00000111" // /* MW 7 */
	   706      "01010011" // /* MW 6 */
	   707      "00100000" // /* MW 5 */
	   708      "10100000" // /* MW 4 */
	   709      "00000000" // /* MW 3 */
	   710      "00000000" // /* MW 2 */
	   711      "10000000" // /* MW 1 */
.delay_slot
	   712      "00000011" // 	NOP;                                    ST r14, [p0], #4 /* MW 4 */
	   713      "01000000" // /* MW 3 */
	   714      "11010100" // /* MW 2 */
	   715      "10101111" // /* MW 1 */
.delay_slot
	   716      "00000011" // 	NOP;                                    ST r13, [p0], #4 /* MW 4 */
	   717      "01000000" // /* MW 3 */
	   718      "10110100" // /* MW 2 */
	   719      "10101111" // /* MW 1 */
.delay_slot
	   720      "00000011" // 	NOP;                                    ST r12, [p0], m0 /* MW 4 */
	   721      "00000000" // /* MW 3 */
	   722      "10010000" // /* MW 2 */
	   723      "10101111" // /* MW 1 */
.delay_slot
	   724      "10011111" // 	NOP;                NOP;                NOP;                          MOV.s12 r7, #0;               MOV.s8 r6, #16 /* MW 12 */
	   725      "00001101" // /* MW 11 */
	   726      "11110001" // /* MW 10 */
	   727      "00001101" // /* MW 9 */
	   728      "00000000" // /* MW 8 */
	   729      "00000001" // /* MW 7 */
	   730      "00000000" // /* MW 6 */
	   731      "00000000" // /* MW 5 */
	   732      "00000000" // /* MW 4 */
	   733      "00000000" // /* MW 3 */
	   734      "00000000" // /* MW 2 */
	   735      "00000000" // /* MW 1 */
.delay_slot
	   736      "00000000" // 	NOP;                NOP;                NOP;                          NOP;                          ST.SPIL p0, [sp, #-44];       NOP;                                    NOP /* MW 16 */
	   737      "00000000" // /* MW 15 */
	   738      "00000000" // /* MW 14 */
	   739      "00000000" // /* MW 13 */
	   740      "10000000" // /* MW 12 */
	   741      "01000100" // /* MW 11 */
	   742      "11111101" // /* MW 10 */
	   743      "10001111" // /* MW 9 */
	   744      "00001110" // /* MW 8 */
	   745      "00000000" // /* MW 7 */
	   746      "00000000" // /* MW 6 */
	   747      "00010000" // /* MW 5 */
	   748      "00000000" // /* MW 4 */
	   749      "00000000" // /* MW 3 */
	   750      "00000000" // /* MW 2 */
	   751      "00000000" // /* MW 1 */
.return_address
.no_stack_arguments
	   752      "11110111" // 	                                        NOP;                                                        JAL #1328;                    NOP /* MW 8 */
	   753      "00000111" // /* MW 7 */
	   754      "01010011" // /* MW 6 */
	   755      "00100000" // /* MW 5 */
	   756      "10100000" // /* MW 4 */
	   757      "00000000" // /* MW 3 */
	   758      "00000000" // /* MW 2 */
	   759      "10000000" // /* MW 1 */
.delay_slot
	   760      "01110111" // 	NOP;                                                                  MOV.s12 r6, #18;              MOV.s8 r7, #1 /* MW 8 */
	   761      "01101100" // /* MW 7 */
	   762      "00001001" // /* MW 6 */
	   763      "11001000" // /* MW 5 */
	   764      "00011101" // /* MW 4 */
	   765      "00110000" // /* MW 3 */
	   766      "00000000" // /* MW 2 */
	   767      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   768      "00000001" // 	NOP /* MW 2 */
	   769      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   770      "00000001" // 	NOP /* MW 2 */
	   771      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   772      "00000011" // 	NOP;                                                                  NOP /* MW 4 */
	   773      "00000000" // /* MW 3 */
	   774      "00000000" // /* MW 2 */
	   775      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   776      "00110111" // 	NOP;                                    NOP;                          NOP /* MW 8 */
	   777      "00000000" // /* MW 7 */
	   778      "00000000" // /* MW 6 */
	   779      "00000000" // /* MW 5 */
	   780      "00000000" // /* MW 4 */
	   781      "00000000" // /* MW 3 */
	   782      "00000000" // /* MW 2 */
	   783      "00000000" // /* MW 1 */
.return_address
.no_stack_arguments
	   784      "11110111" // 	                                        NOP;                                                        JAL #1312;                    NOP /* MW 8 */
	   785      "00000111" // /* MW 7 */
	   786      "01010010" // /* MW 6 */
	   787      "00100000" // /* MW 5 */
	   788      "10100000" // /* MW 4 */
	   789      "00000000" // /* MW 3 */
	   790      "00000000" // /* MW 2 */
	   791      "10000000" // /* MW 1 */
.delay_slot
	   792      "01110111" // 	NOP;                                                                  MOV.s12 r7, #1;               MOV.s8 r6, #17 /* MW 8 */
	   793      "11101110" // /* MW 7 */
	   794      "00000000" // /* MW 6 */
	   795      "10001000" // /* MW 5 */
	   796      "00011101" // /* MW 4 */
	   797      "00110001" // /* MW 3 */
	   798      "00000000" // /* MW 2 */
	   799      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   800      "00000001" // 	NOP /* MW 2 */
	   801      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   802      "00000001" // 	NOP /* MW 2 */
	   803      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   804      "00000011" // 	NOP;                                                                  NOP /* MW 4 */
	   805      "00000000" // /* MW 3 */
	   806      "00000000" // /* MW 2 */
	   807      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   808      "00110111" // 	NOP;                                    NOP;                          NOP /* MW 8 */
	   809      "00000000" // /* MW 7 */
	   810      "00000000" // /* MW 6 */
	   811      "00000000" // /* MW 5 */
	   812      "00000000" // /* MW 4 */
	   813      "00000000" // /* MW 3 */
	   814      "00000000" // /* MW 2 */
	   815      "00000000" // /* MW 1 */
.return_address
.no_stack_arguments
	   816      "11110111" // 	                                        NOP;                                                        JAL #1312;                    NOP /* MW 8 */
	   817      "00000111" // /* MW 7 */
	   818      "01010010" // /* MW 6 */
	   819      "00100000" // /* MW 5 */
	   820      "10100000" // /* MW 4 */
	   821      "00000000" // /* MW 3 */
	   822      "00000000" // /* MW 2 */
	   823      "10000000" // /* MW 1 */
.delay_slot
	   824      "01110111" // 	NOP;                                                                  MOV.s12 r6, #19;              MOV.s8 r7, #0 /* MW 8 */
	   825      "11101100" // /* MW 7 */
	   826      "00001001" // /* MW 6 */
	   827      "11001000" // /* MW 5 */
	   828      "00001101" // /* MW 4 */
	   829      "00110000" // /* MW 3 */
	   830      "00000000" // /* MW 2 */
	   831      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   832      "00000001" // 	NOP /* MW 2 */
	   833      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   834      "00000001" // 	NOP /* MW 2 */
	   835      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   836      "00000011" // 	NOP;                                                                  NOP /* MW 4 */
	   837      "00000000" // /* MW 3 */
	   838      "00000000" // /* MW 2 */
	   839      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   840      "00110111" // 	NOP;                                    NOP;                          NOP /* MW 8 */
	   841      "00000000" // /* MW 7 */
	   842      "00000000" // /* MW 6 */
	   843      "00000000" // /* MW 5 */
	   844      "00000000" // /* MW 4 */
	   845      "00000000" // /* MW 3 */
	   846      "00000000" // /* MW 2 */
	   847      "00000000" // /* MW 1 */
.return_address
	   848      "00000011" // 	NOP;                                                                  MOV.s12 m0, #-60 /* MW 4 */
	   849      "00000000" // /* MW 3 */
	   850      "00010010" // /* MW 2 */
	   851      "01111111" // /* MW 1 */
	   852      "00000001" // 	NOP /* MW 2 */
	   853      "00000000" // /* MW 1 */
	   854      "00000001" // 	NOP /* MW 2 */
	   855      "00000000" // /* MW 1 */
	   856      "00111111" // 	NOP;                LDB r13, [p7], #4;  NOP;                                                        LDA.SPIL p0, [sp, #-40];      NOP /* MW 12 */
	   857      "10110110" // /* MW 11 */
	   858      "00111111" // /* MW 10 */
	   859      "01111010" // /* MW 9 */
	   860      "00001100" // /* MW 8 */
	   861      "00000000" // /* MW 7 */
	   862      "00000000" // /* MW 6 */
	   863      "11110000" // /* MW 5 */
	   864      "11010001" // /* MW 4 */
	   865      "00111101" // /* MW 3 */
	   866      "00000000" // /* MW 2 */
	   867      "00000000" // /* MW 1 */
	   868      "00110111" // 	LDA r12, [p7], #4;                      NOP;                          NOP /* MW 8 */
	   869      "00000000" // /* MW 7 */
	   870      "00000000" // /* MW 6 */
	   871      "00000000" // /* MW 5 */
	   872      "00000000" // /* MW 4 */
	   873      "11000000" // /* MW 3 */
	   874      "10100011" // /* MW 2 */
	   875      "01111100" // /* MW 1 */
	   876      "00110111" // 	LDA r14, [p7], #4;                      NOP;                          NOP /* MW 8 */
	   877      "00000000" // /* MW 7 */
	   878      "00000000" // /* MW 6 */
	   879      "00000000" // /* MW 5 */
	   880      "00000000" // /* MW 4 */
	   881      "11000000" // /* MW 3 */
	   882      "10100011" // /* MW 2 */
	   883      "01111110" // /* MW 1 */
	   884      "00000011" // 	NOP;                LDB r8, [p7], #4 /* MW 4 */
	   885      "11111000" // /* MW 3 */
	   886      "10100011" // /* MW 2 */
	   887      "01110001" // /* MW 1 */
	   888      "00000011" // 	NOP;                LDB r9, [p7], #4 /* MW 4 */
	   889      "11111000" // /* MW 3 */
	   890      "10100011" // /* MW 2 */
	   891      "01110011" // /* MW 1 */
	   892      "00000011" // 	NOP;                LDB r15, [p7], #4 /* MW 4 */
	   893      "11111000" // /* MW 3 */
	   894      "10100011" // /* MW 2 */
	   895      "01111111" // /* MW 1 */
	   896      "00110111" // 	LDA r7, [p7], #4;                       NOP;                          NOP /* MW 8 */
	   897      "00000000" // /* MW 7 */
	   898      "00000000" // /* MW 6 */
	   899      "00000000" // /* MW 5 */
	   900      "00000000" // /* MW 4 */
	   901      "11000000" // /* MW 3 */
	   902      "10100011" // /* MW 2 */
	   903      "01110111" // /* MW 1 */
	   904      "00000011" // 	NOP;                LDB r6, [p7], #4 /* MW 4 */
	   905      "11111000" // /* MW 3 */
	   906      "10100011" // /* MW 2 */
	   907      "01101101" // /* MW 1 */
	   908      "00010111" // 	NOP;                LDB r5, [p7], #4;                                 MUL r13, r13, r11 /* MW 8 */
	   909      "10111010" // /* MW 7 */
	   910      "11110111" // /* MW 6 */
	   911      "11100110" // /* MW 5 */
	   912      "11010001" // /* MW 4 */
	   913      "00110101" // /* MW 3 */
	   914      "00000000" // /* MW 2 */
	   915      "00000000" // /* MW 1 */
	   916      "00010111" // 	NOP;                LDB r1, [p7], #4;                                 MUL r12, r12, r11 /* MW 8 */
	   917      "10011000" // /* MW 7 */
	   918      "11110111" // /* MW 6 */
	   919      "11100110" // /* MW 5 */
	   920      "11010001" // /* MW 4 */
	   921      "00110001" // /* MW 3 */
	   922      "00000000" // /* MW 2 */
	   923      "00000000" // /* MW 1 */
	   924      "00010111" // 	NOP;                LDB r14, [p7], #4;                                MUL r0, r14, r11 /* MW 8 */
	   925      "11000000" // /* MW 7 */
	   926      "11110111" // /* MW 6 */
	   927      "11100110" // /* MW 5 */
	   928      "11010001" // /* MW 4 */
	   929      "00111110" // /* MW 3 */
	   930      "00000000" // /* MW 2 */
	   931      "00000000" // /* MW 1 */
	   932      "00010111" // 	NOP;                LDB r13, [p7], #4;  ST r13, [p0], #4 /* MW 8 */
	   933      "10001000" // /* MW 7 */
	   934      "11110110" // /* MW 6 */
	   935      "11110101" // /* MW 5 */
	   936      "11010001" // /* MW 4 */
	   937      "00111101" // /* MW 3 */
	   938      "00000000" // /* MW 2 */
	   939      "00000000" // /* MW 1 */
	   940      "00011111" // 	NOP;                LDB r12, [p7], #4;  ST r12, [p0], #4;             MUL r8, r8, r11;              NOP /* MW 12 */
	   941      "00000000" // /* MW 11 */
	   942      "00000000" // /* MW 10 */
	   943      "11100010" // /* MW 9 */
	   944      "11011110" // /* MW 8 */
	   945      "00010000" // /* MW 7 */
	   946      "11100101" // /* MW 6 */
	   947      "11101011" // /* MW 5 */
	   948      "11010001" // /* MW 4 */
	   949      "00111100" // /* MW 3 */
	   950      "00000000" // /* MW 2 */
	   951      "00000000" // /* MW 1 */
	   952      "00011111" // 	NOP;                LDB r9, [p7], #4;   ST r0, [p0], #4;              MUL r0, r9, r11;              NOP /* MW 12 */
	   953      "00000000" // /* MW 11 */
	   954      "00000000" // /* MW 10 */
	   955      "11100100" // /* MW 9 */
	   956      "11011110" // /* MW 8 */
	   957      "00010000" // /* MW 7 */
	   958      "10000101" // /* MW 6 */
	   959      "11101011" // /* MW 5 */
	   960      "11010001" // /* MW 4 */
	   961      "00111001" // /* MW 3 */
	   962      "00000000" // /* MW 2 */
	   963      "00000000" // /* MW 1 */
	   964      "00010111" // 	NOP;                LDB r15, [p7], #4;                                MUL r3, r11, r15 /* MW 8 */
	   965      "01100110" // /* MW 7 */
	   966      "11111111" // /* MW 6 */
	   967      "11100110" // /* MW 5 */
	   968      "11010001" // /* MW 4 */
	   969      "00111111" // /* MW 3 */
	   970      "00000000" // /* MW 2 */
	   971      "00000000" // /* MW 1 */
	   972      "00011111" // 	NOP;                LDB r8, [p7], m0;   ST r8, [p0], #4;              MUL r7, r11, r7;              NOP /* MW 12 */
	   973      "00000000" // /* MW 11 */
	   974      "11000000" // /* MW 10 */
	   975      "11101101" // /* MW 9 */
	   976      "11011101" // /* MW 8 */
	   977      "00010000" // /* MW 7 */
	   978      "11000101" // /* MW 6 */
	   979      "11101011" // /* MW 5 */
	   980      "11000000" // /* MW 4 */
	   981      "00111000" // /* MW 3 */
	   982      "00000000" // /* MW 2 */
	   983      "00000000" // /* MW 1 */
	   984      "00110111" // 	NOP;                                    ST r0, [p0], #4;              MUL r0, r6, r11 /* MW 8 */
	   985      "01000100" // /* MW 7 */
	   986      "11100001" // /* MW 6 */
	   987      "00000010" // /* MW 5 */
	   988      "11011011" // /* MW 4 */
	   989      "00011011" // /* MW 3 */
	   990      "00000000" // /* MW 2 */
	   991      "00000000" // /* MW 1 */
	   992      "00110111" // 	NOP;                                    ST r3, [p0], #4;              MUL r5, r5, r11 /* MW 8 */
	   993      "01000100" // /* MW 7 */
	   994      "11100111" // /* MW 6 */
	   995      "10101010" // /* MW 5 */
	   996      "11011010" // /* MW 4 */
	   997      "00011011" // /* MW 3 */
	   998      "00000000" // /* MW 2 */
	   999      "00000000" // /* MW 1 */
	  1000      "00110111" // 	NOP;                                    ST r7, [p0], #4;              MUL r7, r1, r11 /* MW 8 */
	  1001      "01000100" // /* MW 7 */
	  1002      "11101111" // /* MW 6 */
	  1003      "10111010" // /* MW 5 */
	  1004      "11011000" // /* MW 4 */
	  1005      "00011011" // /* MW 3 */
	  1006      "00000000" // /* MW 2 */
	  1007      "00000000" // /* MW 1 */
	  1008      "00110111" // 	NOP;                                    ST r0, [p0], #4;              MUL r14, r14, r11 /* MW 8 */
	  1009      "01000100" // /* MW 7 */
	  1010      "11100001" // /* MW 6 */
	  1011      "01110010" // /* MW 5 */
	  1012      "11011111" // /* MW 4 */
	  1013      "00011011" // /* MW 3 */
	  1014      "00000000" // /* MW 2 */
	  1015      "00000000" // /* MW 1 */
	  1016      "00110111" // 	NOP;                                    ST r5, [p0], #4;              MUL r13, r13, r11 /* MW 8 */
	  1017      "01000100" // /* MW 7 */
	  1018      "11101011" // /* MW 6 */
	  1019      "11101010" // /* MW 5 */
	  1020      "11011110" // /* MW 4 */
	  1021      "00011011" // /* MW 3 */
	  1022      "00000000" // /* MW 2 */
	  1023      "00000000" // /* MW 1 */
	  1024      "00110111" // 	NOP;                                    ST r7, [p0], #4;              MUL r12, r12, r11 /* MW 8 */
	  1025      "01000100" // /* MW 7 */
	  1026      "11101111" // /* MW 6 */
	  1027      "01100010" // /* MW 5 */
	  1028      "11011110" // /* MW 4 */
	  1029      "00011011" // /* MW 3 */
	  1030      "00000000" // /* MW 2 */
	  1031      "00000000" // /* MW 1 */
	  1032      "00110111" // 	NOP;                                    ST r14, [p0], #4;             MUL r14, r9, r11 /* MW 8 */
	  1033      "01000100" // /* MW 7 */
	  1034      "11111101" // /* MW 6 */
	  1035      "11110010" // /* MW 5 */
	  1036      "11011100" // /* MW 4 */
	  1037      "00011011" // /* MW 3 */
	  1038      "00000000" // /* MW 2 */
	  1039      "00000000" // /* MW 1 */
	  1040      "00110111" // 	NOP;                                    ST r13, [p0], #4;             MUL r13, r11, r15 /* MW 8 */
	  1041      "01000100" // /* MW 7 */
	  1042      "11111011" // /* MW 6 */
	  1043      "11101010" // /* MW 5 */
	  1044      "11111101" // /* MW 4 */
	  1045      "00011011" // /* MW 3 */
	  1046      "00000000" // /* MW 2 */
	  1047      "00000000" // /* MW 1 */
	  1048      "00110111" // 	NOP;                                    ST r12, [p0], #4;             MUL r12, r8, r11 /* MW 8 */
	  1049      "01000100" // /* MW 7 */
	  1050      "11111001" // /* MW 6 */
	  1051      "01100010" // /* MW 5 */
	  1052      "11011100" // /* MW 4 */
	  1053      "00011011" // /* MW 3 */
	  1054      "00000000" // /* MW 2 */
	  1055      "00000000" // /* MW 1 */
.no_stack_arguments
	  1056      "11110111" // 	                                        NOP;                                                        JAL #1328;                    NOP /* MW 8 */
	  1057      "00000111" // /* MW 7 */
	  1058      "01010011" // /* MW 6 */
	  1059      "00100000" // /* MW 5 */
	  1060      "10100000" // /* MW 4 */
	  1061      "00000000" // /* MW 3 */
	  1062      "00000000" // /* MW 2 */
	  1063      "10000000" // /* MW 1 */
.delay_slot
	  1064      "00000011" // 	NOP;                                    ST r14, [p0], #4 /* MW 4 */
	  1065      "01000000" // /* MW 3 */
	  1066      "11010100" // /* MW 2 */
	  1067      "10101111" // /* MW 1 */
.delay_slot
	  1068      "00000011" // 	NOP;                                    ST r13, [p0], #4 /* MW 4 */
	  1069      "01000000" // /* MW 3 */
	  1070      "10110100" // /* MW 2 */
	  1071      "10101111" // /* MW 1 */
.delay_slot
	  1072      "00000011" // 	NOP;                                    ST r12, [p0], m0 /* MW 4 */
	  1073      "00000000" // /* MW 3 */
	  1074      "10010000" // /* MW 2 */
	  1075      "10101111" // /* MW 1 */
.delay_slot
	  1076      "10011111" // 	NOP;                NOP;                NOP;                          MOV.s12 r7, #0;               MOV.s8 r6, #17 /* MW 12 */
	  1077      "00011101" // /* MW 11 */
	  1078      "11110001" // /* MW 10 */
	  1079      "00001101" // /* MW 9 */
	  1080      "00000000" // /* MW 8 */
	  1081      "00000001" // /* MW 7 */
	  1082      "00000000" // /* MW 6 */
	  1083      "00000000" // /* MW 5 */
	  1084      "00000000" // /* MW 4 */
	  1085      "00000000" // /* MW 3 */
	  1086      "00000000" // /* MW 2 */
	  1087      "00000000" // /* MW 1 */
.delay_slot
	  1088      "00000000" // 	NOP;                NOP;                NOP;                          NOP;                          ST.SPIL p0, [sp, #-40];       NOP;                                    NOP /* MW 16 */
	  1089      "00000000" // /* MW 15 */
	  1090      "00000000" // /* MW 14 */
	  1091      "00000000" // /* MW 13 */
	  1092      "10000000" // /* MW 12 */
	  1093      "10000100" // /* MW 11 */
	  1094      "11111101" // /* MW 10 */
	  1095      "10001111" // /* MW 9 */
	  1096      "00001110" // /* MW 8 */
	  1097      "00000000" // /* MW 7 */
	  1098      "00000000" // /* MW 6 */
	  1099      "00010000" // /* MW 5 */
	  1100      "00000000" // /* MW 4 */
	  1101      "00000000" // /* MW 3 */
	  1102      "00000000" // /* MW 2 */
	  1103      "00000000" // /* MW 1 */
.return_address
.no_stack_arguments
	  1104      "11110111" // 	                                        NOP;                                                        JAL #1328;                    NOP /* MW 8 */
	  1105      "00000111" // /* MW 7 */
	  1106      "01010011" // /* MW 6 */
	  1107      "00100000" // /* MW 5 */
	  1108      "10100000" // /* MW 4 */
	  1109      "00000000" // /* MW 3 */
	  1110      "00000000" // /* MW 2 */
	  1111      "10000000" // /* MW 1 */
.delay_slot
	  1112      "01110111" // 	NOP;                                                                  MOV.s12 r7, #1;               MOV.s8 r6, #19 /* MW 8 */
	  1113      "11101110" // /* MW 7 */
	  1114      "00000000" // /* MW 6 */
	  1115      "10001000" // /* MW 5 */
	  1116      "00111101" // /* MW 4 */
	  1117      "00110001" // /* MW 3 */
	  1118      "00000000" // /* MW 2 */
	  1119      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1120      "00000001" // 	NOP /* MW 2 */
	  1121      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1122      "00000001" // 	NOP /* MW 2 */
	  1123      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1124      "00000011" // 	NOP;                                                                  NOP /* MW 4 */
	  1125      "00000000" // /* MW 3 */
	  1126      "00000000" // /* MW 2 */
	  1127      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1128      "00110111" // 	NOP;                                    NOP;                          NOP /* MW 8 */
	  1129      "00000000" // /* MW 7 */
	  1130      "00000000" // /* MW 6 */
	  1131      "00000000" // /* MW 5 */
	  1132      "00000000" // /* MW 4 */
	  1133      "00000000" // /* MW 3 */
	  1134      "00000000" // /* MW 2 */
	  1135      "00000000" // /* MW 1 */
.return_address
	  1136      "11110111" // 	                                        NOP;                                                        MOV.u20 cb0, #432;            NOP /* MW 8 */
	  1137      "00000111" // /* MW 7 */
	  1138      "00011011" // /* MW 6 */
	  1139      "01000000" // /* MW 5 */
	  1140      "01000000" // /* MW 4 */
	  1141      "00000000" // /* MW 3 */
	  1142      "00000000" // /* MW 2 */
	  1143      "10000000" // /* MW 1 */
	  1144      "00000011" // 	NOP;                                                                  BDEC r10, r10, cb0 /* MW 4 */
	  1145      "10100000" // /* MW 3 */
	  1146      "10001010" // /* MW 2 */
	  1147      "00000011" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1148      "00000001" // 	NOP /* MW 2 */
	  1149      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1150      "00000001" // 	NOP /* MW 2 */
	  1151      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1152      "00000001" // 	NOP /* MW 2 */
	  1153      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1154      "00000001" // 	NOP /* MW 2 */
	  1155      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1156      "00000001" // 	NOP /* MW 2 */
	  1157      "00000000" // /* MW 1 */
.loop_nesting 1
	  1158      "01110111" // 	LDA r15, [sp, #-32];                                                  MOV.s12 r14, #0;              MOV.s8 r12, #-1 /* MW 8 */
	  1159      "01111100" // /* MW 7 */
	  1160      "00000000" // /* MW 6 */
	  1161      "00001000" // /* MW 5 */
	  1162      "11111111" // /* MW 4 */
	  1163      "00111111" // /* MW 3 */
	  1164      "11111110" // /* MW 2 */
	  1165      "01111111" // /* MW 1 */
	  1166      "00000011" // 	NOP;                LDB r8, [sp, #-36] /* MW 4 */
	  1167      "11111000" // /* MW 3 */
	  1168      "11111101" // /* MW 2 */
	  1169      "01110001" // /* MW 1 */
	  1170      "00000011" // 	NOP;                LDB r10, [sp, #-4] /* MW 4 */
	  1171      "11111000" // /* MW 3 */
	  1172      "11111111" // /* MW 2 */
	  1173      "01110101" // /* MW 1 */
	  1174      "00000001" // 	NOP /* MW 2 */
	  1175      "00000000" // /* MW 1 */
	  1176      "00000001" // 	NOP /* MW 2 */
	  1177      "00000000" // /* MW 1 */
	  1178      "00000001" // 	NOP /* MW 2 */
	  1179      "00000000" // /* MW 1 */
	  1180      "00000001" // 	NOP /* MW 2 */
	  1181      "00000000" // /* MW 1 */
	  1182      "00000001" // 	NOP /* MW 2 */
	  1183      "00000000" // /* MW 1 */
	  1184      "00000011" // 	NOP;                                                                  ADD r15, r15, #1 /* MW 4 */
	  1185      "11110000" // /* MW 3 */
	  1186      "00011111" // /* MW 2 */
	  1187      "00100000" // /* MW 1 */
	  1188      "00000011" // 	NOP;                                                                  ADC r14, r8, r14 /* MW 4 */
	  1189      "11100000" // /* MW 3 */
	  1190      "11101000" // /* MW 2 */
	  1191      "00110010" // /* MW 1 */
	  1192      "10110111" // 	NOP;                                    ST r14, [sp, #-36];           NE r14, r10, r14 /* MW 8 */
	  1193      "11111011" // /* MW 7 */
	  1194      "11111101" // /* MW 6 */
	  1195      "01110010" // /* MW 5 */
	  1196      "11110101" // /* MW 4 */
	  1197      "00011100" // /* MW 3 */
	  1198      "00000000" // /* MW 2 */
	  1199      "00000000" // /* MW 1 */
	  1200      "00000011" // 	NOP;                                                                  NE r12, r12, r15 /* MW 4 */
	  1201      "11000000" // /* MW 3 */
	  1202      "11111100" // /* MW 2 */
	  1203      "00111001" // /* MW 1 */
	  1204      "00000011" // 	NOP;                                                                  OR r12, r12, r14 /* MW 4 */
	  1205      "11000000" // /* MW 3 */
	  1206      "11101100" // /* MW 2 */
	  1207      "00110101" // /* MW 1 */
	  1208      "11110111" // 	                                        NOP;                                                        BNEZ r12,#400;                NOP /* MW 8 */
	  1209      "00000111" // /* MW 7 */
	  1210      "00011001" // /* MW 6 */
	  1211      "10000000" // /* MW 5 */
	  1212      "10010001" // /* MW 4 */
	  1213      "00000000" // /* MW 3 */
	  1214      "00000000" // /* MW 2 */
	  1215      "10000000" // /* MW 1 */
.delay_slot
	  1216      "11110111" // 	                                        NOP;                                                        MOV.u20 cl0, #164864;         NOP /* MW 8 */
	  1217      "00000111" // /* MW 7 */
	  1218      "01000000" // /* MW 6 */
	  1219      "00100000" // /* MW 5 */
	  1220      "01001010" // /* MW 4 */
	  1221      "00000000" // /* MW 3 */
	  1222      "00000000" // /* MW 2 */
	  1223      "10000000" // /* MW 1 */
.delay_slot
	  1224      "11110111" // 	                                        ST r15, [sp, #-32];                                         MOV.u20 r13, #164928;         NOP /* MW 8 */
	  1225      "00000111" // /* MW 7 */
	  1226      "01000100" // /* MW 6 */
	  1227      "11110100" // /* MW 5 */
	  1228      "01001010" // /* MW 4 */
	  1229      "11000000" // /* MW 3 */
	  1230      "11111111" // /* MW 2 */
	  1231      "10101111" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1232      "00000001" // 	NOP /* MW 2 */
	  1233      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1234      "00000001" // 	NOP /* MW 2 */
	  1235      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1236      "00000001" // 	NOP /* MW 2 */
	  1237      "00000000" // /* MW 1 */
.loop_nesting 0
	  1238      "00000011" // 	NOP;                LDB lr, [sp, #-28] /* MW 4 */
	  1239      "01111000" // /* MW 3 */
	  1240      "11111110" // /* MW 2 */
	  1241      "01011000" // /* MW 1 */
	  1242      "11110111" // 	                                        NOP;                                                        LDA.SPIL r10, [sp, #-20];     NOP /* MW 8 */
	  1243      "11100111" // /* MW 7 */
	  1244      "11111101" // /* MW 6 */
	  1245      "11101011" // /* MW 5 */
	  1246      "11000111" // /* MW 4 */
	  1247      "00000000" // /* MW 3 */
	  1248      "00000000" // /* MW 2 */
	  1249      "10000000" // /* MW 1 */
	  1250      "11110111" // 	                                        NOP;                                                        LDA.SPIL r11, [sp, #-24];     NOP /* MW 8 */
	  1251      "01100111" // /* MW 7 */
	  1252      "11111101" // /* MW 6 */
	  1253      "11101111" // /* MW 5 */
	  1254      "11000111" // /* MW 4 */
	  1255      "00000000" // /* MW 3 */
	  1256      "00000000" // /* MW 2 */
	  1257      "10000000" // /* MW 1 */
	  1258      "11110111" // 	                                        NOP;                                                        LDA.SPIL r4, [sp, #-8];       NOP /* MW 8 */
	  1259      "01100111" // /* MW 7 */
	  1260      "11111111" // /* MW 6 */
	  1261      "11010011" // /* MW 5 */
	  1262      "11000111" // /* MW 4 */
	  1263      "00000000" // /* MW 3 */
	  1264      "00000000" // /* MW 2 */
	  1265      "10000000" // /* MW 1 */
	  1266      "11110111" // 	                                        NOP;                                                        LDA.SPIL p6, [sp, #-12];      NOP /* MW 8 */
	  1267      "11100111" // /* MW 7 */
	  1268      "11111110" // /* MW 6 */
	  1269      "10111011" // /* MW 5 */
	  1270      "11000111" // /* MW 4 */
	  1271      "00000000" // /* MW 3 */
	  1272      "00000000" // /* MW 2 */
	  1273      "10000000" // /* MW 1 */
	  1274      "11110111" // 	                                        NOP;                                                        LDA.SPIL p7, [sp, #-16];      NOP /* MW 8 */
	  1275      "01100111" // /* MW 7 */
	  1276      "11111110" // /* MW 6 */
	  1277      "10111111" // /* MW 5 */
	  1278      "11000111" // /* MW 4 */
	  1279      "00000000" // /* MW 3 */
	  1280      "00000000" // /* MW 2 */
	  1281      "10000000" // /* MW 1 */
	  1282      "00000001" // 	NOP /* MW 2 */
	  1283      "00000000" // /* MW 1 */
	  1284      "00000001" // 	NOP /* MW 2 */
	  1285      "00000000" // /* MW 1 */
	  1286      "00000001" // 	RET lr /* MW 2 */
	  1287      "00000001" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1288      "00000001" // 	NOP /* MW 2 */
	  1289      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1290      "00000001" // 	NOP /* MW 2 */
	  1291      "00000000" // /* MW 1 */
.delay_slot
	  1292      "00000011" // 	NOP;                                                                  MOV.s12 m0, #-64 /* MW 4 */
	  1293      "00000000" // /* MW 3 */
	  1294      "00000010" // /* MW 2 */
	  1295      "01111111" // /* MW 1 */
.delay_slot
	  1296      "00110111" // 	PADDA [sp], m0;                         NOP;                          NOP /* MW 8 */
	  1297      "00000000" // /* MW 7 */
	  1298      "00000000" // /* MW 6 */
	  1299      "00000000" // /* MW 5 */
	  1300      "00000000" // /* MW 4 */
	  1301      "00000000" // /* MW 3 */
	  1302      "10010000" // /* MW 2 */
	  1303      "00001000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1304      "00000001" // 	NOP /* MW 2 */
.label core_6_2__end
	  1305      "00000000" // /* MW 1 */
.label llvm___aie___lock___acquire___reg
.function_start
	  1312      "00000011" // 	NOP;                                                                  ACQ r6, #1, r7 /* MW 4 */
	  1313      "00110000" // /* MW 3 */
	  1314      "01110110" // /* MW 2 */
	  1315      "00010100" // /* MW 1 */
	  1316      "00000001" // 	RET lr /* MW 2 */
	  1317      "00000001" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1318      "00000001" // 	NOP /* MW 2 */
	  1319      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1320      "00000001" // 	NOP /* MW 2 */
	  1321      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1322      "00000001" // 	NOP /* MW 2 */
	  1323      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1324      "00000001" // 	NOP /* MW 2 */
	  1325      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1326      "00000001" // 	NOP /* MW 2 */
.label llvm___aie___lock___acquire___reg__end
	  1327      "00000000" // /* MW 1 */
.label llvm___aie___lock___release___reg
.function_start
	  1328      "00000001" // 	NOP /* MW 2 */
	  1329      "00000000" // /* MW 1 */
	  1330      "00000001" // 	NOP /* MW 2 */
	  1331      "00000000" // /* MW 1 */
	  1332      "00000001" // 	NOP /* MW 2 */
	  1333      "00000000" // /* MW 1 */
	  1334      "00000001" // 	NOP /* MW 2 */
	  1335      "00000000" // /* MW 1 */
	  1336      "00000001" // 	NOP /* MW 2 */
	  1337      "00000000" // /* MW 1 */
	  1338      "00000001" // 	NOP /* MW 2 */
	  1339      "00000000" // /* MW 1 */
	  1340      "00000011" // 	NOP;                                                                  REL r6, #1, r7 /* MW 4 */
	  1341      "00110000" // /* MW 3 */
	  1342      "01110110" // /* MW 2 */
	  1343      "00010110" // /* MW 1 */
	  1344      "00000001" // 	RET lr /* MW 2 */
	  1345      "00000001" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1346      "00000001" // 	NOP /* MW 2 */
	  1347      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1348      "00000001" // 	NOP /* MW 2 */
	  1349      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1350      "00000001" // 	NOP /* MW 2 */
	  1351      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1352      "00000001" // 	NOP /* MW 2 */
	  1353      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1354      "00000001" // 	NOP /* MW 2 */
.label llvm___aie___lock___release___reg__end
	  1355      "00000000" // /* MW 1 */
.label _fini
.function_start
	  1360      "01110111" // 	NOP;                                                                  MOV.s12 m0, #32;              MOV r0, r4 /* MW 8 */
	  1361      "01000000" // /* MW 7 */
	  1362      "00010000" // /* MW 6 */
	  1363      "00001000" // /* MW 5 */
	  1364      "01001100" // /* MW 4 */
	  1365      "00000111" // /* MW 3 */
	  1366      "00000000" // /* MW 2 */
	  1367      "00000000" // /* MW 1 */
	  1368      "00111111" // 	PADDA [sp], m0;     NOP;                NOP;                                                        MOV.u20 r4, #0;               NOP /* MW 12 */
	  1369      "00000000" // /* MW 11 */
	  1370      "00000000" // /* MW 10 */
	  1371      "00001101" // /* MW 9 */
	  1372      "00000100" // /* MW 8 */
	  1373      "00000000" // /* MW 7 */
	  1374      "00000000" // /* MW 6 */
	  1375      "00010000" // /* MW 5 */
	  1376      "00000000" // /* MW 4 */
	  1377      "00000000" // /* MW 3 */
	  1378      "10010000" // /* MW 2 */
	  1379      "00001000" // /* MW 1 */
	  1380      "11110111" // 	                                        NOP;                                                        MOV.u20 r12, #0;              NOP /* MW 8 */
	  1381      "00000111" // /* MW 7 */
	  1382      "00000000" // /* MW 6 */
	  1383      "11110000" // /* MW 5 */
	  1384      "01000000" // /* MW 4 */
	  1385      "00000000" // /* MW 3 */
	  1386      "00000000" // /* MW 2 */
	  1387      "10000000" // /* MW 1 */
	  1388      "00000011" // 	NOP;                                                                  EQ r12, r4, r12 /* MW 4 */
	  1389      "11000000" // /* MW 3 */
	  1390      "11000100" // /* MW 2 */
	  1391      "00111000" // /* MW 1 */
	  1392      "11110111" // 	                                        NOP;                                                        BNEZ r12,#1520;               NOP /* MW 8 */
	  1393      "00000111" // /* MW 7 */
	  1394      "01011111" // /* MW 6 */
	  1395      "10000000" // /* MW 5 */
	  1396      "10010001" // /* MW 4 */
	  1397      "00000000" // /* MW 3 */
	  1398      "00000000" // /* MW 2 */
	  1399      "10000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1400      "00000011" // 	NOP;                                                                  NOP /* MW 4 */
	  1401      "00000000" // /* MW 3 */
	  1402      "00000000" // /* MW 2 */
	  1403      "00000000" // /* MW 1 */
.delay_slot
	  1404      "11110111" // 	                                        NOP;                                                        ST.SPIL r11, [sp, #-4];       NOP /* MW 8 */
	  1405      "01000111" // /* MW 7 */
	  1406      "11111100" // /* MW 6 */
	  1407      "11111111" // /* MW 5 */
	  1408      "11111011" // /* MW 4 */
	  1409      "00000000" // /* MW 3 */
	  1410      "00000000" // /* MW 2 */
	  1411      "10000000" // /* MW 1 */
.delay_slot
	  1412      "11110111" // 	                                        NOP;                                                        ST.SPIL lr, [sp, #-16];       NOP /* MW 8 */
	  1413      "01000111" // /* MW 7 */
	  1414      "11110000" // /* MW 6 */
	  1415      "11111111" // /* MW 5 */
	  1416      "11001000" // /* MW 4 */
	  1417      "00000000" // /* MW 3 */
	  1418      "00000000" // /* MW 2 */
	  1419      "10000000" // /* MW 1 */
.delay_slot
	  1420      "11110111" // 	                                        ST r0, [sp, #-12];            NOP;                          MOV p0, p7 /* MW 8 */
	  1421      "11010000" // /* MW 7 */
	  1422      "00110111" // /* MW 6 */
	  1423      "00000000" // /* MW 5 */
	  1424      "00000000" // /* MW 4 */
	  1425      "11010000" // /* MW 3 */
	  1426      "00111111" // /* MW 2 */
	  1427      "01011100" // /* MW 1 */
.delay_slot
	  1428      "00111111" // 	NOP;                NOP;                ST p0, [sp, #-8];                                           MOV.u20 p7, #0;               NOP /* MW 12 */
	  1429      "00000000" // /* MW 11 */
	  1430      "11000000" // /* MW 10 */
	  1431      "00001011" // /* MW 9 */
	  1432      "00000100" // /* MW 8 */
	  1433      "11111110" // /* MW 7 */
	  1434      "10100011" // /* MW 6 */
	  1435      "00010101" // /* MW 5 */
	  1436      "00000000" // /* MW 4 */
	  1437      "00000000" // /* MW 3 */
	  1438      "00000000" // /* MW 2 */
	  1439      "00000000" // /* MW 1 */
.label TGT_F_fini_80
.loop_nesting 1
	  1440      "00110111" // 	LDA cb0, [p7], #4;                      NOP;                          NOP /* MW 8 */
	  1441      "00000000" // /* MW 7 */
	  1442      "00000000" // /* MW 6 */
	  1443      "00000000" // /* MW 5 */
	  1444      "00000000" // /* MW 4 */
	  1445      "11000000" // /* MW 3 */
	  1446      "10100011" // /* MW 2 */
	  1447      "01000000" // /* MW 1 */
	  1448      "00000001" // 	NOP /* MW 2 */
	  1449      "00000000" // /* MW 1 */
	  1450      "00000001" // 	NOP /* MW 2 */
	  1451      "00000000" // /* MW 1 */
	  1452      "00000001" // 	NOP /* MW 2 */
	  1453      "00000000" // /* MW 1 */
	  1454      "00000001" // 	NOP /* MW 2 */
	  1455      "00000000" // /* MW 1 */
	  1456      "00000001" // 	NOP /* MW 2 */
	  1457      "00000000" // /* MW 1 */
	  1458      "00000001" // 	NOP /* MW 2 */
	  1459      "00000000" // /* MW 1 */
	  1460      "00000001" // 	NOP /* MW 2 */
	  1461      "00000000" // /* MW 1 */
.no_stack_arguments
	  1462      "01000001" // 	JAL cb0 /* MW 2 */
	  1463      "00000000" // /* MW 1 */
.delay_slot
	  1464      "10110101" // 	MOV r11, p7 /* MW 2 */
	  1465      "10111111" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1466      "00000001" // 	NOP /* MW 2 */
	  1467      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1468      "00000001" // 	NOP /* MW 2 */
	  1469      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1470      "00000001" // 	NOP /* MW 2 */
	  1471      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1472      "00000010" // 	NOP;                NOP;                NOP;                          NOP;                          NOP;                          NOP;                                    NOP /* MW 16 */
	  1473      "00000000" // /* MW 15 */
	  1474      "00000000" // /* MW 14 */
	  1475      "00000000" // /* MW 13 */
	  1476      "00000000" // /* MW 12 */
	  1477      "00000000" // /* MW 11 */
	  1478      "00000000" // /* MW 10 */
	  1479      "00000000" // /* MW 9 */
	  1480      "00000000" // /* MW 8 */
	  1481      "00000000" // /* MW 7 */
	  1482      "00000000" // /* MW 6 */
	  1483      "00000000" // /* MW 5 */
	  1484      "00000000" // /* MW 4 */
	  1485      "00000000" // /* MW 3 */
	  1486      "00000000" // /* MW 2 */
	  1487      "00000000" // /* MW 1 */
.return_address
	  1488      "00000011" // 	NOP;                                                                  NE r12, r4, r11 /* MW 4 */
	  1489      "11000000" // /* MW 3 */
	  1490      "10110100" // /* MW 2 */
	  1491      "00111001" // /* MW 1 */
	  1492      "11110111" // 	                                        NOP;                                                        BNEZ r12,#1440;               NOP /* MW 8 */
	  1493      "00000111" // /* MW 7 */
	  1494      "01011010" // /* MW 6 */
	  1495      "10000000" // /* MW 5 */
	  1496      "10010001" // /* MW 4 */
	  1497      "00000000" // /* MW 3 */
	  1498      "00000000" // /* MW 2 */
	  1499      "10000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1500      "00000001" // 	NOP /* MW 2 */
	  1501      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1502      "00000001" // 	NOP /* MW 2 */
	  1503      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1504      "00000001" // 	NOP /* MW 2 */
	  1505      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1506      "00000001" // 	NOP /* MW 2 */
	  1507      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1508      "00011111" // 	NOP;                NOP;                NOP;                          NOP;                          NOP /* MW 12 */
	  1509      "00000000" // /* MW 11 */
	  1510      "00000000" // /* MW 10 */
	  1511      "00000000" // /* MW 9 */
	  1512      "00000000" // /* MW 8 */
	  1513      "00000000" // /* MW 7 */
	  1514      "00000000" // /* MW 6 */
	  1515      "00000000" // /* MW 5 */
	  1516      "00000000" // /* MW 4 */
	  1517      "00000000" // /* MW 3 */
	  1518      "00000000" // /* MW 2 */
	  1519      "00000000" // /* MW 1 */
.label TGT_F_fini_160
.loop_nesting 0
	  1520      "00000011" // 	NOP;                LDB lr, [sp, #-16] /* MW 4 */
	  1521      "00111000" // /* MW 3 */
	  1522      "11111111" // /* MW 2 */
	  1523      "01011000" // /* MW 1 */
	  1524      "11110111" // 	                                        NOP;                                                        LDA.SPIL r4, [sp, #-12];      NOP /* MW 8 */
	  1525      "11100111" // /* MW 7 */
	  1526      "11111110" // /* MW 6 */
	  1527      "11010011" // /* MW 5 */
	  1528      "11000111" // /* MW 4 */
	  1529      "00000000" // /* MW 3 */
	  1530      "00000000" // /* MW 2 */
	  1531      "10000000" // /* MW 1 */
	  1532      "11110111" // 	                                        NOP;                                                        LDA.SPIL r11, [sp, #-4];      NOP /* MW 8 */
	  1533      "11100111" // /* MW 7 */
	  1534      "11111111" // /* MW 6 */
	  1535      "11101111" // /* MW 5 */
	  1536      "11000111" // /* MW 4 */
	  1537      "00000000" // /* MW 3 */
	  1538      "00000000" // /* MW 2 */
	  1539      "10000000" // /* MW 1 */
	  1540      "11110111" // 	                                        NOP;                                                        LDA.SPIL p7, [sp, #-8];       NOP /* MW 8 */
	  1541      "01100111" // /* MW 7 */
	  1542      "11111111" // /* MW 6 */
	  1543      "10111111" // /* MW 5 */
	  1544      "11000111" // /* MW 4 */
	  1545      "00000000" // /* MW 3 */
	  1546      "00000000" // /* MW 2 */
	  1547      "10000000" // /* MW 1 */
	  1548      "00000001" // 	NOP /* MW 2 */
	  1549      "00000000" // /* MW 1 */
	  1550      "00000001" // 	NOP /* MW 2 */
	  1551      "00000000" // /* MW 1 */
	  1552      "00000001" // 	NOP /* MW 2 */
	  1553      "00000000" // /* MW 1 */
	  1554      "00000001" // 	NOP /* MW 2 */
	  1555      "00000000" // /* MW 1 */
	  1556      "00000001" // 	RET lr /* MW 2 */
	  1557      "00000001" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1558      "00000001" // 	NOP /* MW 2 */
	  1559      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1560      "00000001" // 	NOP /* MW 2 */
	  1561      "00000000" // /* MW 1 */
.delay_slot
	  1562      "00000011" // 	NOP;                                                                  MOV.s12 m0, #-32 /* MW 4 */
	  1563      "00000000" // /* MW 3 */
	  1564      "10000010" // /* MW 2 */
	  1565      "01111111" // /* MW 1 */
.delay_slot
	  1566      "00110111" // 	PADDA [sp], m0;                         NOP;                          NOP /* MW 8 */
	  1567      "00000000" // /* MW 7 */
	  1568      "00000000" // /* MW 6 */
	  1569      "00000000" // /* MW 5 */
	  1570      "00000000" // /* MW 4 */
	  1571      "00000000" // /* MW 3 */
	  1572      "10010000" // /* MW 2 */
	  1573      "00001000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1574      "00000001" // 	NOP /* MW 2 */
.label _fini__end
	  1575      "00000000" // /* MW 1 */
.label __cxa_finalize
.function_start
	  1584      "00111111" // 	NOP;                MOV.s9 r8, #-3;                                   MOV.s12 r12, #8;              MOV.u20 p0, #165152;          NOP /* MW 12 */
	  1585      "00100000" // /* MW 11 */
	  1586      "00000101" // /* MW 10 */
	  1587      "10101010" // /* MW 9 */
	  1588      "00000100" // /* MW 8 */
	  1589      "01111000" // /* MW 7 */
	  1590      "00000100" // /* MW 6 */
	  1591      "10101000" // /* MW 5 */
	  1592      "11111111" // /* MW 4 */
	  1593      "00011000" // /* MW 3 */
	  1594      "00000000" // /* MW 2 */
	  1595      "00000000" // /* MW 1 */
	  1596      "11110111" // 	                                        NOP;                                                        MOV.u20 p6, #165120;          NOP /* MW 8 */
	  1597      "00000111" // /* MW 7 */
	  1598      "01010000" // /* MW 6 */
	  1599      "10111000" // /* MW 5 */
	  1600      "01001010" // /* MW 4 */
	  1601      "00000000" // /* MW 3 */
	  1602      "00000000" // /* MW 2 */
	  1603      "10000000" // /* MW 1 */
	  1604      "10101001" // 	MOV r10, lr /* MW 2 */
	  1605      "00010101" // /* MW 1 */
	  1606      "00110111" // 	LDA r9, [p0];                           NOP;                          NOP /* MW 8 */
	  1607      "00000000" // /* MW 7 */
	  1608      "00000000" // /* MW 6 */
	  1609      "00000000" // /* MW 5 */
	  1610      "00000000" // /* MW 4 */
	  1611      "00000000" // /* MW 3 */
	  1612      "11010000" // /* MW 2 */
	  1613      "01111001" // /* MW 1 */
	  1614      "00000011" // 	NOP;                                    ST r12, [p0] /* MW 4 */
	  1615      "00000000" // /* MW 3 */
	  1616      "10011010" // /* MW 2 */
	  1617      "10101111" // /* MW 1 */
	  1618      "00000001" // 	NOP /* MW 2 */
	  1619      "00000000" // /* MW 1 */
	  1620      "00000001" // 	NOP /* MW 2 */
	  1621      "00000000" // /* MW 1 */
	  1622      "00000001" // 	NOP /* MW 2 */
	  1623      "00000000" // /* MW 1 */
	  1624      "00000001" // 	NOP /* MW 2 */
	  1625      "00000000" // /* MW 1 */
	  1626      "00000001" // 	NOP /* MW 2 */
	  1627      "00000000" // /* MW 1 */
	  1628      "00000001" // 	NOP /* MW 2 */
	  1629      "00000000" // /* MW 1 */
	  1630      "00000011" // 	NOP;                                                                  ADD r9, r9, #-8 /* MW 4 */
	  1631      "10010000" // /* MW 3 */
	  1632      "10001001" // /* MW 2 */
	  1633      "00100111" // /* MW 1 */
	  1634      "01110111" // 	NOP;                                                                  ASHL r11, r9, r8;             MOV m0, r9 /* MW 8 */
	  1635      "00110110" // /* MW 7 */
	  1636      "11110001" // /* MW 6 */
	  1637      "00000111" // /* MW 5 */
	  1638      "10011000" // /* MW 4 */
	  1639      "00000111" // /* MW 3 */
	  1640      "00000000" // /* MW 2 */
	  1641      "00000000" // /* MW 1 */
	  1642      "00000011" // 	NOP;                                    PADDS [p6], m0 /* MW 4 */
	  1643      "00110000" // /* MW 3 */
	  1644      "00010000" // /* MW 2 */
	  1645      "10100000" // /* MW 1 */
	  1646      "00000001" // 	NOP /* MW 2 */
	  1647      "00000000" // /* MW 1 */
.label TGT_F__cxa_finalize_64
.loop_nesting 1
	  1648      "00110111" // 	LDA cb0, [p6], #4;                      NOP;                          NOP /* MW 8 */
	  1649      "00000000" // /* MW 7 */
	  1650      "00000000" // /* MW 6 */
	  1651      "00000000" // /* MW 5 */
	  1652      "00000000" // /* MW 4 */
	  1653      "10000000" // /* MW 3 */
	  1654      "10100011" // /* MW 2 */
	  1655      "01000000" // /* MW 1 */
	  1656      "00110111" // 	LDA p0, [p6], #-12;                     NOP;                          NOP /* MW 8 */
	  1657      "00000000" // /* MW 7 */
	  1658      "00000000" // /* MW 6 */
	  1659      "00000000" // /* MW 5 */
	  1660      "00000000" // /* MW 4 */
	  1661      "10000000" // /* MW 3 */
	  1662      "10111011" // /* MW 2 */
	  1663      "01101000" // /* MW 1 */
	  1664      "00000001" // 	NOP /* MW 2 */
	  1665      "00000000" // /* MW 1 */
	  1666      "00000001" // 	NOP /* MW 2 */
	  1667      "00000000" // /* MW 1 */
	  1668      "00000001" // 	NOP /* MW 2 */
	  1669      "00000000" // /* MW 1 */
	  1670      "00000001" // 	NOP /* MW 2 */
	  1671      "00000000" // /* MW 1 */
	  1672      "00000001" // 	NOP /* MW 2 */
	  1673      "00000000" // /* MW 1 */
	  1674      "00000001" // 	NOP /* MW 2 */
	  1675      "00000000" // /* MW 1 */
.no_stack_arguments
	  1676      "01000001" // 	JAL cb0 /* MW 2 */
	  1677      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1678      "00000001" // 	NOP /* MW 2 */
	  1679      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1680      "00000001" // 	NOP /* MW 2 */
	  1681      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1682      "00000001" // 	NOP /* MW 2 */
	  1683      "00000000" // /* MW 1 */
.delay_slot
	  1684      "00000011" // 	NOP;                                                                                                MOV r4, r0 /* MW 4 */
	  1685      "00011000" // /* MW 3 */
	  1686      "00011010" // /* MW 2 */
	  1687      "00001110" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1688      "00110111" // 	NOP;                                    NOP;                          NOP /* MW 8 */
	  1689      "00000000" // /* MW 7 */
	  1690      "00000000" // /* MW 6 */
	  1691      "00000000" // /* MW 5 */
	  1692      "00000000" // /* MW 4 */
	  1693      "00000000" // /* MW 3 */
	  1694      "00000000" // /* MW 2 */
	  1695      "00000000" // /* MW 1 */
.return_address
	  1696      "11110111" // 	                                        NOP;                                                        MOV.u20 cb0, #1648;           NOP /* MW 8 */
	  1697      "00000111" // /* MW 7 */
	  1698      "01100111" // /* MW 6 */
	  1699      "01000000" // /* MW 5 */
	  1700      "01000000" // /* MW 4 */
	  1701      "00000000" // /* MW 3 */
	  1702      "00000000" // /* MW 2 */
	  1703      "10000000" // /* MW 1 */
	  1704      "00000011" // 	NOP;                                                                  BDEC r11, r11, cb0 /* MW 4 */
	  1705      "10110000" // /* MW 3 */
	  1706      "10001011" // /* MW 2 */
	  1707      "00000011" // /* MW 1 */
.delay_slot
	  1708      "00000101" // 	MOV r0, r4 /* MW 2 */
	  1709      "11010011" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1710      "00000001" // 	NOP /* MW 2 */
	  1711      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1712      "00000001" // 	NOP /* MW 2 */
	  1713      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1714      "00000001" // 	NOP /* MW 2 */
	  1715      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1716      "00000001" // 	NOP /* MW 2 */
	  1717      "00000000" // /* MW 1 */
.loop_nesting 0
	  1718      "01100001" // 	MOV lr, r10 /* MW 2 */
	  1719      "10100001" // /* MW 1 */
	  1720      "00000001" // 	RET lr /* MW 2 */
	  1721      "00000001" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1722      "00000001" // 	NOP /* MW 2 */
	  1723      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1724      "00000001" // 	NOP /* MW 2 */
	  1725      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1726      "00000001" // 	NOP /* MW 2 */
	  1727      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1728      "00000001" // 	NOP /* MW 2 */
	  1729      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1730      "00000001" // 	NOP /* MW 2 */
.label __cxa_finalize__end
	  1731      "00000000" // /* MW 1 */
