
// File generated by noodle version U-2022.12#3eec2545bc#230622, Sat Mar 16 13:07:36 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// noodle -I/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2/aietools/data/versal_prod/lib -I/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2/aietools/data/versal_prod/lib/isg -I/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2/aietools/data/versal_prod/lib/runtime_cxx/libcxx-lite/include -I/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2/aietools/data/versal_prod/lib/runtime_cxx/libs/libcxx-9.0.0/include-lite -I/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2/aietools/data/versal_prod/lib/runtime/include -D__AIENGINE__ -D__AIE_ARCH__=10 -D__AIEARCH__=10 -D__tct_tgt__=230622 -iaie_core.h +Sinl +Olbb=200 +Opmsa +NOpld +Olzyinl +w/scratch/eddier/mlir-aie-2-22-2024/mlir-aie/reference_designs/vck5000/vector_scalar/aie.mlir.prj/work /scratch/eddier/mlir-aie-2-22-2024/mlir-aie/reference_designs/vck5000/vector_scalar/aie.mlir.prj/work/input.llchesslinked.sfg +Q1=+Sinl,+Olbb=200,+Opmsa,+NOpld,+Olzyinl +Q2=+Sinl,+Olbb=200,+Opmsa,+NOpld,+Olzyinl +Q3=+Sinl,+Olbb=1000,+Opmsa,+NOpld,+Olzyinl +Qfast=+Sinl,+Olbb=1000,+Opmsa,+NOpld,+Olzyinl,+Opfp +Qs=+Sinl,+Olbb=200,+Opmsa,+NOpld,+Olzyinl +Qz=+Sinl,+Olbb=200,+Opmsa,+NOpld,+Olzyinl me

toolrelease _22R4;


// additional
prop gp_offset_type = ( __sint );

prop static_variable_registers = ( SCD MCD MD0 mdQ mdR mdRdx mdSQ MD1 MC0 MC1 TILE_CNTR );

// void sequence(void *, void *, void *)
Fsequence : user_defined, called {
    fnm : "sequence" 'void sequence(void *, void *, void *)';
    arg : ( addr:i addr:i addr:i addr:i );
    loc : ( LR[0] P[0] P[1] P[2] );
    flc : ( P[6] P[7] R[4] R[10] R[11] );
    frm : ( );
    llv : 1 0 0 0 0 ;
}

// void core_6_2()
Fcore_6_2 : user_defined, called {
    fnm : "core_6_2" 'void core_6_2()';
    arg : ( addr:i );
    loc : ( LR[0] );
    flc : ( P[6] P[7] R[4] R[10] R[11] );
    frm : ( );
    llv : 1 0 * 0 0 ;
}

// void llvm___aie___lock___acquire___reg(unsigned, unsigned)
Fllvm___aie___lock___acquire___reg : user_defined, called {
    fnm : "llvm___aie___lock___acquire___reg" 'void llvm___aie___lock___acquire___reg(unsigned, unsigned)';
    arg : ( addr:i w32:i w32:i );
    loc : ( LR[0] R[6] R[7] );
    flc : ( P[6] P[7] R[4] R[10] R[11] );
    frm : ( );
    llv : 1 0 0 0 0 ;
}

// void llvm___aie___lock___release___reg(unsigned, unsigned)
Fllvm___aie___lock___release___reg : user_defined, called {
    fnm : "llvm___aie___lock___release___reg" 'void llvm___aie___lock___release___reg(unsigned, unsigned)';
    arg : ( addr:i w32:i w32:i );
    loc : ( LR[0] R[6] R[7] );
    flc : ( P[6] P[7] R[4] R[10] R[11] );
    frm : ( );
    llv : 1 0 0 0 0 ;
}

