
// File generated by darts version U-2022.12#3eec2545bc#230622, Wed Jan 10 06:25:13 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// darts -I/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/aietools/data/aie_ml/lib -d -h -I/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/aietools/data/aie_ml/lib/runtime_cxx/libcxx-lite/include -I/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/aietools/data/aie_ml/lib/runtime_cxx/libs/libcxx-9.0.0/include-lite -I/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/aietools/data/aie_ml/lib/runtime/include -I<BOOST_DIR> -D__AIENGINE__ -D__AIE_ARCH__=20 -D__AIEARCH__=20 -D__tct_tgt__=230622 -L +Ihex +nanno +u core_0_4.elf me

// Release: ipp U-2022.12-TGT-230622
.label __AIE_ARCH_MODEL_VERSION__20010300__inlined__1__me_basic___main_init_
.label _main_init
.function_start
	     0      "01000011" // 	                                                                                          MOVXM sp, #458752 /* MW 8 */
	     1      "00010000" // /* MW 7 */
	     2      "00000000" // /* MW 6 */
	     3      "00111000" // /* MW 5 */
	     4      "11000011" // /* MW 4 */
	     5      "00000001" // /* MW 3 */
	     6      "00000000" // /* MW 2 */
	     7      "00000000" // /* MW 1 */
	     8      "01010101" // 	                                                                                          MOVXM r16, #0 /* MW 6 */
	     9      "00000000" // /* MW 5 */
	    10      "00000000" // /* MW 4 */
	    11      "00001000" // /* MW 3 */
	    12      "00000000" // /* MW 2 */
	    13      "00000000" // /* MW 1 */
	    14      "01010101" // 	                                                                                          MOVXM r24, #0 /* MW 6 */
	    15      "00000000" // /* MW 5 */
	    16      "00000000" // /* MW 4 */
	    17      "00001100" // /* MW 3 */
	    18      "00000000" // /* MW 2 */
	    19      "00000000" // /* MW 1 */
	    20      "10011001" // 	                                                                                          EQ r24, r24, r16 /* MW 4 */
	    21      "00000111" // /* MW 3 */
	    22      "00110001" // /* MW 2 */
	    23      "00010110" // /* MW 1 */
	    24      "10010101" // 	                                                                                          JNZ r24, #128 /* MW 6 */
	    25      "00000001" // /* MW 5 */
	    26      "01000000" // /* MW 4 */
	    27      "01000000" // /* MW 3 */
	    28      "00000000" // /* MW 2 */
	    29      "11000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    30      "00000001" // 	NOPX /* MW 2 */
	    31      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    32      "00000001" // 	NOPX /* MW 2 */
	    33      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    34      "00000001" // 	NOPX /* MW 2 */
	    35      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    36      "00000001" // 	NOPX /* MW 2 */
	    37      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    38      "00000001" // 	NOPX /* MW 2 */
	    39      "00000000" // /* MW 1 */
	    40      "01010101" // 	                                                                                          MOVXM p6, #-4 /* MW 6 */
	    41      "11111000" // /* MW 5 */
	    42      "01111111" // /* MW 4 */
	    43      "11111100" // /* MW 3 */
	    44      "11111111" // /* MW 2 */
	    45      "11111111" // /* MW 1 */
	    46      "01011001" // 	                                                                                                                        MOV p7, p0 /* MW 4 */
	    47      "01110110" // /* MW 3 */
	    48      "00110000" // /* MW 2 */
	    49      "00011111" // /* MW 1 */
	    50      "00101111" // 	NOPA;                                                       NOPS;                                                       MOV r17, r1;                            NOPV /* MW 14 */
	    51      "01111000" // /* MW 13 */
	    52      "00000000" // /* MW 12 */
	    53      "00000000" // /* MW 11 */
	    54      "10110010" // /* MW 10 */
	    55      "00000100" // /* MW 9 */
	    56      "01100010" // /* MW 8 */
	    57      "00000000" // /* MW 7 */
	    58      "00000000" // /* MW 6 */
	    59      "00000000" // /* MW 5 */
	    60      "00000000" // /* MW 4 */
	    61      "00000000" // /* MW 3 */
	    62      "00000000" // /* MW 2 */
	    63      "00000000" // /* MW 1 */
.label TGT_F_main_init_64
.loop_nesting 1
	    64      "01001101" // 	LDA p0, [p6], #-4;                                                                                                      MOV r18, p6 /* MW 6 */
	    65      "01110110" // /* MW 5 */
	    66      "10001100" // /* MW 4 */
	    67      "11011100" // /* MW 3 */
	    68      "11110000" // /* MW 2 */
	    69      "11011111" // /* MW 1 */
	    70      "00000001" // 	NOPX /* MW 2 */
	    71      "00000000" // /* MW 1 */
	    72      "00000001" // 	NOPX /* MW 2 */
	    73      "00000000" // /* MW 1 */
	    74      "00000001" // 	NOPX /* MW 2 */
	    75      "00000000" // /* MW 1 */
	    76      "00000001" // 	NOPX /* MW 2 */
	    77      "00000000" // /* MW 1 */
	    78      "00000001" // 	NOPX /* MW 2 */
	    79      "00000000" // /* MW 1 */
	    80      "00000001" // 	NOPX /* MW 2 */
	    81      "00000000" // /* MW 1 */
.no_stack_arguments
	    82      "00011001" // 	                                                                                          JL p0 /* MW 4 */
	    83      "00010100" // /* MW 3 */
	    84      "00000000" // /* MW 2 */
	    85      "00010000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    86      "00000001" // 	NOPX /* MW 2 */
	    87      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    88      "00000001" // 	NOPX /* MW 2 */
	    89      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    90      "00000001" // 	NOPX /* MW 2 */
	    91      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    92      "00000001" // 	NOPX /* MW 2 */
	    93      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    94      "00000001" // 	NOPX /* MW 2 */
	    95      "00000000" // /* MW 1 */
.return_address
	    96      "10011001" // 	                                                                                          NE r24, r18, r16 /* MW 4 */
	    97      "00001000" // /* MW 3 */
	    98      "10110001" // /* MW 2 */
	    99      "00010100" // /* MW 1 */
	   100      "10010101" // 	                                                                                          JNZ r24, #64 /* MW 6 */
	   101      "00000001" // /* MW 5 */
	   102      "01000000" // /* MW 4 */
	   103      "00100000" // /* MW 3 */
	   104      "00000000" // /* MW 2 */
	   105      "11000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   106      "00000001" // 	NOPX /* MW 2 */
	   107      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   108      "00000001" // 	NOPX /* MW 2 */
	   109      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   110      "00000001" // 	NOPX /* MW 2 */
	   111      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   112      "00000001" // 	NOPX /* MW 2 */
	   113      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   114      "00000001" // 	NOPX /* MW 2 */
	   115      "00000000" // /* MW 1 */
.loop_nesting 0
	   116      "01011001" // 	                                                                                                                        MOV p0, p7 /* MW 4 */
	   117      "01110110" // /* MW 3 */
	   118      "00111110" // /* MW 2 */
	   119      "00011000" // /* MW 1 */
	   120      "00000011" // 	                                                            NOPS;                                                       MOV r1, r17 /* MW 8 */
	   121      "00100000" // /* MW 7 */
	   122      "01001011" // /* MW 6 */
	   123      "00100100" // /* MW 5 */
	   124      "00000000" // /* MW 4 */
	   125      "00000000" // /* MW 3 */
	   126      "00000000" // /* MW 2 */
	   127      "00000000" // /* MW 1 */
.label TGT_F_main_init_128
.no_stack_arguments
	   128      "00010101" // 	                                                                                          JL #224 /* MW 6 */
	   129      "00000001" // /* MW 5 */
	   130      "00000000" // /* MW 4 */
	   131      "01110000" // /* MW 3 */
	   132      "00000000" // /* MW 2 */
	   133      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   134      "00000001" // 	NOPX /* MW 2 */
	   135      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   136      "00000001" // 	NOPX /* MW 2 */
	   137      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   138      "00000001" // 	NOPX /* MW 2 */
	   139      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   140      "00000001" // 	NOPX /* MW 2 */
	   141      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   142      "00000001" // 	NOPX /* MW 2 */
	   143      "00000000" // /* MW 1 */
.return_address
.no_stack_arguments
	   144      "00010101" // 	                                                                                          JL #3680 /* MW 6 */
	   145      "00000001" // /* MW 5 */
	   146      "00000000" // /* MW 4 */
	   147      "00110000" // /* MW 3 */
	   148      "00000111" // /* MW 2 */
	   149      "00000000" // /* MW 1 */
.delay_slot
	   150      "10011001" // 	                                                                                                                        MOV p0, #0 /* MW 4 */
	   151      "00000110" // /* MW 3 */
	   152      "00110000" // /* MW 2 */
	   153      "00011000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   154      "00000001" // 	NOPX /* MW 2 */
	   155      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   156      "00000001" // 	NOPX /* MW 2 */
	   157      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   158      "00000001" // 	NOPX /* MW 2 */
	   159      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   160      "11000000" // 	NOPA;                         NOPB;                         NOPS;                         NOPX;                         NOPM;                                   NOPV /* MW 16 */
	   161      "00000011" // /* MW 15 */
	   162      "00000000" // /* MW 14 */
	   163      "10001000" // /* MW 13 */
	   164      "00000011" // /* MW 12 */
	   165      "00000000" // /* MW 11 */
	   166      "00000000" // /* MW 10 */
	   167      "00000000" // /* MW 9 */
	   168      "00000000" // /* MW 8 */
	   169      "00000000" // /* MW 7 */
	   170      "00000000" // /* MW 6 */
	   171      "00000000" // /* MW 5 */
	   172      "00000000" // /* MW 4 */
	   173      "00000000" // /* MW 3 */
	   174      "00000000" // /* MW 2 */
	   175      "00000000" // /* MW 1 */
.return_address
.swstall chess_separator_scheduler
	   176      "00000001" // 	NOPX /* MW 2 */
	   177      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   178      "00000001" // 	NOPX /* MW 2 */
	   179      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   180      "00000001" // 	NOPX /* MW 2 */
	   181      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   182      "00000001" // 	NOPX /* MW 2 */
	   183      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   184      "00000001" // 	NOPX /* MW 2 */
	   185      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   186      "00000001" // 	NOPX /* MW 2 */
	   187      "00000000" // /* MW 1 */
	   188      "00011001" // 	                                                                                          DONE /* MW 4 */
	   189      "00001000" // /* MW 3 */
	   190      "00000000" // /* MW 2 */
	   191      "00010000" // /* MW 1 */
.swstall chess_separator_scheduler
	   192      "00000001" // 	NOPX /* MW 2 */
	   193      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   194      "00000001" // 	NOPX /* MW 2 */
	   195      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   196      "00000001" // 	NOPX /* MW 2 */
	   197      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   198      "00000001" // 	NOPX /* MW 2 */
	   199      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   200      "00000001" // 	NOPX /* MW 2 */
	   201      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   202      "00000001" // 	NOPX /* MW 2 */
	   203      "00000000" // /* MW 1 */
.swstall for_chess_exit
.exit
	   204      "00011001" // 	NOPA /* MW 4 */
	   205      "00000000" // /* MW 3 */
	   206      "00000000" // /* MW 2 */
	   207      "00000000" // /* MW 1 */
.label TGT_F_main_init_208
.loop_nesting 1
	   208      "10010101" // 	                                                                                          J #208 /* MW 6 */
	   209      "00000000" // /* MW 5 */
	   210      "00000000" // /* MW 4 */
	   211      "01101000" // /* MW 3 */
	   212      "00000000" // /* MW 2 */
	   213      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   214      "00000001" // 	NOPX /* MW 2 */
	   215      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   216      "00000001" // 	NOPX /* MW 2 */
	   217      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   218      "00000001" // 	NOPX /* MW 2 */
	   219      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   220      "00000001" // 	NOPX /* MW 2 */
	   221      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   222      "00000001" // 	NOPX /* MW 2 */
.label _main_init__end
	   223      "00000000" // /* MW 1 */
.label core_0_4
.function_start
	   224      "00111011" // 	                              PADDB [sp], #64;                                            MOVX r21, #0;                 MOV r3, r21 /* MW 10 */
	   225      "00101000" // /* MW 9 */
	   226      "01001011" // /* MW 8 */
	   227      "01100101" // /* MW 7 */
	   228      "00001000" // /* MW 6 */
	   229      "01010000" // /* MW 5 */
	   230      "00000001" // /* MW 4 */
	   231      "01000000" // /* MW 3 */
	   232      "00000011" // /* MW 2 */
	   233      "00000000" // /* MW 1 */
	   234      "00111011" // 	                                                            ST p6, [sp, #-40];            MOVX r22, #1;                 MOV r1, r22 /* MW 10 */
	   235      "00101001" // /* MW 9 */
	   236      "10001011" // /* MW 8 */
	   237      "00100101" // /* MW 7 */
	   238      "00101000" // /* MW 6 */
	   239      "01100000" // /* MW 5 */
	   240      "00000001" // /* MW 4 */
	   241      "11010000" // /* MW 3 */
	   242      "01101110" // /* MW 2 */
	   243      "11111111" // /* MW 1 */
	   244      "00111011" // 	                                                            ST r21, [sp, #-48];           MOVX r20, #-1;                MOV r0, r20 /* MW 10 */
	   245      "00101001" // /* MW 9 */
	   246      "00001011" // /* MW 8 */
	   247      "00000101" // /* MW 7 */
	   248      "11101000" // /* MW 6 */
	   249      "01000111" // /* MW 5 */
	   250      "00111111" // /* MW 4 */
	   251      "01000000" // /* MW 3 */
	   252      "01001101" // /* MW 2 */
	   253      "11111111" // /* MW 1 */
	   254      "00111011" // 	                                                            ST p7, [sp, #-36];            MOVXM dn0, #513024 /* MW 10 */
	   255      "00010001" // /* MW 9 */
	   256      "00000000" // /* MW 8 */
	   257      "00010010" // /* MW 7 */
	   258      "11110101" // /* MW 6 */
	   259      "00000001" // /* MW 5 */
	   260      "00000000" // /* MW 4 */
	   261      "11010000" // /* MW 3 */
	   262      "01111111" // /* MW 2 */
	   263      "11111111" // /* MW 1 */
	   264      "00000011" // 	                                                            ST r1, [sp, #-28];                                          MOV r2, r23 /* MW 8 */
	   265      "00100000" // /* MW 7 */
	   266      "11001011" // /* MW 6 */
	   267      "01000101" // /* MW 5 */
	   268      "00000000" // /* MW 4 */
	   269      "01000000" // /* MW 3 */
	   270      "10011000" // /* MW 2 */
	   271      "11111111" // /* MW 1 */
	   272      "00111011" // 	                                                            ST r2, [sp, #-32];            MOVXM p6, #384 /* MW 10 */
	   273      "00010001" // /* MW 9 */
	   274      "11000000" // /* MW 8 */
	   275      "00011000" // /* MW 7 */
	   276      "00000011" // /* MW 6 */
	   277      "00000000" // /* MW 5 */
	   278      "00000000" // /* MW 4 */
	   279      "10000000" // /* MW 3 */
	   280      "10001000" // /* MW 2 */
	   281      "11111111" // /* MW 1 */
	   282      "00011001" // 	                                                            ST r3, [sp, #-24] /* MW 4 */
	   283      "01000110" // /* MW 3 */
	   284      "11111101" // /* MW 2 */
	   285      "00001111" // /* MW 1 */
	   286      "00011001" // 	                                                            ST r18, [sp, #-20] /* MW 4 */
	   287      "11100100" // /* MW 3 */
	   288      "11111101" // /* MW 2 */
	   289      "00001111" // /* MW 1 */
	   290      "00011001" // 	                                                            ST r19, [sp, #-16] /* MW 4 */
	   291      "01100110" // /* MW 3 */
	   292      "11111110" // /* MW 2 */
	   293      "00001111" // /* MW 1 */
	   294      "00011001" // 	                                                            ST r0, [sp, #-12] /* MW 4 */
	   295      "11000000" // /* MW 3 */
	   296      "11111110" // /* MW 2 */
	   297      "00001111" // /* MW 1 */
	   298      "00011001" // 	                                                            ST r17, [sp, #-8] /* MW 4 */
	   299      "01100010" // /* MW 3 */
	   300      "11111111" // /* MW 2 */
	   301      "00001111" // /* MW 1 */
	   302      "00011001" // 	                                                            ST r16, [sp, #-4] /* MW 4 */
	   303      "11100000" // /* MW 3 */
	   304      "11111111" // /* MW 2 */
	   305      "00001111" // /* MW 1 */
	   306      "10011001" // 	                                                            ST lr, [sp, #-44] /* MW 4 */
	   307      "11000010" // /* MW 3 */
	   308      "11111010" // /* MW 2 */
	   309      "00001111" // /* MW 1 */
	   310      "01111011" // 	NOPA;                                                       ST dn0, [sp, #-52];           NOPX /* MW 10 */
	   311      "00000000" // /* MW 9 */
	   312      "00000000" // /* MW 8 */
	   313      "00000000" // /* MW 7 */
	   314      "00000000" // /* MW 6 */
	   315      "11010001" // /* MW 5 */
	   316      "11111001" // /* MW 4 */
	   317      "00000111" // /* MW 3 */
	   318      "00000000" // /* MW 2 */
	   319      "00000000" // /* MW 1 */
.label TGT_Fcore_0_4_96
.loop_nesting 1
	   320      "11011001" // 	LDA p7, [sp, #-52] /* MW 4 */
	   321      "11111110" // /* MW 3 */
	   322      "11111001" // /* MW 2 */
	   323      "00000111" // /* MW 1 */
.no_stack_arguments
	   324      "00010101" // 	                                                                                          JL #1200 /* MW 6 */
	   325      "00000001" // /* MW 5 */
	   326      "00000000" // /* MW 4 */
	   327      "01011000" // /* MW 3 */
	   328      "00000010" // /* MW 2 */
	   329      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   330      "00000001" // 	NOPX /* MW 2 */
	   331      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   332      "00000001" // 	NOPX /* MW 2 */
	   333      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   334      "00000001" // 	NOPX /* MW 2 */
	   335      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   336      "00000001" // 	NOPX /* MW 2 */
	   337      "00000000" // /* MW 1 */
.delay_slot
	   338      "01111111" // 	NOPA;                         NOPB;                         NOPS;                         MOVX r0, #51;                 MOV r1, #-1 /* MW 14 */
	   339      "00000000" // /* MW 13 */
	   340      "00000000" // /* MW 12 */
	   341      "00000000" // /* MW 11 */
	   342      "11111001" // /* MW 10 */
	   343      "11111111" // /* MW 9 */
	   344      "00000100" // /* MW 8 */
	   345      "11001101" // /* MW 7 */
	   346      "00000000" // /* MW 6 */
	   347      "00000000" // /* MW 5 */
	   348      "00000000" // /* MW 4 */
	   349      "00000000" // /* MW 3 */
	   350      "00000000" // /* MW 2 */
	   351      "00000000" // /* MW 1 */
.return_address
	   352      "01111011" // 	LDA r17, [p7], #4;                                          ST r21, [sp, #-56];           MOVX r16, #15 /* MW 10 */
	   353      "00111101" // /* MW 9 */
	   354      "00100000" // /* MW 8 */
	   355      "00000000" // /* MW 7 */
	   356      "00000000" // /* MW 6 */
	   357      "01101010" // /* MW 5 */
	   358      "11111001" // /* MW 4 */
	   359      "01001111" // /* MW 3 */
	   360      "01110100" // /* MW 2 */
	   361      "11100000" // /* MW 1 */
	   362      "01011001" // 	LDA r18, [p7], #4 /* MW 4 */
	   363      "10100100" // /* MW 3 */
	   364      "00000011" // /* MW 2 */
	   365      "00000111" // /* MW 1 */
	   366      "01011001" // 	LDA r19, [p7], #-8 /* MW 4 */
	   367      "10100110" // /* MW 3 */
	   368      "11111101" // /* MW 2 */
	   369      "00000111" // /* MW 1 */
	   370      "00101111" // 	NOPA;                                                       ST p7, [sp, #-52];                                          NOPM;                                   NOPV /* MW 14 */
	   371      "01111000" // /* MW 13 */
	   372      "00000000" // /* MW 12 */
	   373      "00000000" // /* MW 11 */
	   374      "00111000" // /* MW 10 */
	   375      "00000000" // /* MW 9 */
	   376      "01000000" // /* MW 8 */
	   377      "00000000" // /* MW 7 */
	   378      "10000000" // /* MW 6 */
	   379      "11111110" // /* MW 5 */
	   380      "11111001" // /* MW 4 */
	   381      "00000111" // /* MW 3 */
	   382      "00000000" // /* MW 2 */
	   383      "00000000" // /* MW 1 */
.label TGT_Fcore_0_4_160
.no_stack_arguments
.loop_nesting 2
	   384      "00010101" // 	                                                                                          JL #1200 /* MW 6 */
	   385      "00000001" // /* MW 5 */
	   386      "00000000" // /* MW 4 */
	   387      "01011000" // /* MW 3 */
	   388      "00000010" // /* MW 2 */
	   389      "00000000" // /* MW 1 */
.delay_slot
	   390      "01000011" // 	                                                                                          MOVX r0, #5;                  MOV r1, #-1 /* MW 8 */
	   391      "11001000" // /* MW 7 */
	   392      "11111111" // /* MW 6 */
	   393      "00100111" // /* MW 5 */
	   394      "10101000" // /* MW 4 */
	   395      "00000000" // /* MW 3 */
	   396      "00000000" // /* MW 2 */
	   397      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   398      "00000001" // 	NOPX /* MW 2 */
	   399      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   400      "00000001" // 	NOPX /* MW 2 */
	   401      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   402      "00000001" // 	NOPX /* MW 2 */
	   403      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   404      "00110111" // 	NOPA;                         NOPB;                         NOPS;                         NOPX /* MW 12 */
	   405      "00000001" // /* MW 11 */
	   406      "00000000" // /* MW 10 */
	   407      "00000000" // /* MW 9 */
	   408      "00000000" // /* MW 8 */
	   409      "00000000" // /* MW 7 */
	   410      "00000000" // /* MW 6 */
	   411      "00000000" // /* MW 5 */
	   412      "00000000" // /* MW 4 */
	   413      "00000000" // /* MW 3 */
	   414      "00000000" // /* MW 2 */
	   415      "00000000" // /* MW 1 */
.return_address
.no_stack_arguments
	   416      "00010101" // 	                                                                                          JL #1200 /* MW 6 */
	   417      "00000001" // /* MW 5 */
	   418      "00000000" // /* MW 4 */
	   419      "01011000" // /* MW 3 */
	   420      "00000010" // /* MW 2 */
	   421      "00000000" // /* MW 1 */
.delay_slot
	   422      "01000011" // 	                                                                                          MOVX r0, #37;                 MOV r1, #-1 /* MW 8 */
	   423      "11001000" // /* MW 7 */
	   424      "11111111" // /* MW 6 */
	   425      "00100111" // /* MW 5 */
	   426      "10101000" // /* MW 4 */
	   427      "00000100" // /* MW 3 */
	   428      "00000000" // /* MW 2 */
	   429      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   430      "00000001" // 	NOPX /* MW 2 */
	   431      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   432      "00000001" // 	NOPX /* MW 2 */
	   433      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   434      "00000001" // 	NOPX /* MW 2 */
	   435      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   436      "00110111" // 	NOPA;                         NOPB;                         NOPS;                         NOPX /* MW 12 */
	   437      "00000001" // /* MW 11 */
	   438      "00000000" // /* MW 10 */
	   439      "00000000" // /* MW 9 */
	   440      "00000000" // /* MW 8 */
	   441      "00000000" // /* MW 7 */
	   442      "00000000" // /* MW 6 */
	   443      "00000000" // /* MW 5 */
	   444      "00000000" // /* MW 4 */
	   445      "00000000" // /* MW 3 */
	   446      "00000000" // /* MW 2 */
	   447      "00000000" // /* MW 1 */
.return_address
.no_stack_arguments
	   448      "00010101" // 	                                                                                          JL #1200 /* MW 6 */
	   449      "00000001" // /* MW 5 */
	   450      "00000000" // /* MW 4 */
	   451      "01011000" // /* MW 3 */
	   452      "00000010" // /* MW 2 */
	   453      "00000000" // /* MW 1 */
.delay_slot
	   454      "01000011" // 	                                                                                          MOVX r0, #52;                 MOV r1, #-1 /* MW 8 */
	   455      "11001000" // /* MW 7 */
	   456      "11111111" // /* MW 6 */
	   457      "00100111" // /* MW 5 */
	   458      "10001000" // /* MW 4 */
	   459      "00000110" // /* MW 3 */
	   460      "00000000" // /* MW 2 */
	   461      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   462      "00000001" // 	NOPX /* MW 2 */
	   463      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   464      "00000001" // 	NOPX /* MW 2 */
	   465      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   466      "00000001" // 	NOPX /* MW 2 */
	   467      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   468      "00110111" // 	NOPA;                         NOPB;                         NOPS;                         NOPX /* MW 12 */
	   469      "00000001" // /* MW 11 */
	   470      "00000000" // /* MW 10 */
	   471      "00000000" // /* MW 9 */
	   472      "00000000" // /* MW 8 */
	   473      "00000000" // /* MW 7 */
	   474      "00000000" // /* MW 6 */
	   475      "00000000" // /* MW 5 */
	   476      "00000000" // /* MW 4 */
	   477      "00000000" // /* MW 3 */
	   478      "00000000" // /* MW 2 */
	   479      "00000000" // /* MW 1 */
.return_address
.no_stack_arguments
	   480      "00010101" // 	                                                                                          JL #1200 /* MW 6 */
	   481      "00000001" // /* MW 5 */
	   482      "00000000" // /* MW 4 */
	   483      "01011000" // /* MW 3 */
	   484      "00000010" // /* MW 2 */
	   485      "00000000" // /* MW 1 */
.delay_slot
	   486      "01000011" // 	                                                                                          MOVX r0, #49;                 MOV r1, #-1 /* MW 8 */
	   487      "11001000" // /* MW 7 */
	   488      "11111111" // /* MW 6 */
	   489      "00100111" // /* MW 5 */
	   490      "00101000" // /* MW 4 */
	   491      "00000110" // /* MW 3 */
	   492      "00000000" // /* MW 2 */
	   493      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   494      "00000001" // 	NOPX /* MW 2 */
	   495      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   496      "00000001" // 	NOPX /* MW 2 */
	   497      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   498      "00000001" // 	NOPX /* MW 2 */
	   499      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   500      "00110111" // 	NOPA;                         NOPB;                         NOPS;                         NOPX /* MW 12 */
	   501      "00000001" // /* MW 11 */
	   502      "00000000" // /* MW 10 */
	   503      "00000000" // /* MW 9 */
	   504      "00000000" // /* MW 8 */
	   505      "00000000" // /* MW 7 */
	   506      "00000000" // /* MW 6 */
	   507      "00000000" // /* MW 5 */
	   508      "00000000" // /* MW 4 */
	   509      "00000000" // /* MW 3 */
	   510      "00000000" // /* MW 2 */
	   511      "00000000" // /* MW 1 */
.return_address
	   512      "01010101" // 	                                                                                          MOVXM p1, #439296 /* MW 6 */
	   513      "00000000" // /* MW 5 */
	   514      "01101000" // /* MW 4 */
	   515      "10110010" // /* MW 3 */
	   516      "00000110" // /* MW 2 */
	   517      "00000000" // /* MW 1 */
	   518      "01010101" // 	                                                                                          MOVXM p3, #492544 /* MW 6 */
	   519      "00000000" // /* MW 5 */
	   520      "01101000" // /* MW 4 */
	   521      "10000110" // /* MW 3 */
	   522      "00000111" // /* MW 2 */
	   523      "00000000" // /* MW 1 */
	   524      "01010101" // 	                                                                                          MOVXM p4, #508928 /* MW 6 */
	   525      "00000000" // /* MW 5 */
	   526      "01101000" // /* MW 4 */
	   527      "11001000" // /* MW 3 */
	   528      "00000111" // /* MW 2 */
	   529      "00000000" // /* MW 1 */
.no_stack_arguments
	   530      "00010101" // 	                                                                                          JL #1264 /* MW 6 */
	   531      "00000001" // /* MW 5 */
	   532      "00000000" // /* MW 4 */
	   533      "01111000" // /* MW 3 */
	   534      "00000010" // /* MW 2 */
	   535      "00000000" // /* MW 1 */
.delay_slot
	   536      "01010101" // 	                                                                                          MOVXM p2, #459776 /* MW 6 */
	   537      "00000000" // /* MW 5 */
	   538      "01101000" // /* MW 4 */
	   539      "00000100" // /* MW 3 */
	   540      "00000111" // /* MW 2 */
	   541      "00000000" // /* MW 1 */
.delay_slot
	   542      "01010101" // 	                                                                                          MOVXM p0, #308224 /* MW 6 */
	   543      "00000000" // /* MW 5 */
	   544      "01101000" // /* MW 4 */
	   545      "10110000" // /* MW 3 */
	   546      "00000100" // /* MW 2 */
	   547      "00000000" // /* MW 1 */
.delay_slot
	   548      "01011001" // 	                                                                                                                        MOV r4, r17 /* MW 4 */
	   549      "10010110" // /* MW 3 */
	   550      "00001000" // /* MW 2 */
	   551      "00011001" // /* MW 1 */
.delay_slot
	   552      "10111011" // 	MOVA r3, #64;                                                                             MOVX r0, #32;                 MOV r5, r18 /* MW 10 */
	   553      "00101000" // /* MW 9 */
	   554      "10001011" // /* MW 8 */
	   555      "10100100" // /* MW 7 */
	   556      "00001000" // /* MW 6 */
	   557      "00000100" // /* MW 5 */
	   558      "00000000" // /* MW 4 */
	   559      "11001000" // /* MW 3 */
	   560      "00000000" // /* MW 2 */
	   561      "00001000" // /* MW 1 */
.delay_slot
	   562      "01111111" // 	MOVA r2, #256;                NOPB;                         NOPS;                         MOVX r1, #64;                 MOV r6, r19 /* MW 14 */
	   563      "00000000" // /* MW 13 */
	   564      "00000000" // /* MW 12 */
	   565      "00000000" // /* MW 11 */
	   566      "01100101" // /* MW 10 */
	   567      "10011001" // /* MW 9 */
	   568      "00011000" // /* MW 8 */
	   569      "00000001" // /* MW 7 */
	   570      "01000010" // /* MW 6 */
	   571      "00000000" // /* MW 5 */
	   572      "00000000" // /* MW 4 */
	   573      "10001000" // /* MW 3 */
	   574      "00000000" // /* MW 2 */
	   575      "00100000" // /* MW 1 */
.return_address
.no_stack_arguments
	   576      "00010101" // 	                                                                                          JL #1232 /* MW 6 */
	   577      "00000001" // /* MW 5 */
	   578      "00000000" // /* MW 4 */
	   579      "01101000" // /* MW 3 */
	   580      "00000010" // /* MW 2 */
	   581      "00000000" // /* MW 1 */
.delay_slot
	   582      "01000011" // 	                                                                                          MOVX r0, #53;                 MOV r1, r22 /* MW 8 */
	   583      "00101000" // /* MW 7 */
	   584      "10001011" // /* MW 6 */
	   585      "00100101" // /* MW 5 */
	   586      "10101000" // /* MW 4 */
	   587      "00000110" // /* MW 3 */
	   588      "00000000" // /* MW 2 */
	   589      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   590      "00000001" // 	NOPX /* MW 2 */
	   591      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   592      "00000001" // 	NOPX /* MW 2 */
	   593      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   594      "00000001" // 	NOPX /* MW 2 */
	   595      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   596      "00110111" // 	NOPA;                         NOPB;                         NOPS;                         NOPX /* MW 12 */
	   597      "00000001" // /* MW 11 */
	   598      "00000000" // /* MW 10 */
	   599      "00000000" // /* MW 9 */
	   600      "00000000" // /* MW 8 */
	   601      "00000000" // /* MW 7 */
	   602      "00000000" // /* MW 6 */
	   603      "00000000" // /* MW 5 */
	   604      "00000000" // /* MW 4 */
	   605      "00000000" // /* MW 3 */
	   606      "00000000" // /* MW 2 */
	   607      "00000000" // /* MW 1 */
.return_address
.no_stack_arguments
	   608      "00010101" // 	                                                                                          JL #1232 /* MW 6 */
	   609      "00000001" // /* MW 5 */
	   610      "00000000" // /* MW 4 */
	   611      "01101000" // /* MW 3 */
	   612      "00000010" // /* MW 2 */
	   613      "00000000" // /* MW 1 */
.delay_slot
	   614      "01000011" // 	                                                                                          MOVX r0, #4;                  MOV r1, #1 /* MW 8 */
	   615      "11001000" // /* MW 7 */
	   616      "00000011" // /* MW 6 */
	   617      "00100000" // /* MW 5 */
	   618      "10001000" // /* MW 4 */
	   619      "00000000" // /* MW 3 */
	   620      "00000000" // /* MW 2 */
	   621      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   622      "00000001" // 	NOPX /* MW 2 */
	   623      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   624      "00000001" // 	NOPX /* MW 2 */
	   625      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   626      "00000001" // 	NOPX /* MW 2 */
	   627      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   628      "00110111" // 	NOPA;                         NOPB;                         NOPS;                         NOPX /* MW 12 */
	   629      "00000001" // /* MW 11 */
	   630      "00000000" // /* MW 10 */
	   631      "00000000" // /* MW 9 */
	   632      "00000000" // /* MW 8 */
	   633      "00000000" // /* MW 7 */
	   634      "00000000" // /* MW 6 */
	   635      "00000000" // /* MW 5 */
	   636      "00000000" // /* MW 4 */
	   637      "00000000" // /* MW 3 */
	   638      "00000000" // /* MW 2 */
	   639      "00000000" // /* MW 1 */
.return_address
.no_stack_arguments
	   640      "00010101" // 	                                                                                          JL #1232 /* MW 6 */
	   641      "00000001" // /* MW 5 */
	   642      "00000000" // /* MW 4 */
	   643      "01101000" // /* MW 3 */
	   644      "00000010" // /* MW 2 */
	   645      "00000000" // /* MW 1 */
.delay_slot
	   646      "01000011" // 	                                                                                          MOVX r0, #36;                 MOV r1, #1 /* MW 8 */
	   647      "11001000" // /* MW 7 */
	   648      "00000011" // /* MW 6 */
	   649      "00100000" // /* MW 5 */
	   650      "10001000" // /* MW 4 */
	   651      "00000100" // /* MW 3 */
	   652      "00000000" // /* MW 2 */
	   653      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   654      "00000001" // 	NOPX /* MW 2 */
	   655      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   656      "00000001" // 	NOPX /* MW 2 */
	   657      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   658      "00000001" // 	NOPX /* MW 2 */
	   659      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   660      "00110111" // 	NOPA;                         NOPB;                         NOPS;                         NOPX /* MW 12 */
	   661      "00000001" // /* MW 11 */
	   662      "00000000" // /* MW 10 */
	   663      "00000000" // /* MW 9 */
	   664      "00000000" // /* MW 8 */
	   665      "00000000" // /* MW 7 */
	   666      "00000000" // /* MW 6 */
	   667      "00000000" // /* MW 5 */
	   668      "00000000" // /* MW 4 */
	   669      "00000000" // /* MW 3 */
	   670      "00000000" // /* MW 2 */
	   671      "00000000" // /* MW 1 */
.return_address
.no_stack_arguments
	   672      "00010101" // 	                                                                                          JL #1232 /* MW 6 */
	   673      "00000001" // /* MW 5 */
	   674      "00000000" // /* MW 4 */
	   675      "01101000" // /* MW 3 */
	   676      "00000010" // /* MW 2 */
	   677      "00000000" // /* MW 1 */
.delay_slot
	   678      "01000011" // 	                                                                                          MOVX r0, #48;                 MOV r1, #1 /* MW 8 */
	   679      "11001000" // /* MW 7 */
	   680      "00000011" // /* MW 6 */
	   681      "00100000" // /* MW 5 */
	   682      "00001000" // /* MW 4 */
	   683      "00000110" // /* MW 3 */
	   684      "00000000" // /* MW 2 */
	   685      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   686      "00000001" // 	NOPX /* MW 2 */
	   687      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   688      "00000001" // 	NOPX /* MW 2 */
	   689      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   690      "00000001" // 	NOPX /* MW 2 */
	   691      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   692      "00110111" // 	NOPA;                         NOPB;                         NOPS;                         NOPX /* MW 12 */
	   693      "00000001" // /* MW 11 */
	   694      "00000000" // /* MW 10 */
	   695      "00000000" // /* MW 9 */
	   696      "00000000" // /* MW 8 */
	   697      "00000000" // /* MW 7 */
	   698      "00000000" // /* MW 6 */
	   699      "00000000" // /* MW 5 */
	   700      "00000000" // /* MW 4 */
	   701      "00000000" // /* MW 3 */
	   702      "00000000" // /* MW 2 */
	   703      "00000000" // /* MW 1 */
.return_address
.no_stack_arguments
	   704      "00010101" // 	                                                                                          JL #1200 /* MW 6 */
	   705      "00000001" // /* MW 5 */
	   706      "00000000" // /* MW 4 */
	   707      "01011000" // /* MW 3 */
	   708      "00000010" // /* MW 2 */
	   709      "00000000" // /* MW 1 */
.delay_slot
	   710      "01000011" // 	                                                                                          MOVX r0, #5;                  MOV r1, #-1 /* MW 8 */
	   711      "11001000" // /* MW 7 */
	   712      "11111111" // /* MW 6 */
	   713      "00100111" // /* MW 5 */
	   714      "10101000" // /* MW 4 */
	   715      "00000000" // /* MW 3 */
	   716      "00000000" // /* MW 2 */
	   717      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   718      "00000001" // 	NOPX /* MW 2 */
	   719      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   720      "00000001" // 	NOPX /* MW 2 */
	   721      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   722      "00000001" // 	NOPX /* MW 2 */
	   723      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   724      "00110111" // 	NOPA;                         NOPB;                         NOPS;                         NOPX /* MW 12 */
	   725      "00000001" // /* MW 11 */
	   726      "00000000" // /* MW 10 */
	   727      "00000000" // /* MW 9 */
	   728      "00000000" // /* MW 8 */
	   729      "00000000" // /* MW 7 */
	   730      "00000000" // /* MW 6 */
	   731      "00000000" // /* MW 5 */
	   732      "00000000" // /* MW 4 */
	   733      "00000000" // /* MW 3 */
	   734      "00000000" // /* MW 2 */
	   735      "00000000" // /* MW 1 */
.return_address
.no_stack_arguments
	   736      "00010101" // 	                                                                                          JL #1200 /* MW 6 */
	   737      "00000001" // /* MW 5 */
	   738      "00000000" // /* MW 4 */
	   739      "01011000" // /* MW 3 */
	   740      "00000010" // /* MW 2 */
	   741      "00000000" // /* MW 1 */
.delay_slot
	   742      "01000011" // 	                                                                                          MOVX r0, #37;                 MOV r1, #-1 /* MW 8 */
	   743      "11001000" // /* MW 7 */
	   744      "11111111" // /* MW 6 */
	   745      "00100111" // /* MW 5 */
	   746      "10101000" // /* MW 4 */
	   747      "00000100" // /* MW 3 */
	   748      "00000000" // /* MW 2 */
	   749      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   750      "00000001" // 	NOPX /* MW 2 */
	   751      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   752      "00000001" // 	NOPX /* MW 2 */
	   753      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   754      "00000001" // 	NOPX /* MW 2 */
	   755      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   756      "00110111" // 	NOPA;                         NOPB;                         NOPS;                         NOPX /* MW 12 */
	   757      "00000001" // /* MW 11 */
	   758      "00000000" // /* MW 10 */
	   759      "00000000" // /* MW 9 */
	   760      "00000000" // /* MW 8 */
	   761      "00000000" // /* MW 7 */
	   762      "00000000" // /* MW 6 */
	   763      "00000000" // /* MW 5 */
	   764      "00000000" // /* MW 4 */
	   765      "00000000" // /* MW 3 */
	   766      "00000000" // /* MW 2 */
	   767      "00000000" // /* MW 1 */
.return_address
.no_stack_arguments
	   768      "00010101" // 	                                                                                          JL #1200 /* MW 6 */
	   769      "00000001" // /* MW 5 */
	   770      "00000000" // /* MW 4 */
	   771      "01011000" // /* MW 3 */
	   772      "00000010" // /* MW 2 */
	   773      "00000000" // /* MW 1 */
.delay_slot
	   774      "01000011" // 	                                                                                          MOVX r0, #52;                 MOV r1, #-1 /* MW 8 */
	   775      "11001000" // /* MW 7 */
	   776      "11111111" // /* MW 6 */
	   777      "00100111" // /* MW 5 */
	   778      "10001000" // /* MW 4 */
	   779      "00000110" // /* MW 3 */
	   780      "00000000" // /* MW 2 */
	   781      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   782      "00000001" // 	NOPX /* MW 2 */
	   783      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   784      "00000001" // 	NOPX /* MW 2 */
	   785      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   786      "00000001" // 	NOPX /* MW 2 */
	   787      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   788      "00110111" // 	NOPA;                         NOPB;                         NOPS;                         NOPX /* MW 12 */
	   789      "00000001" // /* MW 11 */
	   790      "00000000" // /* MW 10 */
	   791      "00000000" // /* MW 9 */
	   792      "00000000" // /* MW 8 */
	   793      "00000000" // /* MW 7 */
	   794      "00000000" // /* MW 6 */
	   795      "00000000" // /* MW 5 */
	   796      "00000000" // /* MW 4 */
	   797      "00000000" // /* MW 3 */
	   798      "00000000" // /* MW 2 */
	   799      "00000000" // /* MW 1 */
.return_address
.no_stack_arguments
	   800      "00010101" // 	                                                                                          JL #1200 /* MW 6 */
	   801      "00000001" // /* MW 5 */
	   802      "00000000" // /* MW 4 */
	   803      "01011000" // /* MW 3 */
	   804      "00000010" // /* MW 2 */
	   805      "00000000" // /* MW 1 */
.delay_slot
	   806      "01000011" // 	                                                                                          MOVX r0, #49;                 MOV r1, #-1 /* MW 8 */
	   807      "11001000" // /* MW 7 */
	   808      "11111111" // /* MW 6 */
	   809      "00100111" // /* MW 5 */
	   810      "00101000" // /* MW 4 */
	   811      "00000110" // /* MW 3 */
	   812      "00000000" // /* MW 2 */
	   813      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   814      "00000001" // 	NOPX /* MW 2 */
	   815      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   816      "00000001" // 	NOPX /* MW 2 */
	   817      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   818      "00000001" // 	NOPX /* MW 2 */
	   819      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   820      "00110111" // 	NOPA;                         NOPB;                         NOPS;                         NOPX /* MW 12 */
	   821      "00000001" // /* MW 11 */
	   822      "00000000" // /* MW 10 */
	   823      "00000000" // /* MW 9 */
	   824      "00000000" // /* MW 8 */
	   825      "00000000" // /* MW 7 */
	   826      "00000000" // /* MW 6 */
	   827      "00000000" // /* MW 5 */
	   828      "00000000" // /* MW 4 */
	   829      "00000000" // /* MW 3 */
	   830      "00000000" // /* MW 2 */
	   831      "00000000" // /* MW 1 */
.return_address
	   832      "01010101" // 	                                                                                          MOVXM p0, #309248 /* MW 6 */
	   833      "00000000" // /* MW 5 */
	   834      "01110000" // /* MW 4 */
	   835      "10110000" // /* MW 3 */
	   836      "00000100" // /* MW 2 */
	   837      "00000000" // /* MW 1 */
	   838      "01010101" // 	                                                                                          MOVXM p1, #440320 /* MW 6 */
	   839      "00000000" // /* MW 5 */
	   840      "01110000" // /* MW 4 */
	   841      "10110010" // /* MW 3 */
	   842      "00000110" // /* MW 2 */
	   843      "00000000" // /* MW 1 */
	   844      "01010101" // 	                                                                                          MOVXM p3, #500736 /* MW 6 */
	   845      "00000000" // /* MW 5 */
	   846      "01101000" // /* MW 4 */
	   847      "10100110" // /* MW 3 */
	   848      "00000111" // /* MW 2 */
	   849      "00000000" // /* MW 1 */
.no_stack_arguments
	   850      "00010101" // 	                                                                                          JL #1264 /* MW 6 */
	   851      "00000001" // /* MW 5 */
	   852      "00000000" // /* MW 4 */
	   853      "01111000" // /* MW 3 */
	   854      "00000010" // /* MW 2 */
	   855      "00000000" // /* MW 1 */
.delay_slot
	   856      "01010101" // 	                                                                                          MOVXM p4, #510976 /* MW 6 */
	   857      "00000000" // /* MW 5 */
	   858      "01111000" // /* MW 4 */
	   859      "11001000" // /* MW 3 */
	   860      "00000111" // /* MW 2 */
	   861      "00000000" // /* MW 1 */
.delay_slot
	   862      "01010101" // 	                                                                                          MOVXM p2, #459776 /* MW 6 */
	   863      "00000000" // /* MW 5 */
	   864      "01101000" // /* MW 4 */
	   865      "00000100" // /* MW 3 */
	   866      "00000111" // /* MW 2 */
	   867      "00000000" // /* MW 1 */
.delay_slot
	   868      "01011001" // 	                                                                                                                        MOV r4, r17 /* MW 4 */
	   869      "10010110" // /* MW 3 */
	   870      "00001000" // /* MW 2 */
	   871      "00011001" // /* MW 1 */
.delay_slot
	   872      "10111011" // 	MOVA r3, #64;                                                                             MOVX r0, #32;                 MOV r5, r18 /* MW 10 */
	   873      "00101000" // /* MW 9 */
	   874      "10001011" // /* MW 8 */
	   875      "10100100" // /* MW 7 */
	   876      "00001000" // /* MW 6 */
	   877      "00000100" // /* MW 5 */
	   878      "00000000" // /* MW 4 */
	   879      "11001000" // /* MW 3 */
	   880      "00000000" // /* MW 2 */
	   881      "00001000" // /* MW 1 */
.delay_slot
	   882      "01111111" // 	MOVA r2, #256;                NOPB;                         NOPS;                         MOVX r1, #64;                 MOV r6, r19 /* MW 14 */
	   883      "00000000" // /* MW 13 */
	   884      "00000000" // /* MW 12 */
	   885      "00000000" // /* MW 11 */
	   886      "01100101" // /* MW 10 */
	   887      "10011001" // /* MW 9 */
	   888      "00011000" // /* MW 8 */
	   889      "00000001" // /* MW 7 */
	   890      "01000010" // /* MW 6 */
	   891      "00000000" // /* MW 5 */
	   892      "00000000" // /* MW 4 */
	   893      "10001000" // /* MW 3 */
	   894      "00000000" // /* MW 2 */
	   895      "00100000" // /* MW 1 */
.return_address
.no_stack_arguments
	   896      "00010101" // 	                                                                                          JL #1232 /* MW 6 */
	   897      "00000001" // /* MW 5 */
	   898      "00000000" // /* MW 4 */
	   899      "01101000" // /* MW 3 */
	   900      "00000010" // /* MW 2 */
	   901      "00000000" // /* MW 1 */
.delay_slot
	   902      "10111011" // 	MOVA r1, #1;                                                                              MOVX r22, #1;                 MOV r0, #53 /* MW 10 */
	   903      "11001000" // /* MW 9 */
	   904      "01101011" // /* MW 8 */
	   905      "00000000" // /* MW 7 */
	   906      "00101000" // /* MW 6 */
	   907      "01100000" // /* MW 5 */
	   908      "00000001" // /* MW 4 */
	   909      "01001000" // /* MW 3 */
	   910      "00100000" // /* MW 2 */
	   911      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   912      "00000001" // 	NOPX /* MW 2 */
	   913      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   914      "00000001" // 	NOPX /* MW 2 */
	   915      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   916      "00000001" // 	NOPX /* MW 2 */
	   917      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   918      "10111011" // 	NOPA;                         NOPB;                                                                                     NOPM /* MW 10 */
	   919      "10001110" // /* MW 9 */
	   920      "00000011" // /* MW 8 */
	   921      "00000000" // /* MW 7 */
	   922      "00000000" // /* MW 6 */
	   923      "00000000" // /* MW 5 */
	   924      "00000000" // /* MW 4 */
	   925      "00000000" // /* MW 3 */
	   926      "00000000" // /* MW 2 */
	   927      "00000000" // /* MW 1 */
.return_address
.no_stack_arguments
	   928      "00010101" // 	                                                                                          JL #1232 /* MW 6 */
	   929      "00000001" // /* MW 5 */
	   930      "00000000" // /* MW 4 */
	   931      "01101000" // /* MW 3 */
	   932      "00000010" // /* MW 2 */
	   933      "00000000" // /* MW 1 */
.delay_slot
	   934      "01000011" // 	                                                                                          MOVX r0, #4;                  MOV r1, #1 /* MW 8 */
	   935      "11001000" // /* MW 7 */
	   936      "00000011" // /* MW 6 */
	   937      "00100000" // /* MW 5 */
	   938      "10001000" // /* MW 4 */
	   939      "00000000" // /* MW 3 */
	   940      "00000000" // /* MW 2 */
	   941      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   942      "00000001" // 	NOPX /* MW 2 */
	   943      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   944      "00000001" // 	NOPX /* MW 2 */
	   945      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   946      "00000001" // 	NOPX /* MW 2 */
	   947      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   948      "00110111" // 	NOPA;                         NOPB;                         NOPS;                         NOPX /* MW 12 */
	   949      "00000001" // /* MW 11 */
	   950      "00000000" // /* MW 10 */
	   951      "00000000" // /* MW 9 */
	   952      "00000000" // /* MW 8 */
	   953      "00000000" // /* MW 7 */
	   954      "00000000" // /* MW 6 */
	   955      "00000000" // /* MW 5 */
	   956      "00000000" // /* MW 4 */
	   957      "00000000" // /* MW 3 */
	   958      "00000000" // /* MW 2 */
	   959      "00000000" // /* MW 1 */
.return_address
.no_stack_arguments
	   960      "00010101" // 	                                                                                          JL #1232 /* MW 6 */
	   961      "00000001" // /* MW 5 */
	   962      "00000000" // /* MW 4 */
	   963      "01101000" // /* MW 3 */
	   964      "00000010" // /* MW 2 */
	   965      "00000000" // /* MW 1 */
.delay_slot
	   966      "01000011" // 	                                                                                          MOVX r0, #36;                 MOV r1, #1 /* MW 8 */
	   967      "11001000" // /* MW 7 */
	   968      "00000011" // /* MW 6 */
	   969      "00100000" // /* MW 5 */
	   970      "10001000" // /* MW 4 */
	   971      "00000100" // /* MW 3 */
	   972      "00000000" // /* MW 2 */
	   973      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   974      "00000001" // 	NOPX /* MW 2 */
	   975      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   976      "00000001" // 	NOPX /* MW 2 */
	   977      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   978      "00000001" // 	NOPX /* MW 2 */
	   979      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   980      "00110111" // 	NOPA;                         NOPB;                         NOPS;                         NOPX /* MW 12 */
	   981      "00000001" // /* MW 11 */
	   982      "00000000" // /* MW 10 */
	   983      "00000000" // /* MW 9 */
	   984      "00000000" // /* MW 8 */
	   985      "00000000" // /* MW 7 */
	   986      "00000000" // /* MW 6 */
	   987      "00000000" // /* MW 5 */
	   988      "00000000" // /* MW 4 */
	   989      "00000000" // /* MW 3 */
	   990      "00000000" // /* MW 2 */
	   991      "00000000" // /* MW 1 */
.return_address
.no_stack_arguments
	   992      "00010101" // 	                                                                                          JL #1232 /* MW 6 */
	   993      "00000001" // /* MW 5 */
	   994      "00000000" // /* MW 4 */
	   995      "01101000" // /* MW 3 */
	   996      "00000010" // /* MW 2 */
	   997      "00000000" // /* MW 1 */
.delay_slot
	   998      "01000011" // 	                                                                                          MOVX r0, #48;                 MOV r1, #1 /* MW 8 */
	   999      "11001000" // /* MW 7 */
	  1000      "00000011" // /* MW 6 */
	  1001      "00100000" // /* MW 5 */
	  1002      "00001000" // /* MW 4 */
	  1003      "00000110" // /* MW 3 */
	  1004      "00000000" // /* MW 2 */
	  1005      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1006      "00000001" // 	NOPX /* MW 2 */
	  1007      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1008      "00000001" // 	NOPX /* MW 2 */
	  1009      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1010      "00000001" // 	NOPX /* MW 2 */
	  1011      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1012      "00110111" // 	NOPA;                         NOPB;                         NOPS;                         NOPX /* MW 12 */
	  1013      "00000001" // /* MW 11 */
	  1014      "00000000" // /* MW 10 */
	  1015      "00000000" // /* MW 9 */
	  1016      "00000000" // /* MW 8 */
	  1017      "00000000" // /* MW 7 */
	  1018      "00000000" // /* MW 6 */
	  1019      "00000000" // /* MW 5 */
	  1020      "00000000" // /* MW 4 */
	  1021      "00000000" // /* MW 3 */
	  1022      "00000000" // /* MW 2 */
	  1023      "00000000" // /* MW 1 */
.return_address
	  1024      "00011001" // 	                                                                                          JNZD r16, r16, p6 /* MW 4 */
	  1025      "10001100" // /* MW 3 */
	  1026      "00100001" // /* MW 2 */
	  1027      "00010100" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1028      "00000001" // 	NOPX /* MW 2 */
	  1029      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1030      "00000001" // 	NOPX /* MW 2 */
	  1031      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1032      "00000001" // 	NOPX /* MW 2 */
	  1033      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1034      "00000001" // 	NOPX /* MW 2 */
	  1035      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1036      "00000001" // 	NOPX /* MW 2 */
	  1037      "00000000" // /* MW 1 */
.loop_nesting 1
	  1038      "01011001" // 	LDA r17, [sp, #-56] /* MW 4 */
	  1039      "01100010" // /* MW 3 */
	  1040      "11111001" // /* MW 2 */
	  1041      "00000111" // /* MW 1 */
	  1042      "00000001" // 	NOPX /* MW 2 */
	  1043      "00000000" // /* MW 1 */
.no_stack_arguments
	  1044      "00010101" // 	                                                                                          JL #1232 /* MW 6 */
	  1045      "00000001" // /* MW 5 */
	  1046      "00000000" // /* MW 4 */
	  1047      "01101000" // /* MW 3 */
	  1048      "00000010" // /* MW 2 */
	  1049      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1050      "00000001" // 	NOPX /* MW 2 */
	  1051      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1052      "00000001" // 	NOPX /* MW 2 */
	  1053      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1054      "00000001" // 	NOPX /* MW 2 */
	  1055      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1056      "00000001" // 	NOPX /* MW 2 */
	  1057      "00000000" // /* MW 1 */
.delay_slot
	  1058      "01111111" // 	MOVA r16, #0;                 NOPB;                         NOPS;                         MOVX r0, #50;                 MOV r1, #1 /* MW 14 */
	  1059      "00000000" // /* MW 13 */
	  1060      "00000000" // /* MW 12 */
	  1061      "00000000" // /* MW 11 */
	  1062      "01111001" // /* MW 10 */
	  1063      "00000000" // /* MW 9 */
	  1064      "00000100" // /* MW 8 */
	  1065      "11001001" // /* MW 7 */
	  1066      "00000000" // /* MW 6 */
	  1067      "00000000" // /* MW 5 */
	  1068      "00000000" // /* MW 4 */
	  1069      "00001000" // /* MW 3 */
	  1070      "00000100" // /* MW 2 */
	  1071      "00000000" // /* MW 1 */
.return_address
	  1072      "00011101" // 	LDA r24, [sp, #-48];                                                                      ADD r21, r17, #1 /* MW 6 */
	  1073      "00000111" // /* MW 5 */
	  1074      "01101010" // /* MW 4 */
	  1075      "00001100" // /* MW 3 */
	  1076      "01001110" // /* MW 2 */
	  1077      "11111111" // /* MW 1 */
	  1078      "10011001" // 	                                                                                          NE r25, r21, r20 /* MW 4 */
	  1079      "01001000" // /* MW 3 */
	  1080      "01110011" // /* MW 2 */
	  1081      "00010101" // /* MW 1 */
	  1082      "00000001" // 	NOPX /* MW 2 */
	  1083      "00000000" // /* MW 1 */
	  1084      "00000001" // 	NOPX /* MW 2 */
	  1085      "00000000" // /* MW 1 */
	  1086      "00000001" // 	NOPX /* MW 2 */
	  1087      "00000000" // /* MW 1 */
	  1088      "00000001" // 	NOPX /* MW 2 */
	  1089      "00000000" // /* MW 1 */
	  1090      "00000001" // 	NOPX /* MW 2 */
	  1091      "00000000" // /* MW 1 */
	  1092      "10011001" // 	                                                                                          ADC r24, r24, r16 /* MW 4 */
	  1093      "00000010" // /* MW 3 */
	  1094      "00110001" // /* MW 2 */
	  1095      "00010110" // /* MW 1 */
	  1096      "00111101" // 	                                                            ST r24, [sp, #-48];           EQZ r26, r24 /* MW 6 */
	  1097      "11011100" // /* MW 5 */
	  1098      "00110100" // /* MW 4 */
	  1099      "00000110" // /* MW 3 */
	  1100      "01001110" // /* MW 2 */
	  1101      "11111111" // /* MW 1 */
	  1102      "10011001" // 	                                                                                          LT r24, r24, r16 /* MW 4 */
	  1103      "00001010" // /* MW 3 */
	  1104      "00110001" // /* MW 2 */
	  1105      "00010110" // /* MW 1 */
	  1106      "10011001" // 	                                                                                          AND r25, r25, r26 /* MW 4 */
	  1107      "10100100" // /* MW 3 */
	  1108      "01110011" // /* MW 2 */
	  1109      "00010110" // /* MW 1 */
	  1110      "10011001" // 	                                                                                          OR r24, r25, r24 /* MW 4 */
	  1111      "10000101" // /* MW 3 */
	  1112      "01110001" // /* MW 2 */
	  1113      "00010110" // /* MW 1 */
	  1114      "10010101" // 	                                                                                          JNZ r24, #320 /* MW 6 */
	  1115      "00000001" // /* MW 5 */
	  1116      "01000000" // /* MW 4 */
	  1117      "10100000" // /* MW 3 */
	  1118      "00000000" // /* MW 2 */
	  1119      "11000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1120      "00000001" // 	NOPX /* MW 2 */
	  1121      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1122      "00000001" // 	NOPX /* MW 2 */
	  1123      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1124      "00000001" // 	NOPX /* MW 2 */
	  1125      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1126      "00000001" // 	NOPX /* MW 2 */
	  1127      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1128      "00000001" // 	NOPX /* MW 2 */
	  1129      "00000000" // /* MW 1 */
.loop_nesting 0
	  1130      "11011001" // 	LDA lr, [sp, #-44] /* MW 4 */
	  1131      "11000010" // /* MW 3 */
	  1132      "11111010" // /* MW 2 */
	  1133      "00000111" // /* MW 1 */
	  1134      "01011001" // 	LDA r16, [sp, #-4] /* MW 4 */
	  1135      "11100000" // /* MW 3 */
	  1136      "11111111" // /* MW 2 */
	  1137      "00000111" // /* MW 1 */
	  1138      "01011001" // 	LDA r17, [sp, #-8] /* MW 4 */
	  1139      "01100010" // /* MW 3 */
	  1140      "11111111" // /* MW 2 */
	  1141      "00000111" // /* MW 1 */
	  1142      "01011001" // 	LDA r20, [sp, #-12] /* MW 4 */
	  1143      "11101000" // /* MW 3 */
	  1144      "11111110" // /* MW 2 */
	  1145      "00000111" // /* MW 1 */
	  1146      "01011001" // 	LDA r19, [sp, #-16] /* MW 4 */
	  1147      "01100110" // /* MW 3 */
	  1148      "11111110" // /* MW 2 */
	  1149      "00000111" // /* MW 1 */
	  1150      "01011001" // 	LDA r18, [sp, #-20] /* MW 4 */
	  1151      "11100100" // /* MW 3 */
	  1152      "11111101" // /* MW 2 */
	  1153      "00000111" // /* MW 1 */
	  1154      "01011001" // 	LDA r21, [sp, #-24] /* MW 4 */
	  1155      "01101010" // /* MW 3 */
	  1156      "11111101" // /* MW 2 */
	  1157      "00000111" // /* MW 1 */
	  1158      "01011001" // 	LDA r22, [sp, #-28] /* MW 4 */
	  1159      "11101100" // /* MW 3 */
	  1160      "11111100" // /* MW 2 */
	  1161      "00000111" // /* MW 1 */
	  1162      "01011001" // 	LDA r23, [sp, #-32] /* MW 4 */
	  1163      "01101110" // /* MW 3 */
	  1164      "11111100" // /* MW 2 */
	  1165      "00000111" // /* MW 1 */
	  1166      "11011001" // 	LDA p7, [sp, #-36] /* MW 4 */
	  1167      "11111110" // /* MW 3 */
	  1168      "11111011" // /* MW 2 */
	  1169      "00000111" // /* MW 1 */
	  1170      "11011001" // 	LDA p6, [sp, #-40] /* MW 4 */
	  1171      "01110110" // /* MW 3 */
	  1172      "11111011" // /* MW 2 */
	  1173      "00000111" // /* MW 1 */
	  1174      "00011001" // 	                                                                                          RET lr /* MW 4 */
	  1175      "00011000" // /* MW 3 */
	  1176      "00000000" // /* MW 2 */
	  1177      "00010000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1178      "00000001" // 	NOPX /* MW 2 */
	  1179      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1180      "00000001" // 	NOPX /* MW 2 */
	  1181      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1182      "00000001" // 	NOPX /* MW 2 */
	  1183      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1184      "00000001" // 	NOPX /* MW 2 */
	  1185      "00000000" // /* MW 1 */
.delay_slot
	  1186      "01111111" // 	NOPA;                         PADDB [sp], #-64;             NOPS;                         NOPX;                         NOPM /* MW 14 */
	  1187      "00000000" // /* MW 13 */
	  1188      "00000000" // /* MW 12 */
	  1189      "00000000" // /* MW 11 */
	  1190      "01110001" // /* MW 10 */
	  1191      "00000000" // /* MW 9 */
	  1192      "00000000" // /* MW 8 */
	  1193      "00000000" // /* MW 7 */
	  1194      "00000000" // /* MW 6 */
	  1195      "11000000" // /* MW 5 */
	  1196      "11111111" // /* MW 4 */
	  1197      "00000111" // /* MW 3 */
	  1198      "00000000" // /* MW 2 */
.label core_0_4__end
	  1199      "00000000" // /* MW 1 */
.label llvm___aie2___acquire
.function_start
	  1200      "00011001" // 	                                                                                          ACQ r0, r1 /* MW 4 */
	  1201      "00010010" // /* MW 3 */
	  1202      "00010010" // /* MW 2 */
	  1203      "00010000" // /* MW 1 */
	  1204      "00011001" // 	                                                                                          RET lr /* MW 4 */
	  1205      "00011000" // /* MW 3 */
	  1206      "00000000" // /* MW 2 */
	  1207      "00010000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1208      "00000001" // 	NOPX /* MW 2 */
	  1209      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1210      "00000001" // 	NOPX /* MW 2 */
	  1211      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1212      "00000001" // 	NOPX /* MW 2 */
	  1213      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1214      "00000001" // 	NOPX /* MW 2 */
	  1215      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1216      "11000000" // 	NOPA;                         NOPB;                         NOPS;                         NOPX;                         NOPM;                                   NOPV /* MW 16 */
	  1217      "00000011" // /* MW 15 */
	  1218      "00000000" // /* MW 14 */
	  1219      "10001000" // /* MW 13 */
	  1220      "00000011" // /* MW 12 */
	  1221      "00000000" // /* MW 11 */
	  1222      "00000000" // /* MW 10 */
	  1223      "00000000" // /* MW 9 */
	  1224      "00000000" // /* MW 8 */
	  1225      "00000000" // /* MW 7 */
	  1226      "00000000" // /* MW 6 */
	  1227      "00000000" // /* MW 5 */
	  1228      "00000000" // /* MW 4 */
	  1229      "00000000" // /* MW 3 */
	  1230      "00000000" // /* MW 2 */
.label llvm___aie2___acquire__end
	  1231      "00000000" // /* MW 1 */
.label llvm___aie2___release
.function_start
	  1232      "00000001" // 	NOPX /* MW 2 */
	  1233      "00000000" // /* MW 1 */
	  1234      "00000001" // 	NOPX /* MW 2 */
	  1235      "00000000" // /* MW 1 */
	  1236      "00000001" // 	NOPX /* MW 2 */
	  1237      "00000000" // /* MW 1 */
	  1238      "00000001" // 	NOPX /* MW 2 */
	  1239      "00000000" // /* MW 1 */
	  1240      "00000001" // 	NOPX /* MW 2 */
	  1241      "00000000" // /* MW 1 */
	  1242      "00000001" // 	NOPX /* MW 2 */
	  1243      "00000000" // /* MW 1 */
	  1244      "00011001" // 	                                                                                          REL r0, r1 /* MW 4 */
	  1245      "00010010" // /* MW 3 */
	  1246      "00010000" // /* MW 2 */
	  1247      "00010000" // /* MW 1 */
	  1248      "00011001" // 	                                                                                          RET lr /* MW 4 */
	  1249      "00011000" // /* MW 3 */
	  1250      "00000000" // /* MW 2 */
	  1251      "00010000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1252      "00000001" // 	NOPX /* MW 2 */
	  1253      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1254      "00000001" // 	NOPX /* MW 2 */
	  1255      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1256      "00000001" // 	NOPX /* MW 2 */
	  1257      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1258      "00000001" // 	NOPX /* MW 2 */
	  1259      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1260      "00011001" // 	NOPA /* MW 4 */
	  1261      "00000000" // /* MW 3 */
	  1262      "00000000" // /* MW 2 */
.label llvm___aie2___release__end
	  1263      "00000000" // /* MW 1 */
.label conv2dk1_skip
.function_start
	  1264      "00111011" // 	                              PADDB [sp], #288;                                           MUL r25, r1, r2;              MOV r12, #8 /* MW 10 */
	  1265      "01001000" // /* MW 9 */
	  1266      "00010011" // /* MW 8 */
	  1267      "10000000" // /* MW 7 */
	  1268      "01111101" // /* MW 6 */
	  1269      "10010001" // /* MW 5 */
	  1270      "00000011" // /* MW 4 */
	  1271      "00100000" // /* MW 3 */
	  1272      "00000111" // /* MW 2 */
	  1273      "00000000" // /* MW 1 */
	  1274      "00011001" // 	                                                            ST r20, [sp, #-28] /* MW 4 */
	  1275      "11101000" // /* MW 3 */
	  1276      "11111100" // /* MW 2 */
	  1277      "00001111" // /* MW 1 */
	  1278      "10111101" // 	                                                            ST r23, [sp, #-40];           LT r20, r2, r12 /* MW 6 */
	  1279      "11001010" // /* MW 5 */
	  1280      "10101000" // /* MW 4 */
	  1281      "11000000" // /* MW 3 */
	  1282      "01101101" // /* MW 2 */
	  1283      "11111111" // /* MW 1 */
	  1284      "00011001" // 	                                                            ST r22, [sp, #-36] /* MW 4 */
	  1285      "11101100" // /* MW 3 */
	  1286      "11111011" // /* MW 2 */
	  1287      "00001111" // /* MW 1 */
	  1288      "00011001" // 	                                                            ST r21, [sp, #-32] /* MW 4 */
	  1289      "01101010" // /* MW 3 */
	  1290      "11111100" // /* MW 2 */
	  1291      "00001111" // /* MW 1 */
	  1292      "00011001" // 	                                                            ST r19, [sp, #-24] /* MW 4 */
	  1293      "01100110" // /* MW 3 */
	  1294      "11111101" // /* MW 2 */
	  1295      "00001111" // /* MW 1 */
	  1296      "00011001" // 	                                                            ST r18, [sp, #-20] /* MW 4 */
	  1297      "11100100" // /* MW 3 */
	  1298      "11111101" // /* MW 2 */
	  1299      "00001111" // /* MW 1 */
	  1300      "00011001" // 	                                                            ST r17, [sp, #-16] /* MW 4 */
	  1301      "01100010" // /* MW 3 */
	  1302      "11111110" // /* MW 2 */
	  1303      "00001111" // /* MW 1 */
	  1304      "00011001" // 	                                                            ST r16, [sp, #-12] /* MW 4 */
	  1305      "11100000" // /* MW 3 */
	  1306      "11111110" // /* MW 2 */
	  1307      "00001111" // /* MW 1 */
	  1308      "10011001" // 	                                                            ST p7, [sp, #-8] /* MW 4 */
	  1309      "01111110" // /* MW 3 */
	  1310      "11111111" // /* MW 2 */
	  1311      "00001111" // /* MW 1 */
	  1312      "00111011" // 	                                                            ST p6, [sp, #-4];             JNZ r20, #3440 /* MW 10 */
	  1313      "01100001" // /* MW 9 */
	  1314      "00000000" // /* MW 8 */
	  1315      "00010000" // /* MW 7 */
	  1316      "10101110" // /* MW 6 */
	  1317      "00000001" // /* MW 5 */
	  1318      "00101000" // /* MW 4 */
	  1319      "11010000" // /* MW 3 */
	  1320      "11111110" // /* MW 2 */
	  1321      "11111111" // /* MW 1 */
.delay_slot
	  1322      "00111011" // 	                                                            ST p4, [sp, #-56];            EVENT #0;                     MOV r7, #-31 /* MW 10 */
	  1323      "11001001" // /* MW 9 */
	  1324      "11000011" // /* MW 8 */
	  1325      "11100111" // /* MW 7 */
	  1326      "10000000" // /* MW 6 */
	  1327      "00000000" // /* MW 5 */
	  1328      "00000000" // /* MW 4 */
	  1329      "11010000" // /* MW 3 */
	  1330      "00101100" // /* MW 2 */
	  1331      "11111111" // /* MW 1 */
.delay_slot
	  1332      "00111011" // 	                                                            ST p2, [sp, #-52];            ASHL r8, r2, r7;              MOV r13, #-29 /* MW 10 */
	  1333      "11001001" // /* MW 9 */
	  1334      "11000111" // /* MW 8 */
	  1335      "10100111" // /* MW 7 */
	  1336      "11110101" // /* MW 6 */
	  1337      "10000011" // /* MW 5 */
	  1338      "00000100" // /* MW 4 */
	  1339      "11010000" // /* MW 3 */
	  1340      "00111010" // /* MW 2 */
	  1341      "11111111" // /* MW 1 */
.delay_slot
	  1342      "10111101" // 	                                                            ST p1, [sp, #-48];            LSHL r22, r8, r13 /* MW 6 */
	  1343      "11011101" // /* MW 5 */
	  1344      "00101100" // /* MW 4 */
	  1345      "11010010" // /* MW 3 */
	  1346      "01001001" // /* MW 2 */
	  1347      "11111111" // /* MW 1 */
.delay_slot
	  1348      "00111011" // 	                                                            ST p0, [sp, #-44];            ADD r21, r22, r2;             MOV r9, #-3 /* MW 10 */
	  1349      "11001001" // /* MW 9 */
	  1350      "11111011" // /* MW 8 */
	  1351      "00100111" // /* MW 7 */
	  1352      "00000101" // /* MW 6 */
	  1353      "01010001" // /* MW 5 */
	  1354      "00101101" // /* MW 4 */
	  1355      "11010000" // /* MW 3 */
	  1356      "01011000" // /* MW 2 */
	  1357      "11111111" // /* MW 1 */
.delay_slot
	  1358      "00111011" // 	                                                            ST r5, [sp, #-60];            ASHL r19, r21, r9;            MOV r23, p3 /* MW 10 */
	  1359      "00101001" // /* MW 9 */
	  1360      "00111011" // /* MW 8 */
	  1361      "11100011" // /* MW 7 */
	  1362      "11110110" // /* MW 6 */
	  1363      "00110100" // /* MW 5 */
	  1364      "00101011" // /* MW 4 */
	  1365      "01000000" // /* MW 3 */
	  1366      "00011001" // /* MW 2 */
	  1367      "11111111" // /* MW 1 */
	  1368      "10111011" // 	MOVA r11, #-4;                                                                            ASHL r20, r3, r7;             MOV r18, #-28 /* MW 10 */
	  1369      "01001000" // /* MW 9 */
	  1370      "11001011" // /* MW 8 */
	  1371      "01000111" // /* MW 7 */
	  1372      "11110110" // /* MW 6 */
	  1373      "01000011" // /* MW 5 */
	  1374      "00000111" // /* MW 4 */
	  1375      "11001000" // /* MW 3 */
	  1376      "10000010" // /* MW 2 */
	  1377      "11111111" // /* MW 1 */
	  1378      "10111011" // 	MOVA r2, #0;                                                                              LSHL r15, r20, r13;           ADD.NC r20, r0, #-1 /* MW 10 */
	  1379      "11111000" // /* MW 9 */
	  1380      "00111111" // /* MW 8 */
	  1381      "10000000" // /* MW 7 */
	  1382      "11101110" // /* MW 6 */
	  1383      "11110110" // /* MW 5 */
	  1384      "00101000" // /* MW 4 */
	  1385      "10001000" // /* MW 3 */
	  1386      "00000000" // /* MW 2 */
	  1387      "00000000" // /* MW 1 */
	  1388      "01110111" // 	MOVA r10, #-1;                                              ST r20, [sp, #-80];           ASHL r17, r1, r7;             ADD.NC r21, r19, #-1 /* MW 12 */
	  1389      "11111000" // /* MW 11 */
	  1390      "11111111" // /* MW 10 */
	  1391      "10100100" // /* MW 9 */
	  1392      "11110110" // /* MW 8 */
	  1393      "00010011" // /* MW 7 */
	  1394      "00000011" // /* MW 6 */
	  1395      "01101000" // /* MW 5 */
	  1396      "11110110" // /* MW 4 */
	  1397      "10001111" // /* MW 3 */
	  1398      "11100010" // /* MW 2 */
	  1399      "11111111" // /* MW 1 */
	  1400      "01110111" // 	MOVA r28, #1;                                               ST r2, [sp, #-68];            LSHL r20, r17, r13;           MOV r16, #6 /* MW 12 */
	  1401      "01001000" // /* MW 11 */
	  1402      "00001111" // /* MW 10 */
	  1403      "00000000" // /* MW 9 */
	  1404      "11101110" // /* MW 8 */
	  1405      "01000110" // /* MW 7 */
	  1406      "00100011" // /* MW 6 */
	  1407      "11000100" // /* MW 5 */
	  1408      "11110111" // /* MW 4 */
	  1409      "00001111" // /* MW 3 */
	  1410      "00100111" // /* MW 2 */
	  1411      "00000000" // /* MW 1 */
	  1412      "10111011" // 	MOVA r14, #32;                                                                            LSHL r18, r17, r18;           ADD.NC r8, r6, #-1 /* MW 10 */
	  1413      "11111000" // /* MW 9 */
	  1414      "10111111" // /* MW 8 */
	  1415      "00000001" // /* MW 7 */
	  1416      "01101101" // /* MW 6 */
	  1417      "00101001" // /* MW 5 */
	  1418      "00100011" // /* MW 4 */
	  1419      "10001000" // /* MW 3 */
	  1420      "00000011" // /* MW 2 */
	  1421      "00000100" // /* MW 1 */
	  1422      "10111011" // 	MOVA r17, #16;                                                                            ADD r13, r1, r18;             ADD.NC r22, r5, #-1 /* MW 10 */
	  1423      "11111000" // /* MW 9 */
	  1424      "01111111" // /* MW 8 */
	  1425      "11000001" // /* MW 7 */
	  1426      "00000110" // /* MW 6 */
	  1427      "11011001" // /* MW 5 */
	  1428      "00000010" // /* MW 4 */
	  1429      "01001000" // /* MW 3 */
	  1430      "00000100" // /* MW 2 */
	  1431      "00000010" // /* MW 1 */
	  1432      "10111011" // 	MOVA r18, #3;                                                                             ASHL r26, r13, r11;           ADD.NC r31, r4, #-1 /* MW 10 */
	  1433      "11111000" // /* MW 9 */
	  1434      "00111111" // /* MW 8 */
	  1435      "11100001" // /* MW 7 */
	  1436      "11110111" // /* MW 6 */
	  1437      "10100101" // /* MW 5 */
	  1438      "00011011" // /* MW 4 */
	  1439      "10001000" // /* MW 3 */
	  1440      "01100100" // /* MW 2 */
	  1441      "00000000" // /* MW 1 */
	  1442      "01110111" // 	MOVA r13, #127;                                             ST r26, [sp, #-132];          ADD r19, r15, r3;             MOV r30, #0 /* MW 12 */
	  1443      "01001000" // /* MW 11 */
	  1444      "00000011" // /* MW 10 */
	  1445      "11000000" // /* MW 9 */
	  1446      "10000111" // /* MW 8 */
	  1447      "00110001" // /* MW 7 */
	  1448      "00011111" // /* MW 6 */
	  1449      "11110100" // /* MW 5 */
	  1450      "11101111" // /* MW 4 */
	  1451      "01001111" // /* MW 3 */
	  1452      "11100011" // /* MW 2 */
	  1453      "00001111" // /* MW 1 */
	  1454      "00111011" // 	                                                            ST r30, [sp, #-64];           LT r12, r3, r12;              MOV m0, #8 /* MW 10 */
	  1455      "01001001" // /* MW 9 */
	  1456      "00010011" // /* MW 8 */
	  1457      "00010000" // /* MW 7 */
	  1458      "01010100" // /* MW 6 */
	  1459      "11000110" // /* MW 5 */
	  1460      "00000110" // /* MW 4 */
	  1461      "10000000" // /* MW 3 */
	  1462      "00001111" // /* MW 2 */
	  1463      "11111111" // /* MW 1 */
	  1464      "00111011" // 	                                                            ST r12, [sp, #-76];           MUL r3, r26, r0;              MOV m1, #64 /* MW 10 */
	  1465      "01001001" // /* MW 9 */
	  1466      "10000011" // /* MW 8 */
	  1467      "00110000" // /* MW 7 */
	  1468      "01111100" // /* MW 6 */
	  1469      "00110000" // /* MW 5 */
	  1470      "00110100" // /* MW 4 */
	  1471      "00000000" // /* MW 3 */
	  1472      "11011011" // /* MW 2 */
	  1473      "11111110" // /* MW 1 */
	  1474      "01010101" // 	                                                                                          MOVXM p7, #1648 /* MW 6 */
	  1475      "11100000" // /* MW 5 */
	  1476      "01101100" // /* MW 4 */
	  1477      "00001110" // /* MW 3 */
	  1478      "00000000" // /* MW 2 */
	  1479      "00000000" // /* MW 1 */
	  1480      "10111101" // 	                                                            ST r3, [sp, #-144];           ADD r20, r1, r20 /* MW 6 */
	  1481      "01000000" // /* MW 5 */
	  1482      "01101001" // /* MW 4 */
	  1483      "11000000" // /* MW 3 */
	  1484      "11001000" // /* MW 2 */
	  1485      "11111101" // /* MW 1 */
	  1486      "10011001" // 	                                                                                          ASHL r20, r20, r9 /* MW 4 */
	  1487      "10011110" // /* MW 3 */
	  1488      "00101000" // /* MW 2 */
	  1489      "00010101" // /* MW 1 */
	  1490      "10011001" // 	                                                                                          XOR r27, r26, r10 /* MW 4 */
	  1491      "10100110" // /* MW 3 */
	  1492      "10110110" // /* MW 2 */
	  1493      "00010110" // /* MW 1 */
	  1494      "10011001" // 	                                                                                          ASHL r19, r19, r9 /* MW 4 */
	  1495      "10011110" // /* MW 3 */
	  1496      "11100110" // /* MW 2 */
	  1497      "00010100" // /* MW 1 */
	  1498      "10111101" // 	                                                            ST r19, [sp, #-124];          SUB r24, r2, r6 /* MW 6 */
	  1499      "01100001" // /* MW 5 */
	  1500      "10110000" // /* MW 4 */
	  1501      "11000000" // /* MW 3 */
	  1502      "00011100" // /* MW 2 */
	  1503      "11111110" // /* MW 1 */
	  1504      "10111101" // 	                                                            ST r24, [sp, #-96];           LSHL r9, r28, r22 /* MW 6 */
	  1505      "01101101" // /* MW 5 */
	  1506      "00010011" // /* MW 4 */
	  1507      "00000111" // /* MW 3 */
	  1508      "10001110" // /* MW 2 */
	  1509      "11111110" // /* MW 1 */
	  1510      "10111101" // 	                                                            ST r9, [sp, #-120];           GE r3, r26, r20 /* MW 6 */
	  1511      "01001001" // /* MW 5 */
	  1512      "10000111" // /* MW 4 */
	  1513      "01000110" // /* MW 3 */
	  1514      "00101010" // /* MW 2 */
	  1515      "11111110" // /* MW 1 */
	  1516      "10111101" // 	                                                            ST r3, [sp, #-148];           LSHL r11, r20, r16 /* MW 6 */
	  1517      "00001101" // /* MW 5 */
	  1518      "00010111" // /* MW 4 */
	  1519      "11000101" // /* MW 3 */
	  1520      "10111000" // /* MW 2 */
	  1521      "11111101" // /* MW 1 */
	  1522      "10111101" // 	                                                            ST r11, [sp, #-136];          SUB r10, r14, r5 /* MW 6 */
	  1523      "01010001" // /* MW 5 */
	  1524      "10010100" // /* MW 4 */
	  1525      "11000011" // /* MW 3 */
	  1526      "11101010" // /* MW 2 */
	  1527      "11111101" // /* MW 1 */
	  1528      "10111101" // 	                                                            ST r10, [sp, #-104];          LSHL r8, r28, r8 /* MW 6 */
	  1529      "10001101" // /* MW 5 */
	  1530      "00010000" // /* MW 4 */
	  1531      "10000111" // /* MW 3 */
	  1532      "01101010" // /* MW 2 */
	  1533      "11111110" // /* MW 1 */
	  1534      "10111101" // 	                                                            ST r8, [sp, #-116];           LSHL r6, r26, r16 /* MW 6 */
	  1535      "00001101" // /* MW 5 */
	  1536      "10001101" // /* MW 4 */
	  1537      "00000110" // /* MW 3 */
	  1538      "00111010" // /* MW 2 */
	  1539      "11111110" // /* MW 1 */
	  1540      "00111011" // 	                                                            ST r6, [sp, #-72];            LT r11, r1, r17;              MOV r17, #5 /* MW 10 */
	  1541      "11001001" // /* MW 9 */
	  1542      "00001011" // /* MW 8 */
	  1543      "00100000" // /* MW 7 */
	  1544      "11010110" // /* MW 6 */
	  1545      "10111000" // /* MW 5 */
	  1546      "00000010" // /* MW 4 */
	  1547      "10000000" // /* MW 3 */
	  1548      "11101001" // /* MW 2 */
	  1549      "11111110" // /* MW 1 */
	  1550      "10111101" // 	                                                            ST r11, [sp, #-84];           GE r22, r2, r0 /* MW 6 */
	  1551      "00001001" // /* MW 5 */
	  1552      "10101100" // /* MW 4 */
	  1553      "11000000" // /* MW 3 */
	  1554      "10111010" // /* MW 2 */
	  1555      "11111110" // /* MW 1 */
	  1556      "00111011" // 	                                                            ST r22, [sp, #-88];           SUB r15, r2, r4;              MOV r4, #-128 /* MW 10 */
	  1557      "01001001" // /* MW 9 */
	  1558      "00000011" // /* MW 8 */
	  1559      "10000111" // /* MW 7 */
	  1560      "00001100" // /* MW 6 */
	  1561      "11110010" // /* MW 5 */
	  1562      "00000100" // /* MW 4 */
	  1563      "10000000" // /* MW 3 */
	  1564      "10101101" // /* MW 2 */
	  1565      "11111110" // /* MW 1 */
	  1566      "00111011" // 	                                                            ST r15, [sp, #-92];           LSHL r18, r0, r18;            MOV r0, #255 /* MW 10 */
	  1567      "11001001" // /* MW 9 */
	  1568      "11111111" // /* MW 8 */
	  1569      "00000001" // /* MW 7 */
	  1570      "01101100" // /* MW 6 */
	  1571      "00101001" // /* MW 5 */
	  1572      "00000001" // /* MW 4 */
	  1573      "11000000" // /* MW 3 */
	  1574      "10011011" // /* MW 2 */
	  1575      "11111110" // /* MW 1 */
	  1576      "01000011" // 	                                                                                          LSHL r19, r19, r16;           MOV m2, r18 /* MW 8 */
	  1577      "00101000" // /* MW 7 */
	  1578      "10001011" // /* MW 6 */
	  1579      "01010100" // /* MW 5 */
	  1580      "01101100" // /* MW 4 */
	  1581      "00111000" // /* MW 3 */
	  1582      "00100111" // /* MW 2 */
	  1583      "00000000" // /* MW 1 */
	  1584      "00111011" // 	                                                            ST r19, [sp, #-140];          ADD r20, r27, r20;            MOV r19, #7 /* MW 10 */
	  1585      "11001001" // /* MW 9 */
	  1586      "00001111" // /* MW 8 */
	  1587      "01100000" // /* MW 7 */
	  1588      "00000110" // /* MW 6 */
	  1589      "01001010" // /* MW 5 */
	  1590      "00110111" // /* MW 4 */
	  1591      "11000000" // /* MW 3 */
	  1592      "11011100" // /* MW 2 */
	  1593      "11111101" // /* MW 1 */
	  1594      "00111011" // 	                                                            ST r20, [sp, #-152];          LT r14, r5, r14;              MOV r20, #0 /* MW 10 */
	  1595      "01001001" // /* MW 9 */
	  1596      "00000011" // /* MW 8 */
	  1597      "10000000" // /* MW 7 */
	  1598      "01010110" // /* MW 6 */
	  1599      "11100111" // /* MW 5 */
	  1600      "00001010" // /* MW 4 */
	  1601      "00000000" // /* MW 3 */
	  1602      "10101101" // /* MW 2 */
	  1603      "11111101" // /* MW 1 */
	  1604      "10111101" // 	                                                            ST r14, [sp, #-100];          SUB r29, r2, r5 /* MW 6 */
	  1605      "01010001" // /* MW 5 */
	  1606      "10111010" // /* MW 4 */
	  1607      "10000000" // /* MW 3 */
	  1608      "01111011" // /* MW 2 */
	  1609      "11111110" // /* MW 1 */
	  1610      "10111101" // 	                                                            ST r29, [sp, #-108];          LSHL r28, r28, r31 /* MW 6 */
	  1611      "11111101" // /* MW 5 */
	  1612      "00111001" // /* MW 4 */
	  1613      "01000111" // /* MW 3 */
	  1614      "01011111" // /* MW 2 */
	  1615      "11111110" // /* MW 1 */
	  1616      "10111101" // 	                                                            ST r28, [sp, #-112];          ASHL r26, r9, r7 /* MW 6 */
	  1617      "01111110" // /* MW 5 */
	  1618      "01110100" // /* MW 4 */
	  1619      "00000010" // /* MW 3 */
	  1620      "01001111" // /* MW 2 */
	  1621      "11111110" // /* MW 1 */
	  1622      "00111011" // 	                                                            ST r26, [sp, #-128];          MOVXM p6, #1968 /* MW 10 */
	  1623      "00010001" // /* MW 9 */
	  1624      "11011000" // /* MW 8 */
	  1625      "00011011" // /* MW 7 */
	  1626      "00000011" // /* MW 6 */
	  1627      "00000000" // /* MW 5 */
	  1628      "00000000" // /* MW 4 */
	  1629      "10000000" // /* MW 3 */
	  1630      "00001110" // /* MW 2 */
	  1631      "11111110" // /* MW 1 */
.label TGT_Fconv2dk1_skip_368
.loop_nesting 1
	  1632      "00111011" // 	                                                            ST r21, [sp, #-160];          MOVX r21, #7;                 MOV m3, r30 /* MW 10 */
	  1633      "00101001" // /* MW 9 */
	  1634      "10001011" // /* MW 8 */
	  1635      "01110111" // /* MW 7 */
	  1636      "11101000" // /* MW 6 */
	  1637      "01010000" // /* MW 5 */
	  1638      "00000001" // /* MW 4 */
	  1639      "01000000" // /* MW 3 */
	  1640      "10001101" // /* MW 2 */
	  1641      "11111101" // /* MW 1 */
	  1642      "00111101" // 	                                                            ST r20, [sp, #-156];          MOVX r20, #0 /* MW 6 */
	  1643      "00000001" // /* MW 5 */
	  1644      "00101000" // /* MW 4 */
	  1645      "00000000" // /* MW 3 */
	  1646      "10011101" // /* MW 2 */
	  1647      "11111101" // /* MW 1 */
.label TGT_Fconv2dk1_skip_384
.loop_nesting 2
	  1648      "10010101" // 	                                                                                          JNZ r22, #3328 /* MW 6 */
	  1649      "00000001" // /* MW 5 */
	  1650      "01000000" // /* MW 4 */
	  1651      "10000000" // /* MW 3 */
	  1652      "00000110" // /* MW 2 */
	  1653      "10110000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1654      "00000001" // 	NOPX /* MW 2 */
	  1655      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1656      "00000001" // 	NOPX /* MW 2 */
	  1657      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1658      "00000001" // 	NOPX /* MW 2 */
	  1659      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1660      "00000001" // 	NOPX /* MW 2 */
	  1661      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1662      "00000001" // 	NOPX /* MW 2 */
	  1663      "00000000" // /* MW 1 */
	  1664      "01001101" // 	LDA r1, [sp, #-52];                                                                                                     MOV p0, r23 /* MW 6 */
	  1665      "10010110" // /* MW 5 */
	  1666      "00111011" // /* MW 4 */
	  1667      "01001000" // /* MW 3 */
	  1668      "00111000" // /* MW 2 */
	  1669      "11111111" // /* MW 1 */
.noswbrkpt
	  1670      "01111101" // 	LDA r21, [sp, #-68];          PADDB [p0], m3 /* MW 6 */
	  1671      "00001000" // /* MW 5 */
	  1672      "01101011" // /* MW 4 */
	  1673      "01001000" // /* MW 3 */
	  1674      "11111101" // /* MW 2 */
	  1675      "11111110" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1676      "00011001" // 	                                                            ST r21, [sp, #-272] /* MW 4 */
	  1677      "01101010" // /* MW 3 */
	  1678      "11011110" // /* MW 2 */
	  1679      "00001111" // /* MW 1 */
	  1680      "00011001" // 	                                                            ST r23, [sp, #-260] /* MW 4 */
	  1681      "11101110" // /* MW 3 */
	  1682      "11011111" // /* MW 2 */
	  1683      "00001111" // /* MW 1 */
	  1684      "00011001" // 	                                                            ST r20, [sp, #-264] /* MW 4 */
	  1685      "01101000" // /* MW 3 */
	  1686      "11011111" // /* MW 2 */
	  1687      "00001111" // /* MW 1 */
	  1688      "00011001" // 	                                                            ST r25, [sp, #-268] /* MW 4 */
	  1689      "11110010" // /* MW 3 */
	  1690      "11011110" // /* MW 2 */
	  1691      "00001111" // /* MW 1 */
	  1692      "11011001" // 	LDA p3, [sp, #-44] /* MW 4 */
	  1693      "11011110" // /* MW 3 */
	  1694      "11111010" // /* MW 2 */
	  1695      "00000111" // /* MW 1 */
	  1696      "01111001" // 	                                                                                                                        ADD.NC r23, r1, #8 /* MW 4 */
	  1697      "10010110" // /* MW 3 */
	  1698      "11000000" // /* MW 2 */
	  1699      "00011101" // /* MW 1 */
.noswbrkpt
	  1700      "10111011" // 	LDA r30, [sp, #-72];                                                                      ADD r21, r21, r20;            ADD.NC r30, r23, #8 /* MW 10 */
	  1701      "00111000" // /* MW 9 */
	  1702      "11001011" // /* MW 8 */
	  1703      "11000101" // /* MW 7 */
	  1704      "00000111" // /* MW 6 */
	  1705      "01011010" // /* MW 5 */
	  1706      "00101011" // /* MW 4 */
	  1707      "10001000" // /* MW 3 */
	  1708      "11101111" // /* MW 2 */
	  1709      "11111110" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1710      "10111011" // 	LDA r30, [sp, #-156];                                                                     ADD r31, r21, r1;             ADD.NC r6, r30, #8 /* MW 10 */
	  1711      "00111000" // /* MW 9 */
	  1712      "10001011" // /* MW 8 */
	  1713      "11000111" // /* MW 7 */
	  1714      "10000100" // /* MW 6 */
	  1715      "11110000" // /* MW 5 */
	  1716      "00101011" // /* MW 4 */
	  1717      "10001000" // /* MW 3 */
	  1718      "10011111" // /* MW 2 */
	  1719      "11111101" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1720      "00111011" // 	                                                            ST r31, [sp, #-164];          ADD r31, r21, r30;            ADD.NC r22, r6, #8 /* MW 10 */
	  1721      "00111001" // /* MW 9 */
	  1722      "10001011" // /* MW 8 */
	  1723      "11000001" // /* MW 7 */
	  1724      "00000110" // /* MW 6 */
	  1725      "11111111" // /* MW 5 */
	  1726      "00101011" // /* MW 4 */
	  1727      "11000000" // /* MW 3 */
	  1728      "01111111" // /* MW 2 */
	  1729      "11111101" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1730      "00111011" // 	                                                            ST r31, [sp, #-172];          ADD r22, r21, r22;            ADD.NC r1, r22, #8 /* MW 10 */
	  1731      "00111001" // /* MW 9 */
	  1732      "10001011" // /* MW 8 */
	  1733      "00100101" // /* MW 7 */
	  1734      "00000100" // /* MW 6 */
	  1735      "01101011" // /* MW 5 */
	  1736      "00101011" // /* MW 4 */
	  1737      "11000000" // /* MW 3 */
	  1738      "01011111" // /* MW 2 */
	  1739      "11111101" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1740      "00111011" // 	                                                            ST r22, [sp, #-180];          ADD r23, r23, r21;            ADD.NC r30, r1, #8 /* MW 10 */
	  1741      "00111001" // /* MW 9 */
	  1742      "01001011" // /* MW 8 */
	  1743      "11000000" // /* MW 7 */
	  1744      "10000111" // /* MW 6 */
	  1745      "01111010" // /* MW 5 */
	  1746      "00101111" // /* MW 4 */
	  1747      "10000000" // /* MW 3 */
	  1748      "00111101" // /* MW 2 */
	  1749      "11111101" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1750      "00111011" // 	                                                            ST r23, [sp, #-168];          ADD r22, r21, r1;             ADD.NC r23, r30, #8 /* MW 10 */
	  1751      "00111001" // /* MW 9 */
	  1752      "10001011" // /* MW 8 */
	  1753      "11100111" // /* MW 7 */
	  1754      "10000110" // /* MW 6 */
	  1755      "01100000" // /* MW 5 */
	  1756      "00101011" // /* MW 4 */
	  1757      "11000000" // /* MW 3 */
	  1758      "01101101" // /* MW 2 */
	  1759      "11111101" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1760      "10111101" // 	                                                            ST r22, [sp, #-184];          ADD r22, r21, r30 /* MW 6 */
	  1761      "11100000" // /* MW 5 */
	  1762      "01101101" // /* MW 4 */
	  1763      "10000101" // /* MW 3 */
	  1764      "00101101" // /* MW 2 */
	  1765      "11111101" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1766      "10111101" // 	                                                            ST r22, [sp, #-188];          ADD r20, r30, r20 /* MW 6 */
	  1767      "01000000" // /* MW 5 */
	  1768      "10101001" // /* MW 4 */
	  1769      "10000111" // /* MW 3 */
	  1770      "00011101" // /* MW 2 */
	  1771      "11111101" // /* MW 1 */
	  1772      "00011001" // 	                                                                                          ADD r1, r23, #-56 /* MW 4 */
	  1773      "00100011" // /* MW 3 */
	  1774      "11000011" // /* MW 2 */
	  1775      "00010101" // /* MW 1 */
	  1776      "01000011" // 	                                                                                          ADD r6, r21, r6;              ADD.NC r31, r1, #8 /* MW 8 */
	  1777      "00111000" // /* MW 7 */
	  1778      "01001011" // /* MW 6 */
	  1779      "11100000" // /* MW 5 */
	  1780      "00000111" // /* MW 4 */
	  1781      "01100011" // /* MW 3 */
	  1782      "00101010" // /* MW 2 */
	  1783      "00000000" // /* MW 1 */
	  1784      "00111011" // 	                                                            ST r6, [sp, #-176];           ADD r21, r23, r21;            ADD.NC r23, r31, #8 /* MW 10 */
	  1785      "00111001" // /* MW 9 */
	  1786      "11001011" // /* MW 8 */
	  1787      "11100111" // /* MW 7 */
	  1788      "10000110" // /* MW 6 */
	  1789      "01011010" // /* MW 5 */
	  1790      "00101111" // /* MW 4 */
	  1791      "10000000" // /* MW 3 */
	  1792      "01001001" // /* MW 2 */
	  1793      "11111101" // /* MW 1 */
	  1794      "00111011" // 	                                                            ST r21, [sp, #-192];          ADD r23, r23, r20;            ADD.NC r21, r23, #8 /* MW 10 */
	  1795      "00111001" // /* MW 9 */
	  1796      "11001011" // /* MW 8 */
	  1797      "10100101" // /* MW 7 */
	  1798      "00000110" // /* MW 6 */
	  1799      "01111010" // /* MW 5 */
	  1800      "00101111" // /* MW 4 */
	  1801      "01000000" // /* MW 3 */
	  1802      "00001101" // /* MW 2 */
	  1803      "11111101" // /* MW 1 */
	  1804      "00111011" // 	                                                            ST r23, [sp, #-204];          ADD r21, r21, r20;            ADD.NC r22, r21, #8 /* MW 10 */
	  1805      "00111001" // /* MW 9 */
	  1806      "01001011" // /* MW 8 */
	  1807      "11000101" // /* MW 7 */
	  1808      "00000110" // /* MW 6 */
	  1809      "01011010" // /* MW 5 */
	  1810      "00101011" // /* MW 4 */
	  1811      "11000000" // /* MW 3 */
	  1812      "11011101" // /* MW 2 */
	  1813      "11111100" // /* MW 1 */
	  1814      "00111011" // 	                                                            ST r21, [sp, #-208];          ADD r21, r22, r20;            ADD.NC r6, r22, #8 /* MW 10 */
	  1815      "00111001" // /* MW 9 */
	  1816      "10001011" // /* MW 8 */
	  1817      "11000101" // /* MW 7 */
	  1818      "00000100" // /* MW 6 */
	  1819      "01011010" // /* MW 5 */
	  1820      "00101101" // /* MW 4 */
	  1821      "01000000" // /* MW 3 */
	  1822      "11001101" // /* MW 2 */
	  1823      "11111100" // /* MW 1 */
	  1824      "00111011" // 	                                                            ST r21, [sp, #-212];          ADD r23, r6, r20;             ADD.NC r22, r6, #8 /* MW 10 */
	  1825      "00111001" // /* MW 9 */
	  1826      "10001011" // /* MW 8 */
	  1827      "11000001" // /* MW 7 */
	  1828      "00000110" // /* MW 6 */
	  1829      "01111010" // /* MW 5 */
	  1830      "00001101" // /* MW 4 */
	  1831      "01000000" // /* MW 3 */
	  1832      "10111101" // /* MW 2 */
	  1833      "11111100" // /* MW 1 */
	  1834      "00111011" // 	                                                            ST r23, [sp, #-216];          ADD r1, r1, r20;              ADD.NC r6, r22, #8 /* MW 10 */
	  1835      "00111001" // /* MW 9 */
	  1836      "10001011" // /* MW 8 */
	  1837      "11000101" // /* MW 7 */
	  1838      "00000100" // /* MW 6 */
	  1839      "00011010" // /* MW 5 */
	  1840      "00000010" // /* MW 4 */
	  1841      "11000000" // /* MW 3 */
	  1842      "10101101" // /* MW 2 */
	  1843      "11111100" // /* MW 1 */
	  1844      "00111101" // 	                                                            ST r1, [sp, #-196];           ADD r23, r6, #-56 /* MW 6 */
	  1845      "00100011" // /* MW 5 */
	  1846      "10101111" // /* MW 4 */
	  1847      "01000001" // /* MW 3 */
	  1848      "11111000" // /* MW 2 */
	  1849      "11111100" // /* MW 1 */
	  1850      "10011001" // 	                                                                                          ADD r1, r31, r20 /* MW 4 */
	  1851      "01000000" // /* MW 3 */
	  1852      "11000011" // /* MW 2 */
	  1853      "00010111" // /* MW 1 */
	  1854      "00111011" // 	                                                            ST r1, [sp, #-200];           ADD r1, r22, r20;             ADD.NC r22, r23, #8 /* MW 10 */
	  1855      "00111001" // /* MW 9 */
	  1856      "11001011" // /* MW 8 */
	  1857      "11000101" // /* MW 7 */
	  1858      "00000110" // /* MW 6 */
	  1859      "00011010" // /* MW 5 */
	  1860      "00101100" // /* MW 4 */
	  1861      "01000000" // /* MW 3 */
	  1862      "11101000" // /* MW 2 */
	  1863      "11111100" // /* MW 1 */
	  1864      "01110111" // 	MOVA r1, #0;                                                ST r1, [sp, #-220];           ADD r6, r6, r20;              ADD.NC r20, r22, #8 /* MW 12 */
	  1865      "00111000" // /* MW 11 */
	  1866      "10001011" // /* MW 10 */
	  1867      "10000101" // /* MW 9 */
	  1868      "00000110" // /* MW 8 */
	  1869      "01101010" // /* MW 7 */
	  1870      "00001100" // /* MW 6 */
	  1871      "11000010" // /* MW 5 */
	  1872      "11100100" // /* MW 4 */
	  1873      "01001111" // /* MW 3 */
	  1874      "00000000" // /* MW 2 */
	  1875      "00000000" // /* MW 1 */
	  1876      "10111101" // 	                                                            ST r6, [sp, #-224];           ADD r21, r25, r30 /* MW 6 */
	  1877      "11100000" // /* MW 5 */
	  1878      "01101011" // /* MW 4 */
	  1879      "10000110" // /* MW 3 */
	  1880      "10001001" // /* MW 2 */
	  1881      "11111100" // /* MW 1 */
.noswbrkpt
	  1882      "10111011" // 	LDA r20, [sp, #-56];                                                                      ADD r6, r21, r20;             ADD.NC r20, r20, #8 /* MW 10 */
	  1883      "00111000" // /* MW 9 */
	  1884      "00001011" // /* MW 8 */
	  1885      "10000101" // /* MW 7 */
	  1886      "00000110" // /* MW 6 */
	  1887      "01101010" // /* MW 5 */
	  1888      "00101010" // /* MW 4 */
	  1889      "00001000" // /* MW 3 */
	  1890      "00101101" // /* MW 2 */
	  1891      "11111111" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1892      "00111011" // 	                                                            ST r6, [sp, #-236];           ADD r6, r23, r21;             ADD.NC r23, r20, #8 /* MW 10 */
	  1893      "00111001" // /* MW 9 */
	  1894      "00001011" // /* MW 8 */
	  1895      "11100101" // /* MW 7 */
	  1896      "10000110" // /* MW 6 */
	  1897      "01101010" // /* MW 5 */
	  1898      "00101110" // /* MW 4 */
	  1899      "10000000" // /* MW 3 */
	  1900      "01011001" // /* MW 2 */
	  1901      "11111100" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1902      "00111011" // 	                                                            ST r6, [sp, #-228];           ADD r6, r21, r22;             ADD.NC r22, r23, #8 /* MW 10 */
	  1903      "00111001" // /* MW 9 */
	  1904      "11001011" // /* MW 8 */
	  1905      "11000101" // /* MW 7 */
	  1906      "00000110" // /* MW 6 */
	  1907      "01101011" // /* MW 5 */
	  1908      "00101010" // /* MW 4 */
	  1909      "10000000" // /* MW 3 */
	  1910      "01111001" // /* MW 2 */
	  1911      "11111100" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1912      "00111011" // 	                                                            ST r6, [sp, #-232];           ADD r6, r21, r20;             ADD.NC r20, r22, #8 /* MW 10 */
	  1913      "00111001" // /* MW 9 */
	  1914      "10001011" // /* MW 8 */
	  1915      "10000101" // /* MW 7 */
	  1916      "00000110" // /* MW 6 */
	  1917      "01101010" // /* MW 5 */
	  1918      "00101010" // /* MW 4 */
	  1919      "10000000" // /* MW 3 */
	  1920      "01101001" // /* MW 2 */
	  1921      "11111100" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1922      "00111011" // 	                                                            ST r6, [sp, #-240];           ADD r6, r21, r20;             ADD.NC r20, r20, #8 /* MW 10 */
	  1923      "00111001" // /* MW 9 */
	  1924      "00001011" // /* MW 8 */
	  1925      "10000101" // /* MW 7 */
	  1926      "00000110" // /* MW 6 */
	  1927      "01101010" // /* MW 5 */
	  1928      "00101010" // /* MW 4 */
	  1929      "10000000" // /* MW 3 */
	  1930      "01001001" // /* MW 2 */
	  1931      "11111100" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1932      "10111101" // 	                                                            ST r6, [sp, #-252];           ADD r20, r21, r20 /* MW 6 */
	  1933      "01000000" // /* MW 5 */
	  1934      "01101001" // /* MW 4 */
	  1935      "10000101" // /* MW 3 */
	  1936      "00011001" // /* MW 2 */
	  1937      "11111100" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  1938      "10111101" // 	                                                            ST r20, [sp, #-256];          ADD r22, r21, r22 /* MW 6 */
	  1939      "01100000" // /* MW 5 */
	  1940      "01101101" // /* MW 4 */
	  1941      "00000101" // /* MW 3 */
	  1942      "00001101" // /* MW 2 */
	  1943      "11111100" // /* MW 1 */
	  1944      "00111011" // 	                                                            ST r22, [sp, #-248];          ADD r23, r23, r21;            MOV r22, #0 /* MW 10 */
	  1945      "01001001" // /* MW 9 */
	  1946      "00000011" // /* MW 8 */
	  1947      "11000000" // /* MW 7 */
	  1948      "10000110" // /* MW 6 */
	  1949      "01111010" // /* MW 5 */
	  1950      "00101111" // /* MW 4 */
	  1951      "10000000" // /* MW 3 */
	  1952      "00101101" // /* MW 2 */
	  1953      "11111100" // /* MW 1 */
	  1954      "00011001" // 	                                                            ST r23, [sp, #-244] /* MW 4 */
	  1955      "11101110" // /* MW 3 */
	  1956      "11100001" // /* MW 2 */
	  1957      "00001111" // /* MW 1 */
	  1958      "10111011" // 	LDA r21, [sp, #-80];          NOPB;                                                                                     NOPM /* MW 10 */
	  1959      "10001110" // /* MW 9 */
	  1960      "00000011" // /* MW 8 */
	  1961      "00000000" // /* MW 7 */
	  1962      "00000000" // /* MW 6 */
	  1963      "00000000" // /* MW 5 */
	  1964      "00000000" // /* MW 4 */
	  1965      "01001000" // /* MW 3 */
	  1966      "11001101" // /* MW 2 */
	  1967      "11111110" // /* MW 1 */
.label TGT_Fconv2dk1_skip_704
.loop_nesting 3
	  1968      "10010101" // 	                                                                                          JNZ r11, #2368 /* MW 6 */
	  1969      "00000001" // /* MW 5 */
	  1970      "01000000" // /* MW 4 */
	  1971      "10100000" // /* MW 3 */
	  1972      "00000100" // /* MW 2 */
	  1973      "01011000" // /* MW 1 */
.delay_slot
	  1974      "00011001" // 	                                                                                          MOVX r23, #0 /* MW 4 */
	  1975      "00000001" // /* MW 3 */
	  1976      "00101110" // /* MW 2 */
	  1977      "00010000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1978      "00000001" // 	NOPX /* MW 2 */
	  1979      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1980      "00000001" // 	NOPX /* MW 2 */
	  1981      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1982      "00000001" // 	NOPX /* MW 2 */
	  1983      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1984      "00000001" // 	NOPX /* MW 2 */
	  1985      "00000000" // /* MW 1 */
	  1986      "10111011" // 	LDA r2, [sp, #-132];                                                                      MOVX r5, #1;                  MOV r3, p3 /* MW 10 */
	  1987      "00101000" // /* MW 9 */
	  1988      "00111011" // /* MW 8 */
	  1989      "01100011" // /* MW 7 */
	  1990      "00101000" // /* MW 6 */
	  1991      "01010000" // /* MW 5 */
	  1992      "00000000" // /* MW 4 */
	  1993      "10001000" // /* MW 3 */
	  1994      "11111000" // /* MW 2 */
	  1995      "11111101" // /* MW 1 */
	  1996      "10111011" // 	LDA p6, [sp, #-164];                                                                      MOVXM ls, #2080 /* MW 10 */
	  1997      "00010000" // /* MW 9 */
	  1998      "00010000" // /* MW 8 */
	  1999      "00111100" // /* MW 7 */
	  2000      "00000000" // /* MW 6 */
	  2001      "00000000" // /* MW 5 */
	  2002      "00000000" // /* MW 4 */
	  2003      "11011000" // /* MW 3 */
	  2004      "01111110" // /* MW 2 */
	  2005      "11111101" // /* MW 1 */
	  2006      "10111011" // 	LDA p7, [sp, #-168];                                                                      MOVXM le, #2272 /* MW 10 */
	  2007      "00010000" // /* MW 9 */
	  2008      "01110000" // /* MW 8 */
	  2009      "00111100" // /* MW 7 */
	  2010      "00000010" // /* MW 6 */
	  2011      "00000000" // /* MW 5 */
	  2012      "00000000" // /* MW 4 */
	  2013      "11011000" // /* MW 3 */
	  2014      "01101111" // /* MW 2 */
	  2015      "11111101" // /* MW 1 */
	  2016      "10111011" // 	LDA p1, [sp, #-172];                                                                      MOVX r4, #3;                  MOV r6, #2 /* MW 10 */
	  2017      "01001000" // /* MW 9 */
	  2018      "00000111" // /* MW 8 */
	  2019      "11000000" // /* MW 7 */
	  2020      "01101000" // /* MW 6 */
	  2021      "01000000" // /* MW 5 */
	  2022      "00000000" // /* MW 4 */
	  2023      "11011000" // /* MW 3 */
	  2024      "01011001" // /* MW 2 */
	  2025      "11111101" // /* MW 1 */
	  2026      "00011101" // 	LDA p2, [sp, #-176];                                                                      MOVX r0, #4 /* MW 6 */
	  2027      "00010001" // /* MW 5 */
	  2028      "00000000" // /* MW 4 */
	  2029      "11011000" // /* MW 3 */
	  2030      "01001010" // /* MW 2 */
	  2031      "11111101" // /* MW 1 */
	  2032      "10011001" // 	                                                            ST p3, [sp, #-276] /* MW 4 */
	  2033      "11011110" // /* MW 3 */
	  2034      "11011101" // /* MW 2 */
	  2035      "00001111" // /* MW 1 */
	  2036      "00000011" // 	                                                            ST r1, [sp, #-280];                                         MOV r1, r22 /* MW 8 */
	  2037      "00100000" // /* MW 7 */
	  2038      "10001011" // /* MW 6 */
	  2039      "00100101" // /* MW 5 */
	  2040      "00000000" // /* MW 4 */
	  2041      "01000000" // /* MW 3 */
	  2042      "10101000" // /* MW 2 */
	  2043      "11111011" // /* MW 1 */
	  2044      "01001101" // 	LDA p4, [sp, #-180];                                                                                                    MOV lc, r2 /* MW 6 */
	  2045      "00010110" // /* MW 5 */
	  2046      "01110001" // /* MW 4 */
	  2047      "11011101" // /* MW 3 */
	  2048      "00111100" // /* MW 2 */
	  2049      "11111101" // /* MW 1 */
	  2050      "11011001" // 	LDA p3, [sp, #-184] /* MW 4 */
	  2051      "01011110" // /* MW 3 */
	  2052      "11101001" // /* MW 2 */
	  2053      "00000111" // /* MW 1 */
	  2054      "11011001" // 	LDA p5, [sp, #-188] /* MW 4 */
	  2055      "11101110" // /* MW 3 */
	  2056      "11101000" // /* MW 2 */
	  2057      "00000111" // /* MW 1 */
	  2058      "01111101" // 	LDA r12, [sp, #-192];         NOPB /* MW 6 */
	  2059      "00000000" // /* MW 5 */
	  2060      "00000000" // /* MW 4 */
	  2061      "00001000" // /* MW 3 */
	  2062      "00001011" // /* MW 2 */
	  2063      "11111101" // /* MW 1 */
	  2064      "11000000" // 	NOPA;                         NOPB;                         ST p0, [sp, #-284];           NOPX;                         NOPM;                                   NOPV /* MW 16 */
	  2065      "00000011" // /* MW 15 */
	  2066      "00000000" // /* MW 14 */
	  2067      "10001000" // /* MW 13 */
	  2068      "00000011" // /* MW 12 */
	  2069      "00000000" // /* MW 11 */
	  2070      "00000000" // /* MW 10 */
	  2071      "00000000" // /* MW 9 */
	  2072      "10000000" // /* MW 8 */
	  2073      "11000110" // /* MW 7 */
	  2074      "11011100" // /* MW 6 */
	  2075      "00000111" // /* MW 5 */
	  2076      "00000000" // /* MW 4 */
	  2077      "00000000" // /* MW 3 */
	  2078      "00000000" // /* MW 2 */
	  2079      "00000000" // /* MW 1 */
.label ZLS_Fconv2dk1_skip_816
.begin_of_loop
.noswbrkpt
.loop_nesting 4
	  2080      "10111011" // 	LDA p0, [sp, #-44];                                                                       OR r29, r5, r1;               MOV p0, r3 /* MW 10 */
	  2081      "00101000" // /* MW 9 */
	  2082      "11001011" // /* MW 8 */
	  2083      "00011000" // /* MW 7 */
	  2084      "10101100" // /* MW 6 */
	  2085      "11010000" // /* MW 5 */
	  2086      "00001011" // /* MW 4 */
	  2087      "11011000" // /* MW 3 */
	  2088      "01011000" // /* MW 2 */
	  2089      "11111111" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  2090      "10111011" // 	LDA.u8 r7, [p0], m2;                                                                      OR r26, r1, r6;               MOV dj2, r29 /* MW 10 */
	  2091      "00101000" // /* MW 9 */
	  2092      "01001011" // /* MW 8 */
	  2093      "01010111" // /* MW 7 */
	  2094      "00101110" // /* MW 6 */
	  2095      "10100011" // /* MW 5 */
	  2096      "00000011" // /* MW 4 */
	  2097      "11111000" // /* MW 3 */
	  2098      "00100001" // /* MW 2 */
	  2099      "00001001" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  2100      "10111011" // 	LDA.s8 r8, [p6], m1;                                                                      OR r27, r1, r4;               MOV r3, p0 /* MW 10 */
	  2101      "00101000" // /* MW 9 */
	  2102      "00111011" // /* MW 8 */
	  2103      "01100000" // /* MW 7 */
	  2104      "00101100" // /* MW 6 */
	  2105      "10110010" // /* MW 5 */
	  2106      "00000011" // /* MW 4 */
	  2107      "00111000" // /* MW 3 */
	  2108      "00000010" // /* MW 2 */
	  2109      "11000101" // /* MW 1 */
	  2110      "10111011" // 	LDA.s8 r9, [p7], m1;                                                                      OR r29, r1, r0;               MOV dj3, r26 /* MW 10 */
	  2111      "00101000" // /* MW 9 */
	  2112      "10001011" // /* MW 8 */
	  2113      "01110110" // /* MW 7 */
	  2114      "00101110" // /* MW 6 */
	  2115      "11010000" // /* MW 5 */
	  2116      "00000011" // /* MW 4 */
	  2117      "01111000" // /* MW 3 */
	  2118      "00000010" // /* MW 2 */
	  2119      "11100101" // /* MW 1 */
	  2120      "10111011" // 	LDA.s8 r10, [p1], m1;                                                                     OR r26, r17, r1;              MOV dj4, r27 /* MW 10 */
	  2121      "00101000" // /* MW 9 */
	  2122      "11001011" // /* MW 8 */
	  2123      "10010110" // /* MW 7 */
	  2124      "10101110" // /* MW 6 */
	  2125      "10100000" // /* MW 5 */
	  2126      "00100011" // /* MW 4 */
	  2127      "10111000" // /* MW 3 */
	  2128      "00000010" // /* MW 2 */
	  2129      "00100101" // /* MW 1 */
.noswbrkpt
	  2130      "10111011" // 	LDA.s8 r26, [p2], m1;                                                                     OR r24, r1, r16;              MOV dj5, r29 /* MW 10 */
	  2131      "00101000" // /* MW 9 */
	  2132      "01001011" // /* MW 8 */
	  2133      "10110111" // /* MW 7 */
	  2134      "00101110" // /* MW 6 */
	  2135      "10001000" // /* MW 5 */
	  2136      "00000011" // /* MW 4 */
	  2137      "10111000" // /* MW 3 */
	  2138      "00000110" // /* MW 2 */
	  2139      "01000101" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  2140      "10111011" // 	LDA.s8 r31, [p4], m1;                                                                     OR r29, r19, r1;              MOV dj0, r26 /* MW 10 */
	  2141      "00101000" // /* MW 9 */
	  2142      "10001011" // /* MW 8 */
	  2143      "00010110" // /* MW 7 */
	  2144      "10101110" // /* MW 6 */
	  2145      "11010000" // /* MW 5 */
	  2146      "00100111" // /* MW 4 */
	  2147      "11111000" // /* MW 3 */
	  2148      "00000111" // /* MW 2 */
	  2149      "10000101" // /* MW 1 */
	  2150      "10111011" // 	LDA.u8 r14, [p0, dj2];                                                                    ADD r1, r1, r18;              MOV dj6, r24 /* MW 10 */
	  2151      "00101000" // /* MW 9 */
	  2152      "00001011" // /* MW 8 */
	  2153      "11010110" // /* MW 7 */
	  2154      "00000110" // /* MW 6 */
	  2155      "00011001" // /* MW 5 */
	  2156      "00000010" // /* MW 4 */
	  2157      "10111000" // /* MW 3 */
	  2158      "00100011" // /* MW 2 */
	  2159      "00001010" // /* MW 1 */
	  2160      "01001101" // 	LDA.u8 r28, [p0, dj3];                                                                                                  MOV dj1, r29 /* MW 6 */
	  2161      "10010110" // /* MW 5 */
	  2162      "01101110" // /* MW 4 */
	  2163      "00111100" // /* MW 3 */
	  2164      "00100111" // /* MW 2 */
	  2165      "00001110" // /* MW 1 */
	  2166      "10011101" // 	LDA.u8 r27, [p0, dj4];                                                                    MUL r7, r7, r8 /* MW 6 */
	  2167      "10001111" // /* MW 5 */
	  2168      "11001110" // /* MW 4 */
	  2169      "11111001" // /* MW 3 */
	  2170      "00100110" // /* MW 2 */
	  2171      "00010010" // /* MW 1 */
	  2172      "11011001" // 	LDA.u8 r24, [p0, dj5] /* MW 4 */
	  2173      "00110001" // /* MW 3 */
	  2174      "10110001" // /* MW 2 */
	  2175      "00000000" // /* MW 1 */
	  2176      "10011101" // 	LDA.u8 r15, [p0, dj0];                                                                    ADD r7, r23, r7 /* MW 6 */
	  2177      "01110000" // /* MW 5 */
	  2178      "11001110" // /* MW 4 */
	  2179      "11111101" // /* MW 3 */
	  2180      "00100011" // /* MW 2 */
	  2181      "00000010" // /* MW 1 */
.noswbrkpt
	  2182      "11011001" // 	LDA.s8 r10, [p3], m1 /* MW 4 */
	  2183      "00010101" // /* MW 3 */
	  2184      "00101000" // /* MW 2 */
	  2185      "00000011" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  2186      "11011001" // 	LDA.u8 r30, [p0, dj6] /* MW 4 */
	  2187      "00111101" // /* MW 3 */
	  2188      "11010001" // /* MW 2 */
	  2189      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  2190      "10111011" // 	LDA.u8 r11, [p0, dj1];                                                                    MUL r14, r9, r14;             MOV p0, r12 /* MW 10 */
	  2191      "00101000" // /* MW 9 */
	  2192      "00001011" // /* MW 8 */
	  2193      "00011011" // /* MW 7 */
	  2194      "01111100" // /* MW 6 */
	  2195      "11100111" // /* MW 5 */
	  2196      "00010010" // /* MW 4 */
	  2197      "11111000" // /* MW 3 */
	  2198      "00100010" // /* MW 2 */
	  2199      "00000110" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  2200      "10011101" // 	LDA.s8 r25, [p5], m1;                                                                     MUL r28, r10, r28 /* MW 6 */
	  2201      "11001111" // /* MW 5 */
	  2202      "10111001" // /* MW 4 */
	  2203      "01111010" // /* MW 3 */
	  2204      "00000110" // /* MW 2 */
	  2205      "10100101" // /* MW 1 */
	  2206      "10011101" // 	LDA.s8 r13, [p0], m1;                                                                     MUL r2, r27, r26 /* MW 6 */
	  2207      "10101111" // /* MW 5 */
	  2208      "11000101" // /* MW 4 */
	  2209      "01111110" // /* MW 3 */
	  2210      "00000011" // /* MW 2 */
	  2211      "00000101" // /* MW 1 */
	  2212      "01000011" // 	                                                                                          MUL r31, r31, r24;            MOV r12, p0 /* MW 8 */
	  2213      "00101000" // /* MW 7 */
	  2214      "00111011" // /* MW 6 */
	  2215      "10000000" // /* MW 5 */
	  2216      "01111101" // /* MW 4 */
	  2217      "11111100" // /* MW 3 */
	  2218      "00111111" // /* MW 2 */
	  2219      "00000000" // /* MW 1 */
	  2220      "00000001" // 	NOPX /* MW 2 */
	  2221      "00000000" // /* MW 1 */
	  2222      "10011001" // 	                                                                                          ADD r14, r7, r14 /* MW 4 */
	  2223      "11100000" // /* MW 3 */
	  2224      "11011100" // /* MW 2 */
	  2225      "00010001" // /* MW 1 */
	  2226      "10011001" // 	                                                                                          ADD r28, r14, r28 /* MW 4 */
	  2227      "11000000" // /* MW 3 */
	  2228      "10111001" // /* MW 2 */
	  2229      "00010011" // /* MW 1 */
	  2230      "10011001" // 	                                                                                          ADD r2, r2, r28 /* MW 4 */
	  2231      "11000000" // /* MW 3 */
	  2232      "10000101" // /* MW 2 */
	  2233      "00010000" // /* MW 1 */
	  2234      "10011001" // 	                                                                                          MUL r15, r15, r10 /* MW 4 */
	  2235      "10101111" // /* MW 3 */
	  2236      "11011110" // /* MW 2 */
	  2237      "00010011" // /* MW 1 */
	  2238      "10011001" // 	                                                                                          MUL r25, r25, r30 /* MW 4 */
	  2239      "11101111" // /* MW 3 */
	  2240      "01110011" // /* MW 2 */
	  2241      "00010110" // /* MW 1 */
	  2242      "10011001" // 	                                                                                          MUL r13, r11, r13 /* MW 4 */
	  2243      "11011111" // /* MW 3 */
	  2244      "11011010" // /* MW 2 */
	  2245      "00010010" // /* MW 1 */
	  2246      "00000001" // 	NOPX /* MW 2 */
	  2247      "00000000" // /* MW 1 */
	  2248      "10011001" // 	                                                                                          ADD r2, r31, r2 /* MW 4 */
	  2249      "00100000" // /* MW 3 */
	  2250      "11000100" // /* MW 2 */
	  2251      "00010111" // /* MW 1 */
	  2252      "10011001" // 	                                                                                          ADD r2, r15, r2 /* MW 4 */
	  2253      "00100000" // /* MW 3 */
	  2254      "11000100" // /* MW 2 */
	  2255      "00010011" // /* MW 1 */
	  2256      "11000000" // 	NOPA;                         NOPB;                         NOPS;                         ADD r2, r25, r2;              NOPM;                                   NOPV /* MW 16 */
	  2257      "00000011" // /* MW 15 */
	  2258      "00000000" // /* MW 14 */
	  2259      "10001000" // /* MW 13 */
	  2260      "00000011" // /* MW 12 */
	  2261      "00000000" // /* MW 11 */
	  2262      "00000100" // /* MW 10 */
	  2263      "00100001" // /* MW 9 */
	  2264      "00110010" // /* MW 8 */
	  2265      "00000000" // /* MW 7 */
	  2266      "00000000" // /* MW 6 */
	  2267      "00000000" // /* MW 5 */
	  2268      "00000000" // /* MW 4 */
	  2269      "00000000" // /* MW 3 */
	  2270      "00000000" // /* MW 2 */
	  2271      "00000000" // /* MW 1 */
.label ZLE_Fconv2dk1_skip_1008
.end_of_loop
	  2272      "11000000" // 	NOPA;                         NOPB;                         NOPS;                         ADD r23, r13, r2;             NOPM;                                   NOPV /* MW 16 */
	  2273      "00000011" // /* MW 15 */
	  2274      "00000000" // /* MW 14 */
	  2275      "10001000" // /* MW 13 */
	  2276      "00000011" // /* MW 12 */
	  2277      "00000000" // /* MW 11 */
	  2278      "00000100" // /* MW 10 */
	  2279      "01110001" // /* MW 9 */
	  2280      "00011011" // /* MW 8 */
	  2281      "00000000" // /* MW 7 */
	  2282      "00000000" // /* MW 6 */
	  2283      "00000000" // /* MW 5 */
	  2284      "00000000" // /* MW 4 */
	  2285      "00000000" // /* MW 3 */
	  2286      "00000000" // /* MW 2 */
	  2287      "00000000" // /* MW 1 */
.loop_nesting 3
	  2288      "10111011" // 	LDA r3, [sp, #-148];                                                                      MOVX r4, #-128;               MOV r2, #0 /* MW 10 */
	  2289      "01001000" // /* MW 9 */
	  2290      "00000011" // /* MW 8 */
	  2291      "01000000" // /* MW 7 */
	  2292      "00001000" // /* MW 6 */
	  2293      "01000000" // /* MW 5 */
	  2294      "00111100" // /* MW 4 */
	  2295      "11001000" // /* MW 3 */
	  2296      "10111000" // /* MW 2 */
	  2297      "11111101" // /* MW 1 */
	  2298      "10111011" // 	LDA r1, [sp, #-280];                                                                      MOVX r0, #255;                MOV r13, #127 /* MW 10 */
	  2299      "11001000" // /* MW 9 */
	  2300      "11111111" // /* MW 8 */
	  2301      "10100000" // /* MW 7 */
	  2302      "11101001" // /* MW 6 */
	  2303      "00000111" // /* MW 5 */
	  2304      "00000110" // /* MW 4 */
	  2305      "01001000" // /* MW 3 */
	  2306      "10101000" // /* MW 2 */
	  2307      "11111011" // /* MW 1 */
	  2308      "00011101" // 	LDA p0, [sp, #-284];                                                                      MOVX r7, #-31 /* MW 6 */
	  2309      "10000101" // /* MW 5 */
	  2310      "11001110" // /* MW 4 */
	  2311      "11011111" // /* MW 3 */
	  2312      "10011000" // /* MW 2 */
	  2313      "11111011" // /* MW 1 */
	  2314      "10111011" // 	LDA p3, [sp, #-276];                                                                      MOVXM p6, #1968 /* MW 10 */
	  2315      "00010000" // /* MW 9 */
	  2316      "11011000" // /* MW 8 */
	  2317      "00011011" // /* MW 7 */
	  2318      "00000011" // /* MW 6 */
	  2319      "00000000" // /* MW 5 */
	  2320      "00000000" // /* MW 4 */
	  2321      "11011000" // /* MW 3 */
	  2322      "10111011" // /* MW 2 */
	  2323      "11111011" // /* MW 1 */
	  2324      "01011001" // 	LDA r28, [sp, #-112] /* MW 4 */
	  2325      "01111000" // /* MW 3 */
	  2326      "11110010" // /* MW 2 */
	  2327      "00000111" // /* MW 1 */
	  2328      "01011001" // 	LDA r15, [sp, #-92] /* MW 4 */
	  2329      "11011110" // /* MW 3 */
	  2330      "11110100" // /* MW 2 */
	  2331      "00000111" // /* MW 1 */
	  2332      "01011001" // 	LDA r12, [sp, #-76] /* MW 4 */
	  2333      "11011000" // /* MW 3 */
	  2334      "11110110" // /* MW 2 */
	  2335      "00000111" // /* MW 1 */
	  2336      "01011001" // 	LDA r10, [sp, #-104] /* MW 4 */
	  2337      "01010100" // /* MW 3 */
	  2338      "11110011" // /* MW 2 */
	  2339      "00000111" // /* MW 1 */
	  2340      "01011001" // 	LDA r11, [sp, #-84] /* MW 4 */
	  2341      "11010110" // /* MW 3 */
	  2342      "11110101" // /* MW 2 */
	  2343      "00000111" // /* MW 1 */
	  2344      "01011001" // 	LDA r8, [sp, #-116] /* MW 4 */
	  2345      "11010000" // /* MW 3 */
	  2346      "11110001" // /* MW 2 */
	  2347      "00000111" // /* MW 1 */
	  2348      "01011001" // 	LDA r24, [sp, #-96] /* MW 4 */
	  2349      "01110000" // /* MW 3 */
	  2350      "11110100" // /* MW 2 */
	  2351      "00000111" // /* MW 1 */
	  2352      "01011001" // 	LDA r9, [sp, #-120] /* MW 4 */
	  2353      "01010010" // /* MW 3 */
	  2354      "11110001" // /* MW 2 */
	  2355      "00000111" // /* MW 1 */
	  2356      "01011001" // 	LDA r26, [sp, #-128] /* MW 4 */
	  2357      "01110100" // /* MW 3 */
	  2358      "11110000" // /* MW 2 */
	  2359      "00000111" // /* MW 1 */
	  2360      "00100011" // 	LDA r29, [sp, #-108];                                                                                                                                           NOPV /* MW 8 */
	  2361      "01111000" // /* MW 7 */
	  2362      "00000000" // /* MW 6 */
	  2363      "00000000" // /* MW 5 */
	  2364      "00000100" // /* MW 4 */
	  2365      "01001000" // /* MW 3 */
	  2366      "01011111" // /* MW 2 */
	  2367      "11111110" // /* MW 1 */
.label TGT_Fconv2dk1_skip_1104
	  2368      "10010101" // 	                                                                                          JNZ r3, #2768 /* MW 6 */
	  2369      "00000001" // /* MW 5 */
	  2370      "01000000" // /* MW 4 */
	  2371      "01101000" // /* MW 3 */
	  2372      "00000101" // /* MW 2 */
	  2373      "00011000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  2374      "00000001" // 	NOPX /* MW 2 */
	  2375      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  2376      "00000001" // 	NOPX /* MW 2 */
	  2377      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  2378      "00000001" // 	NOPX /* MW 2 */
	  2379      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  2380      "00000001" // 	NOPX /* MW 2 */
	  2381      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  2382      "00000001" // 	NOPX /* MW 2 */
	  2383      "00000000" // /* MW 1 */
	  2384      "10111011" // 	LDA r3, [sp, #-144];                                                                      MOVX r6, #1;                  MOV r5, #3 /* MW 10 */
	  2385      "11001000" // /* MW 9 */
	  2386      "00000111" // /* MW 8 */
	  2387      "10100000" // /* MW 7 */
	  2388      "00101000" // /* MW 6 */
	  2389      "01100000" // /* MW 5 */
	  2390      "00000000" // /* MW 4 */
	  2391      "11001000" // /* MW 3 */
	  2392      "11001000" // /* MW 2 */
	  2393      "11111101" // /* MW 1 */
	  2394      "10111011" // 	LDA r2, [sp, #-48];                                                                       MOVXM ls, #2480 /* MW 10 */
	  2395      "00010000" // /* MW 9 */
	  2396      "11011000" // /* MW 8 */
	  2397      "00111100" // /* MW 7 */
	  2398      "00000000" // /* MW 6 */
	  2399      "00000000" // /* MW 5 */
	  2400      "00000000" // /* MW 4 */
	  2401      "10001000" // /* MW 3 */
	  2402      "01001000" // /* MW 2 */
	  2403      "11111111" // /* MW 1 */
	  2404      "10111011" // 	LDA r7, [sp, #-152];                                                                      MOVXM le, #2672 /* MW 10 */
	  2405      "00010000" // /* MW 9 */
	  2406      "00111000" // /* MW 8 */
	  2407      "00111101" // /* MW 7 */
	  2408      "00000010" // /* MW 6 */
	  2409      "00000000" // /* MW 5 */
	  2410      "00000000" // /* MW 4 */
	  2411      "11001000" // /* MW 3 */
	  2412      "10101001" // /* MW 2 */
	  2413      "11111101" // /* MW 1 */
	  2414      "10111011" // 	LDA p6, [sp, #-196];                                                                      MOVX r0, #4;                  MOV r4, #2 /* MW 10 */
	  2415      "01001000" // /* MW 9 */
	  2416      "00000111" // /* MW 8 */
	  2417      "10000000" // /* MW 7 */
	  2418      "10001000" // /* MW 6 */
	  2419      "00000000" // /* MW 5 */
	  2420      "00000000" // /* MW 4 */
	  2421      "11011000" // /* MW 3 */
	  2422      "11111110" // /* MW 2 */
	  2423      "11111100" // /* MW 1 */
	  2424      "11011001" // 	LDA p7, [sp, #-200] /* MW 4 */
	  2425      "01111110" // /* MW 3 */
	  2426      "11100111" // /* MW 2 */
	  2427      "00000111" // /* MW 1 */
	  2428      "00011001" // 	                                                            ST r22, [sp, #-280] /* MW 4 */
	  2429      "01101100" // /* MW 3 */
	  2430      "11011101" // /* MW 2 */
	  2431      "00001111" // /* MW 1 */
	  2432      "11011001" // 	LDA p1, [sp, #-204] /* MW 4 */
	  2433      "11001110" // /* MW 3 */
	  2434      "11100110" // /* MW 2 */
	  2435      "00000111" // /* MW 1 */
	  2436      "10011101" // 	LDA p2, [sp, #-208];                                                                      ADD r22, r3, r1 /* MW 6 */
	  2437      "00010000" // /* MW 5 */
	  2438      "11101100" // /* MW 4 */
	  2439      "11011000" // /* MW 3 */
	  2440      "11001010" // /* MW 2 */
	  2441      "11111100" // /* MW 1 */
	  2442      "10111101" // 	                                                            ST p0, [sp, #-276];           LSHL r22, r22, r5 /* MW 6 */
	  2443      "01011101" // /* MW 5 */
	  2444      "10101100" // /* MW 4 */
	  2445      "11010101" // /* MW 3 */
	  2446      "10111000" // /* MW 2 */
	  2447      "11111011" // /* MW 1 */
	  2448      "10111011" // 	LDA p4, [sp, #-212];                                                                      ADD r3, r22, r2;              ADD.NC lc, r7, #1 /* MW 10 */
	  2449      "01111000" // /* MW 9 */
	  2450      "11000011" // /* MW 8 */
	  2451      "10111001" // /* MW 7 */
	  2452      "00000110" // /* MW 6 */
	  2453      "00110001" // /* MW 5 */
	  2454      "00101100" // /* MW 4 */
	  2455      "11011000" // /* MW 3 */
	  2456      "10111100" // /* MW 2 */
	  2457      "11111100" // /* MW 1 */
	  2458      "11011001" // 	LDA p0, [sp, #-216] /* MW 4 */
	  2459      "01000110" // /* MW 3 */
	  2460      "11100101" // /* MW 2 */
	  2461      "00000111" // /* MW 1 */
	  2462      "11011001" // 	LDA p5, [sp, #-220] /* MW 4 */
	  2463      "11101110" // /* MW 3 */
	  2464      "11100100" // /* MW 2 */
	  2465      "00000111" // /* MW 1 */
	  2466      "01011001" // 	LDA r12, [sp, #-224] /* MW 4 */
	  2467      "01011000" // /* MW 3 */
	  2468      "11100100" // /* MW 2 */
	  2469      "00000111" // /* MW 1 */
	  2470      "01111011" // 	NOPA;                                                       ST p3, [sp, #-284];           NOPX /* MW 10 */
	  2471      "00000000" // /* MW 9 */
	  2472      "00000000" // /* MW 8 */
	  2473      "00000000" // /* MW 7 */
	  2474      "10000000" // /* MW 6 */
	  2475      "11011110" // /* MW 5 */
	  2476      "11011100" // /* MW 4 */
	  2477      "00000111" // /* MW 3 */
	  2478      "00000000" // /* MW 2 */
	  2479      "00000000" // /* MW 1 */
.label ZLS_Fconv2dk1_skip_1216
.begin_of_loop
.noswbrkpt
.loop_nesting 4
	  2480      "10111011" // 	LDA p3, [sp, #-48];                                                                       OR r29, r22, r6;              MOV p3, r3 /* MW 10 */
	  2481      "00101000" // /* MW 9 */
	  2482      "11001011" // /* MW 8 */
	  2483      "10011000" // /* MW 7 */
	  2484      "00101101" // /* MW 6 */
	  2485      "11010011" // /* MW 5 */
	  2486      "00101101" // /* MW 4 */
	  2487      "11011000" // /* MW 3 */
	  2488      "01001011" // /* MW 2 */
	  2489      "11111111" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  2490      "10111011" // 	LDA.u8 r9, [p3], m2;                                                                      OR r26, r22, r4;              MOV dj2, r29 /* MW 10 */
	  2491      "00101000" // /* MW 9 */
	  2492      "01001011" // /* MW 8 */
	  2493      "01010111" // /* MW 7 */
	  2494      "00101110" // /* MW 6 */
	  2495      "10100010" // /* MW 5 */
	  2496      "00101101" // /* MW 4 */
	  2497      "01111000" // /* MW 3 */
	  2498      "00100010" // /* MW 2 */
	  2499      "01101001" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  2500      "10111011" // 	LDA.s8 r8, [p6], m1;                                                                      OR r27, r5, r22;              MOV r3, p3 /* MW 10 */
	  2501      "00101000" // /* MW 9 */
	  2502      "00111011" // /* MW 8 */
	  2503      "01100011" // /* MW 7 */
	  2504      "00101100" // /* MW 6 */
	  2505      "10111011" // /* MW 5 */
	  2506      "00001011" // /* MW 4 */
	  2507      "00111000" // /* MW 3 */
	  2508      "00000010" // /* MW 2 */
	  2509      "11000101" // /* MW 1 */
	  2510      "10111011" // 	LDA.s8 r10, [p7], m1;                                                                     OR r29, r22, r0;              MOV dj3, r26 /* MW 10 */
	  2511      "00101000" // /* MW 9 */
	  2512      "10001011" // /* MW 8 */
	  2513      "01110110" // /* MW 7 */
	  2514      "00101110" // /* MW 6 */
	  2515      "11010000" // /* MW 5 */
	  2516      "00101101" // /* MW 4 */
	  2517      "10111000" // /* MW 3 */
	  2518      "00000010" // /* MW 2 */
	  2519      "11100101" // /* MW 1 */
	  2520      "10111011" // 	LDA.s8 r11, [p1], m1;                                                                     OR r26, r17, r22;             MOV dj4, r27 /* MW 10 */
	  2521      "00101000" // /* MW 9 */
	  2522      "11001011" // /* MW 8 */
	  2523      "10010110" // /* MW 7 */
	  2524      "00101110" // /* MW 6 */
	  2525      "10101011" // /* MW 5 */
	  2526      "00100011" // /* MW 4 */
	  2527      "11111000" // /* MW 3 */
	  2528      "00000010" // /* MW 2 */
	  2529      "00100101" // /* MW 1 */
.noswbrkpt
	  2530      "10111011" // 	LDA.s8 r26, [p2], m1;                                                                     OR r24, r22, r16;             MOV dj5, r29 /* MW 10 */
	  2531      "00101000" // /* MW 9 */
	  2532      "01001011" // /* MW 8 */
	  2533      "10110111" // /* MW 7 */
	  2534      "00101110" // /* MW 6 */
	  2535      "10001000" // /* MW 5 */
	  2536      "00101101" // /* MW 4 */
	  2537      "10111000" // /* MW 3 */
	  2538      "00000110" // /* MW 2 */
	  2539      "01000101" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  2540      "10111011" // 	LDA.s8 r31, [p4], m1;                                                                     OR r29, r19, r22;             MOV dj0, r26 /* MW 10 */
	  2541      "00101000" // /* MW 9 */
	  2542      "10001011" // /* MW 8 */
	  2543      "00010110" // /* MW 7 */
	  2544      "00101110" // /* MW 6 */
	  2545      "11011011" // /* MW 5 */
	  2546      "00100111" // /* MW 4 */
	  2547      "11111000" // /* MW 3 */
	  2548      "00000111" // /* MW 2 */
	  2549      "10000101" // /* MW 1 */
	  2550      "10111011" // 	LDA.u8 r14, [p3, dj2];                                                                    ADD r22, r22, r18;            MOV dj6, r24 /* MW 10 */
	  2551      "00101000" // /* MW 9 */
	  2552      "00001011" // /* MW 8 */
	  2553      "11010110" // /* MW 7 */
	  2554      "00000110" // /* MW 6 */
	  2555      "01101001" // /* MW 5 */
	  2556      "00101101" // /* MW 4 */
	  2557      "10111000" // /* MW 3 */
	  2558      "00100011" // /* MW 2 */
	  2559      "01101010" // /* MW 1 */
	  2560      "01001101" // 	LDA.u8 r28, [p3, dj3];                                                                                                  MOV dj1, r29 /* MW 6 */
	  2561      "10010110" // /* MW 5 */
	  2562      "01101110" // /* MW 4 */
	  2563      "00111100" // /* MW 3 */
	  2564      "00100111" // /* MW 2 */
	  2565      "01101110" // /* MW 1 */
	  2566      "10011101" // 	LDA.u8 r27, [p3, dj4];                                                                    MUL r9, r9, r8 /* MW 6 */
	  2567      "10001111" // /* MW 5 */
	  2568      "01010010" // /* MW 4 */
	  2569      "11111010" // /* MW 3 */
	  2570      "00100110" // /* MW 2 */
	  2571      "01110010" // /* MW 1 */
	  2572      "11011001" // 	LDA.u8 r24, [p3, dj5] /* MW 4 */
	  2573      "00110001" // /* MW 3 */
	  2574      "10110001" // /* MW 2 */
	  2575      "00000011" // /* MW 1 */
	  2576      "10011101" // 	LDA.u8 r15, [p3, dj0];                                                                    ADD r9, r23, r9 /* MW 6 */
	  2577      "10010000" // /* MW 5 */
	  2578      "11010010" // /* MW 4 */
	  2579      "11111101" // /* MW 3 */
	  2580      "00100011" // /* MW 2 */
	  2581      "01100010" // /* MW 1 */
.noswbrkpt
	  2582      "11011001" // 	LDA.s8 r11, [p0], m1 /* MW 4 */
	  2583      "00010111" // /* MW 3 */
	  2584      "00101000" // /* MW 2 */
	  2585      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  2586      "11011001" // 	LDA.u8 r30, [p3, dj6] /* MW 4 */
	  2587      "00111101" // /* MW 3 */
	  2588      "11010001" // /* MW 2 */
	  2589      "00000011" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  2590      "10111011" // 	LDA.u8 r13, [p3, dj1];                                                                    MUL r14, r14, r10;            MOV p3, r12 /* MW 10 */
	  2591      "00101000" // /* MW 9 */
	  2592      "00001011" // /* MW 8 */
	  2593      "10011011" // /* MW 7 */
	  2594      "01111101" // /* MW 6 */
	  2595      "11100101" // /* MW 5 */
	  2596      "00011100" // /* MW 4 */
	  2597      "01111000" // /* MW 3 */
	  2598      "00100011" // /* MW 2 */
	  2599      "01100110" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  2600      "10011101" // 	LDA.s8 r25, [p5], m1;                                                                     MUL r28, r11, r28 /* MW 6 */
	  2601      "11001111" // /* MW 5 */
	  2602      "11111001" // /* MW 4 */
	  2603      "01111010" // /* MW 3 */
	  2604      "00000110" // /* MW 2 */
	  2605      "10100101" // /* MW 1 */
	  2606      "10011101" // 	LDA.s8 r2, [p3], m1;                                                                      MUL r7, r27, r26 /* MW 6 */
	  2607      "10101111" // /* MW 5 */
	  2608      "11001111" // /* MW 4 */
	  2609      "10111110" // /* MW 3 */
	  2610      "00000000" // /* MW 2 */
	  2611      "01100101" // /* MW 1 */
	  2612      "01000011" // 	                                                                                          MUL r31, r31, r24;            MOV r12, p3 /* MW 8 */
	  2613      "00101000" // /* MW 7 */
	  2614      "00111011" // /* MW 6 */
	  2615      "10000011" // /* MW 5 */
	  2616      "01111101" // /* MW 4 */
	  2617      "11111100" // /* MW 3 */
	  2618      "00111111" // /* MW 2 */
	  2619      "00000000" // /* MW 1 */
	  2620      "00000001" // 	NOPX /* MW 2 */
	  2621      "00000000" // /* MW 1 */
	  2622      "10011001" // 	                                                                                          ADD r14, r9, r14 /* MW 4 */
	  2623      "11100000" // /* MW 3 */
	  2624      "01011100" // /* MW 2 */
	  2625      "00010010" // /* MW 1 */
	  2626      "10011001" // 	                                                                                          ADD r28, r14, r28 /* MW 4 */
	  2627      "11000000" // /* MW 3 */
	  2628      "10111001" // /* MW 2 */
	  2629      "00010011" // /* MW 1 */
	  2630      "10011001" // 	                                                                                          ADD r7, r7, r28 /* MW 4 */
	  2631      "11000000" // /* MW 3 */
	  2632      "11001111" // /* MW 2 */
	  2633      "00010001" // /* MW 1 */
	  2634      "10011001" // 	                                                                                          MUL r15, r15, r11 /* MW 4 */
	  2635      "10111111" // /* MW 3 */
	  2636      "11011110" // /* MW 2 */
	  2637      "00010011" // /* MW 1 */
	  2638      "10011001" // 	                                                                                          MUL r25, r25, r30 /* MW 4 */
	  2639      "11101111" // /* MW 3 */
	  2640      "01110011" // /* MW 2 */
	  2641      "00010110" // /* MW 1 */
	  2642      "10011001" // 	                                                                                          MUL r2, r13, r2 /* MW 4 */
	  2643      "00101111" // /* MW 3 */
	  2644      "01000100" // /* MW 2 */
	  2645      "00010011" // /* MW 1 */
	  2646      "00000001" // 	NOPX /* MW 2 */
	  2647      "00000000" // /* MW 1 */
	  2648      "10011001" // 	                                                                                          ADD r7, r31, r7 /* MW 4 */
	  2649      "01110000" // /* MW 3 */
	  2650      "11001110" // /* MW 2 */
	  2651      "00010111" // /* MW 1 */
	  2652      "10011001" // 	                                                                                          ADD r7, r15, r7 /* MW 4 */
	  2653      "01110000" // /* MW 3 */
	  2654      "11001110" // /* MW 2 */
	  2655      "00010011" // /* MW 1 */
	  2656      "11000000" // 	NOPA;                         NOPB;                         NOPS;                         ADD r7, r7, r25;              NOPM;                                   NOPV /* MW 16 */
	  2657      "00000011" // /* MW 15 */
	  2658      "00000000" // /* MW 14 */
	  2659      "10001000" // /* MW 13 */
	  2660      "00000011" // /* MW 12 */
	  2661      "00000000" // /* MW 11 */
	  2662      "10000100" // /* MW 10 */
	  2663      "01111100" // /* MW 9 */
	  2664      "00001110" // /* MW 8 */
	  2665      "00000000" // /* MW 7 */
	  2666      "00000000" // /* MW 6 */
	  2667      "00000000" // /* MW 5 */
	  2668      "00000000" // /* MW 4 */
	  2669      "00000000" // /* MW 3 */
	  2670      "00000000" // /* MW 2 */
	  2671      "00000000" // /* MW 1 */
.label ZLE_Fconv2dk1_skip_1408
.end_of_loop
	  2672      "11000000" // 	NOPA;                         NOPB;                         NOPS;                         ADD r23, r7, r2;              NOPM;                                   NOPV /* MW 16 */
	  2673      "00000011" // /* MW 15 */
	  2674      "00000000" // /* MW 14 */
	  2675      "10001000" // /* MW 13 */
	  2676      "00000011" // /* MW 12 */
	  2677      "00000000" // /* MW 11 */
	  2678      "00000100" // /* MW 10 */
	  2679      "01110001" // /* MW 9 */
	  2680      "00001111" // /* MW 8 */
	  2681      "00000000" // /* MW 7 */
	  2682      "00000000" // /* MW 6 */
	  2683      "00000000" // /* MW 5 */
	  2684      "00000000" // /* MW 4 */
	  2685      "00000000" // /* MW 3 */
	  2686      "00000000" // /* MW 2 */
	  2687      "00000000" // /* MW 1 */
.loop_nesting 3
	  2688      "10111011" // 	LDA r22, [sp, #-280];                                                                     MOVX r4, #-128;               MOV r2, #0 /* MW 10 */
	  2689      "01001000" // /* MW 9 */
	  2690      "00000011" // /* MW 8 */
	  2691      "01000000" // /* MW 7 */
	  2692      "00001000" // /* MW 6 */
	  2693      "01000000" // /* MW 5 */
	  2694      "00111100" // /* MW 4 */
	  2695      "10001000" // /* MW 3 */
	  2696      "10101101" // /* MW 2 */
	  2697      "11111011" // /* MW 1 */
	  2698      "10111011" // 	LDA p0, [sp, #-276];                                                                      MOVX r7, #-31;                MOV r0, #255 /* MW 10 */
	  2699      "11001000" // /* MW 9 */
	  2700      "11111111" // /* MW 8 */
	  2701      "00000001" // /* MW 7 */
	  2702      "00101000" // /* MW 6 */
	  2703      "01110100" // /* MW 5 */
	  2704      "00111110" // /* MW 4 */
	  2705      "11011000" // /* MW 3 */
	  2706      "10111000" // /* MW 2 */
	  2707      "11111011" // /* MW 1 */
	  2708      "10111011" // 	LDA p3, [sp, #-284];                                                                      MOVXM p6, #1968 /* MW 10 */
	  2709      "00010000" // /* MW 9 */
	  2710      "11011000" // /* MW 8 */
	  2711      "00011011" // /* MW 7 */
	  2712      "00000011" // /* MW 6 */
	  2713      "00000000" // /* MW 5 */
	  2714      "00000000" // /* MW 4 */
	  2715      "11011000" // /* MW 3 */
	  2716      "10011011" // /* MW 2 */
	  2717      "11111011" // /* MW 1 */
	  2718      "00011101" // 	LDA r3, [sp, #-148];                                                                      MOVX r13, #127 /* MW 6 */
	  2719      "11111101" // /* MW 5 */
	  2720      "01011010" // /* MW 4 */
	  2721      "11001000" // /* MW 3 */
	  2722      "10111000" // /* MW 2 */
	  2723      "11111101" // /* MW 1 */
	  2724      "01011001" // 	LDA r28, [sp, #-112] /* MW 4 */
	  2725      "01111000" // /* MW 3 */
	  2726      "11110010" // /* MW 2 */
	  2727      "00000111" // /* MW 1 */
	  2728      "01011001" // 	LDA r15, [sp, #-92] /* MW 4 */
	  2729      "11011110" // /* MW 3 */
	  2730      "11110100" // /* MW 2 */
	  2731      "00000111" // /* MW 1 */
	  2732      "01011001" // 	LDA r12, [sp, #-76] /* MW 4 */
	  2733      "11011000" // /* MW 3 */
	  2734      "11110110" // /* MW 2 */
	  2735      "00000111" // /* MW 1 */
	  2736      "01011001" // 	LDA r10, [sp, #-104] /* MW 4 */
	  2737      "01010100" // /* MW 3 */
	  2738      "11110011" // /* MW 2 */
	  2739      "00000111" // /* MW 1 */
	  2740      "01011001" // 	LDA r11, [sp, #-84] /* MW 4 */
	  2741      "11010110" // /* MW 3 */
	  2742      "11110101" // /* MW 2 */
	  2743      "00000111" // /* MW 1 */
	  2744      "01011001" // 	LDA r8, [sp, #-116] /* MW 4 */
	  2745      "11010000" // /* MW 3 */
	  2746      "11110001" // /* MW 2 */
	  2747      "00000111" // /* MW 1 */
	  2748      "01011001" // 	LDA r24, [sp, #-96] /* MW 4 */
	  2749      "01110000" // /* MW 3 */
	  2750      "11110100" // /* MW 2 */
	  2751      "00000111" // /* MW 1 */
	  2752      "01011001" // 	LDA r9, [sp, #-120] /* MW 4 */
	  2753      "01010010" // /* MW 3 */
	  2754      "11110001" // /* MW 2 */
	  2755      "00000111" // /* MW 1 */
	  2756      "01011001" // 	LDA r26, [sp, #-128] /* MW 4 */
	  2757      "01110100" // /* MW 3 */
	  2758      "11110000" // /* MW 2 */
	  2759      "00000111" // /* MW 1 */
	  2760      "00100011" // 	LDA r29, [sp, #-108];                                                                                                                                           NOPV /* MW 8 */
	  2761      "01111000" // /* MW 7 */
	  2762      "00000000" // /* MW 6 */
	  2763      "00000000" // /* MW 5 */
	  2764      "00000100" // /* MW 4 */
	  2765      "01001000" // /* MW 3 */
	  2766      "01011111" // /* MW 2 */
	  2767      "11111110" // /* MW 1 */
.label TGT_Fconv2dk1_skip_1504
	  2768      "10011001" // 	                                                                                          ADD r23, r23, r28 /* MW 4 */
	  2769      "11000000" // /* MW 3 */
	  2770      "11101111" // /* MW 2 */
	  2771      "00010101" // /* MW 1 */
	  2772      "10010101" // 	                                                                                          JNZ r12, #3184 /* MW 6 */
	  2773      "00000001" // /* MW 5 */
	  2774      "01000000" // /* MW 4 */
	  2775      "00111000" // /* MW 3 */
	  2776      "00000110" // /* MW 2 */
	  2777      "01100000" // /* MW 1 */
.delay_slot
	  2778      "10011001" // 	                                                                                          ASHL r23, r23, r15 /* MW 4 */
	  2779      "11111110" // /* MW 3 */
	  2780      "11101110" // /* MW 2 */
	  2781      "00010101" // /* MW 1 */
.delay_slot
	  2782      "10011001" // 	                                                                                          LT r27, r4, r23 /* MW 4 */
	  2783      "01111010" // /* MW 3 */
	  2784      "00110111" // /* MW 2 */
	  2785      "00010001" // /* MW 1 */
.delay_slot
	  2786      "00011001" // 	                                                                                          SEL.EQZ r23, r4, r23, r27 /* MW 4 */
	  2787      "01110110" // /* MW 3 */
	  2788      "00101111" // /* MW 2 */
	  2789      "00010001" // /* MW 1 */
.delay_slot
	  2790      "10011001" // 	                                                                                          LT r27, r23, r13 /* MW 4 */
	  2791      "11011010" // /* MW 3 */
	  2792      "11110110" // /* MW 2 */
	  2793      "00010101" // /* MW 1 */
.delay_slot
	  2794      "01000011" // 	                                                                                          SEL.EQZ r23, r13, r23, r27;   MOV r6, #0 /* MW 8 */
	  2795      "01001000" // /* MW 7 */
	  2796      "00000011" // /* MW 6 */
	  2797      "11000000" // /* MW 5 */
	  2798      "10110000" // /* MW 4 */
	  2799      "01111011" // /* MW 3 */
	  2800      "00011011" // /* MW 2 */
	  2801      "00000000" // /* MW 1 */
	  2802      "10111011" // 	LDA r2, [sp, #-124];                                                                      MOVXM ls, #2896 /* MW 10 */
	  2803      "00010000" // /* MW 9 */
	  2804      "10101000" // /* MW 8 */
	  2805      "00111101" // /* MW 7 */
	  2806      "00000000" // /* MW 6 */
	  2807      "00000000" // /* MW 5 */
	  2808      "00000000" // /* MW 4 */
	  2809      "10001000" // /* MW 3 */
	  2810      "00011000" // /* MW 2 */
	  2811      "11111110" // /* MW 1 */
	  2812      "10111011" // 	LDA p6, [sp, #-228];                                                                      MOVXM le, #3088 /* MW 10 */
	  2813      "00010000" // /* MW 9 */
	  2814      "00001000" // /* MW 8 */
	  2815      "00111110" // /* MW 7 */
	  2816      "00000010" // /* MW 6 */
	  2817      "00000000" // /* MW 5 */
	  2818      "00000000" // /* MW 4 */
	  2819      "11011000" // /* MW 3 */
	  2820      "01111110" // /* MW 2 */
	  2821      "11111100" // /* MW 1 */
	  2822      "10111011" // 	LDA p7, [sp, #-232];                                                                      MOVX r0, #2;                  MOV r4, #1 /* MW 10 */
	  2823      "11001000" // /* MW 9 */
	  2824      "00000011" // /* MW 8 */
	  2825      "10000000" // /* MW 7 */
	  2826      "01001000" // /* MW 6 */
	  2827      "00000000" // /* MW 5 */
	  2828      "00000000" // /* MW 4 */
	  2829      "11011000" // /* MW 3 */
	  2830      "01101111" // /* MW 2 */
	  2831      "11111100" // /* MW 1 */
	  2832      "10111011" // 	LDA p1, [sp, #-236];                                                                      MOVX r3, #3;                  MOV r5, #4 /* MW 10 */
	  2833      "01001000" // /* MW 9 */
	  2834      "00001011" // /* MW 8 */
	  2835      "10100000" // /* MW 7 */
	  2836      "01101000" // /* MW 6 */
	  2837      "00110000" // /* MW 5 */
	  2838      "00000000" // /* MW 4 */
	  2839      "11011000" // /* MW 3 */
	  2840      "01011001" // /* MW 2 */
	  2841      "11111100" // /* MW 1 */
	  2842      "11011001" // 	LDA p5, [sp, #-240] /* MW 4 */
	  2843      "01101110" // /* MW 3 */
	  2844      "11100010" // /* MW 2 */
	  2845      "00000111" // /* MW 1 */
	  2846      "10011001" // 	                                                            ST p0, [sp, #-276] /* MW 4 */
	  2847      "11000110" // /* MW 3 */
	  2848      "11011101" // /* MW 2 */
	  2849      "00001111" // /* MW 1 */
	  2850      "00000011" // 	                                                            ST r1, [sp, #-288];                                         MOV r1, r20 /* MW 8 */
	  2851      "00100000" // /* MW 7 */
	  2852      "00001011" // /* MW 6 */
	  2853      "00100101" // /* MW 5 */
	  2854      "00000000" // /* MW 4 */
	  2855      "01000000" // /* MW 3 */
	  2856      "10001000" // /* MW 2 */
	  2857      "11111011" // /* MW 1 */
	  2858      "00000011" // 	                                                            ST r22, [sp, #-284];                                        MOV lc, r2 /* MW 8 */
	  2859      "00100000" // /* MW 7 */
	  2860      "10001011" // /* MW 6 */
	  2861      "10111000" // /* MW 5 */
	  2862      "00000010" // /* MW 4 */
	  2863      "10000000" // /* MW 3 */
	  2864      "10011101" // /* MW 2 */
	  2865      "11111011" // /* MW 1 */
	  2866      "10011001" // 	                                                            ST p3, [sp, #-280] /* MW 4 */
	  2867      "01011110" // /* MW 3 */
	  2868      "11011101" // /* MW 2 */
	  2869      "00001111" // /* MW 1 */
	  2870      "11011001" // 	LDA p0, [sp, #-244] /* MW 4 */
	  2871      "11000110" // /* MW 3 */
	  2872      "11100001" // /* MW 2 */
	  2873      "00000111" // /* MW 1 */
	  2874      "11011001" // 	LDA p4, [sp, #-248] /* MW 4 */
	  2875      "01100110" // /* MW 3 */
	  2876      "11100001" // /* MW 2 */
	  2877      "00000111" // /* MW 1 */
	  2878      "11011001" // 	LDA p2, [sp, #-252] /* MW 4 */
	  2879      "11010110" // /* MW 3 */
	  2880      "11100000" // /* MW 2 */
	  2881      "00000111" // /* MW 1 */
	  2882      "00101111" // 	LDA r12, [sp, #-256];                                       NOPS;                                                       NOPM;                                   NOPV /* MW 14 */
	  2883      "01111000" // /* MW 13 */
	  2884      "00000000" // /* MW 12 */
	  2885      "00000000" // /* MW 11 */
	  2886      "00111000" // /* MW 10 */
	  2887      "00000000" // /* MW 9 */
	  2888      "01000000" // /* MW 8 */
	  2889      "00000000" // /* MW 7 */
	  2890      "00000000" // /* MW 6 */
	  2891      "00000000" // /* MW 5 */
	  2892      "00000000" // /* MW 4 */
	  2893      "00001000" // /* MW 3 */
	  2894      "00001011" // /* MW 2 */
	  2895      "11111100" // /* MW 1 */
.label ZLS_Fconv2dk1_skip_1632
.begin_of_loop
.noswbrkpt
.loop_nesting 4
	  2896      "10111011" // 	LDA p3, [sp, #-56];                                                                       OR r29, r22, r4;              MOV p3, r1 /* MW 10 */
	  2897      "00101000" // /* MW 9 */
	  2898      "01001011" // /* MW 8 */
	  2899      "10011000" // /* MW 7 */
	  2900      "00101101" // /* MW 6 */
	  2901      "11010010" // /* MW 5 */
	  2902      "00101101" // /* MW 4 */
	  2903      "11011000" // /* MW 3 */
	  2904      "00101011" // /* MW 2 */
	  2905      "11111111" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  2906      "10111011" // 	LDA.s8 r7, [p3], m2;                                                                      OR r26, r22, r0;              MOV dj2, r29 /* MW 10 */
	  2907      "00101000" // /* MW 9 */
	  2908      "01001011" // /* MW 8 */
	  2909      "01010111" // /* MW 7 */
	  2910      "00101110" // /* MW 6 */
	  2911      "10100000" // /* MW 5 */
	  2912      "00101101" // /* MW 4 */
	  2913      "11111000" // /* MW 3 */
	  2914      "00000001" // /* MW 2 */
	  2915      "01101001" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  2916      "10111011" // 	LDA.s8 r8, [p6], m1;                                                                      OR r27, r3, r22;              MOV r1, p3 /* MW 10 */
	  2917      "00101000" // /* MW 9 */
	  2918      "00111011" // /* MW 8 */
	  2919      "00100011" // /* MW 7 */
	  2920      "00101100" // /* MW 6 */
	  2921      "10111011" // /* MW 5 */
	  2922      "00000111" // /* MW 4 */
	  2923      "00111000" // /* MW 3 */
	  2924      "00000010" // /* MW 2 */
	  2925      "11000101" // /* MW 1 */
	  2926      "10111011" // 	LDA.s8 r9, [p7], m1;                                                                      OR r29, r5, r22;              MOV dj3, r26 /* MW 10 */
	  2927      "00101000" // /* MW 9 */
	  2928      "10001011" // /* MW 8 */
	  2929      "01110110" // /* MW 7 */
	  2930      "00101110" // /* MW 6 */
	  2931      "11011011" // /* MW 5 */
	  2932      "00001011" // /* MW 4 */
	  2933      "01111000" // /* MW 3 */
	  2934      "00000010" // /* MW 2 */
	  2935      "11100101" // /* MW 1 */
	  2936      "10111011" // 	LDA.s8 r11, [p1], m1;                                                                     OR r26, r17, r22;             MOV dj4, r27 /* MW 10 */
	  2937      "00101000" // /* MW 9 */
	  2938      "11001011" // /* MW 8 */
	  2939      "10010110" // /* MW 7 */
	  2940      "00101110" // /* MW 6 */
	  2941      "10101011" // /* MW 5 */
	  2942      "00100011" // /* MW 4 */
	  2943      "11111000" // /* MW 3 */
	  2944      "00000010" // /* MW 2 */
	  2945      "00100101" // /* MW 1 */
.noswbrkpt
	  2946      "10111011" // 	LDA.s8 r26, [p5], m1;                                                                     OR r24, r22, r16;             MOV dj5, r29 /* MW 10 */
	  2947      "00101000" // /* MW 9 */
	  2948      "01001011" // /* MW 8 */
	  2949      "10110111" // /* MW 7 */
	  2950      "00101110" // /* MW 6 */
	  2951      "10001000" // /* MW 5 */
	  2952      "00101101" // /* MW 4 */
	  2953      "10111000" // /* MW 3 */
	  2954      "00000110" // /* MW 2 */
	  2955      "10100101" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  2956      "10111011" // 	LDA.s8 r31, [p0], m1;                                                                     OR r29, r19, r22;             MOV dj1, r26 /* MW 10 */
	  2957      "00101000" // /* MW 9 */
	  2958      "10001011" // /* MW 8 */
	  2959      "00110110" // /* MW 7 */
	  2960      "00101110" // /* MW 6 */
	  2961      "11011011" // /* MW 5 */
	  2962      "00100111" // /* MW 4 */
	  2963      "11111000" // /* MW 3 */
	  2964      "00000111" // /* MW 2 */
	  2965      "00000101" // /* MW 1 */
	  2966      "10111011" // 	LDA.s8 r14, [p3, dj2];                                                                    ADD r22, r22, r18;            MOV dj0, r24 /* MW 10 */
	  2967      "00101000" // /* MW 9 */
	  2968      "00001011" // /* MW 8 */
	  2969      "00010110" // /* MW 7 */
	  2970      "00000110" // /* MW 6 */
	  2971      "01101001" // /* MW 5 */
	  2972      "00101101" // /* MW 4 */
	  2973      "10111000" // /* MW 3 */
	  2974      "00000011" // /* MW 2 */
	  2975      "01101010" // /* MW 1 */
	  2976      "01001101" // 	LDA.s8 r28, [p3, dj3];                                                                                                  MOV dj6, r29 /* MW 6 */
	  2977      "10010110" // /* MW 5 */
	  2978      "10101110" // /* MW 4 */
	  2979      "00111101" // /* MW 3 */
	  2980      "00000111" // /* MW 2 */
	  2981      "01101110" // /* MW 1 */
	  2982      "10011101" // 	LDA.s8 r27, [p3, dj4];                                                                    MUL r7, r7, r8 /* MW 6 */
	  2983      "10001111" // /* MW 5 */
	  2984      "11001110" // /* MW 4 */
	  2985      "11111001" // /* MW 3 */
	  2986      "00000110" // /* MW 2 */
	  2987      "01110010" // /* MW 1 */
	  2988      "11011001" // 	LDA.s8 r24, [p3, dj5] /* MW 4 */
	  2989      "00110001" // /* MW 3 */
	  2990      "10110000" // /* MW 2 */
	  2991      "00000011" // /* MW 1 */
	  2992      "10011101" // 	LDA.s8 r15, [p3, dj1];                                                                    ADD r7, r7, r6 /* MW 6 */
	  2993      "01100000" // /* MW 5 */
	  2994      "11001110" // /* MW 4 */
	  2995      "11111001" // /* MW 3 */
	  2996      "00000011" // /* MW 2 */
	  2997      "01100110" // /* MW 1 */
.noswbrkpt
	  2998      "11011001" // 	LDA.s8 r11, [p4], m1 /* MW 4 */
	  2999      "00010111" // /* MW 3 */
	  3000      "00101000" // /* MW 2 */
	  3001      "00000100" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  3002      "11011001" // 	LDA.s8 r30, [p3, dj0] /* MW 4 */
	  3003      "00111101" // /* MW 3 */
	  3004      "00010000" // /* MW 2 */
	  3005      "00000011" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  3006      "10111011" // 	LDA.s8 r10, [p3, dj6];                                                                    MUL r14, r9, r14;             MOV p3, r12 /* MW 10 */
	  3007      "00101000" // /* MW 9 */
	  3008      "00001011" // /* MW 8 */
	  3009      "10011011" // /* MW 7 */
	  3010      "01111101" // /* MW 6 */
	  3011      "11100111" // /* MW 5 */
	  3012      "00010010" // /* MW 4 */
	  3013      "10111000" // /* MW 3 */
	  3014      "00000010" // /* MW 2 */
	  3015      "01111010" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  3016      "10011101" // 	LDA.s8 r25, [p2], m1;                                                                     MUL r28, r11, r28 /* MW 6 */
	  3017      "11001111" // /* MW 5 */
	  3018      "11111001" // /* MW 4 */
	  3019      "01111010" // /* MW 3 */
	  3020      "00000110" // /* MW 2 */
	  3021      "01000101" // /* MW 1 */
	  3022      "10011101" // 	LDA.s8 r13, [p3], m1;                                                                     MUL r2, r27, r26 /* MW 6 */
	  3023      "10101111" // /* MW 5 */
	  3024      "11000101" // /* MW 4 */
	  3025      "01111110" // /* MW 3 */
	  3026      "00000011" // /* MW 2 */
	  3027      "01100101" // /* MW 1 */
	  3028      "01000011" // 	                                                                                          MUL r31, r31, r24;            MOV r12, p3 /* MW 8 */
	  3029      "00101000" // /* MW 7 */
	  3030      "00111011" // /* MW 6 */
	  3031      "10000011" // /* MW 5 */
	  3032      "01111101" // /* MW 4 */
	  3033      "11111100" // /* MW 3 */
	  3034      "00111111" // /* MW 2 */
	  3035      "00000000" // /* MW 1 */
	  3036      "00000001" // 	NOPX /* MW 2 */
	  3037      "00000000" // /* MW 1 */
	  3038      "10011001" // 	                                                                                          ADD r14, r7, r14 /* MW 4 */
	  3039      "11100000" // /* MW 3 */
	  3040      "11011100" // /* MW 2 */
	  3041      "00010001" // /* MW 1 */
	  3042      "10011001" // 	                                                                                          ADD r28, r14, r28 /* MW 4 */
	  3043      "11000000" // /* MW 3 */
	  3044      "10111001" // /* MW 2 */
	  3045      "00010011" // /* MW 1 */
	  3046      "10011001" // 	                                                                                          ADD r2, r2, r28 /* MW 4 */
	  3047      "11000000" // /* MW 3 */
	  3048      "10000101" // /* MW 2 */
	  3049      "00010000" // /* MW 1 */
	  3050      "10011001" // 	                                                                                          MUL r15, r15, r11 /* MW 4 */
	  3051      "10111111" // /* MW 3 */
	  3052      "11011110" // /* MW 2 */
	  3053      "00010011" // /* MW 1 */
	  3054      "10011001" // 	                                                                                          MUL r25, r25, r30 /* MW 4 */
	  3055      "11101111" // /* MW 3 */
	  3056      "01110011" // /* MW 2 */
	  3057      "00010110" // /* MW 1 */
	  3058      "10011001" // 	                                                                                          MUL r13, r13, r10 /* MW 4 */
	  3059      "10101111" // /* MW 3 */
	  3060      "01011010" // /* MW 2 */
	  3061      "00010011" // /* MW 1 */
	  3062      "00000001" // 	NOPX /* MW 2 */
	  3063      "00000000" // /* MW 1 */
	  3064      "10011001" // 	                                                                                          ADD r2, r31, r2 /* MW 4 */
	  3065      "00100000" // /* MW 3 */
	  3066      "11000100" // /* MW 2 */
	  3067      "00010111" // /* MW 1 */
	  3068      "10011001" // 	                                                                                          ADD r2, r15, r2 /* MW 4 */
	  3069      "00100000" // /* MW 3 */
	  3070      "11000100" // /* MW 2 */
	  3071      "00010011" // /* MW 1 */
	  3072      "11000000" // 	NOPA;                         NOPB;                         NOPS;                         ADD r2, r25, r2;              NOPM;                                   NOPV /* MW 16 */
	  3073      "00000011" // /* MW 15 */
	  3074      "00000000" // /* MW 14 */
	  3075      "10001000" // /* MW 13 */
	  3076      "00000011" // /* MW 12 */
	  3077      "00000000" // /* MW 11 */
	  3078      "00000100" // /* MW 10 */
	  3079      "00100001" // /* MW 9 */
	  3080      "00110010" // /* MW 8 */
	  3081      "00000000" // /* MW 7 */
	  3082      "00000000" // /* MW 6 */
	  3083      "00000000" // /* MW 5 */
	  3084      "00000000" // /* MW 4 */
	  3085      "00000000" // /* MW 3 */
	  3086      "00000000" // /* MW 2 */
	  3087      "00000000" // /* MW 1 */
.label ZLE_Fconv2dk1_skip_1824
.end_of_loop
	  3088      "11000000" // 	NOPA;                         NOPB;                         NOPS;                         ADD r6, r13, r2;              NOPM;                                   NOPV /* MW 16 */
	  3089      "00000011" // /* MW 15 */
	  3090      "00000000" // /* MW 14 */
	  3091      "10001000" // /* MW 13 */
	  3092      "00000011" // /* MW 12 */
	  3093      "00000000" // /* MW 11 */
	  3094      "00000100" // /* MW 10 */
	  3095      "01100001" // /* MW 9 */
	  3096      "00011010" // /* MW 8 */
	  3097      "00000000" // /* MW 7 */
	  3098      "00000000" // /* MW 6 */
	  3099      "00000000" // /* MW 5 */
	  3100      "00000000" // /* MW 4 */
	  3101      "00000000" // /* MW 3 */
	  3102      "00000000" // /* MW 2 */
	  3103      "00000000" // /* MW 1 */
.loop_nesting 3
	  3104      "10111011" // 	LDA r1, [sp, #-288];                                                                      MOVX r4, #-128;               MOV r2, #0 /* MW 10 */
	  3105      "01001000" // /* MW 9 */
	  3106      "00000011" // /* MW 8 */
	  3107      "01000000" // /* MW 7 */
	  3108      "00001000" // /* MW 6 */
	  3109      "01000000" // /* MW 5 */
	  3110      "00111100" // /* MW 4 */
	  3111      "01001000" // /* MW 3 */
	  3112      "10001000" // /* MW 2 */
	  3113      "11111011" // /* MW 1 */
	  3114      "10111011" // 	LDA r22, [sp, #-284];                                                                     MOVX r0, #255;                MOV r13, #127 /* MW 10 */
	  3115      "11001000" // /* MW 9 */
	  3116      "11111111" // /* MW 8 */
	  3117      "10100000" // /* MW 7 */
	  3118      "11101001" // /* MW 6 */
	  3119      "00000111" // /* MW 5 */
	  3120      "00000110" // /* MW 4 */
	  3121      "10001000" // /* MW 3 */
	  3122      "10011101" // /* MW 2 */
	  3123      "11111011" // /* MW 1 */
	  3124      "00011101" // 	LDA p0, [sp, #-276];                                                                      MOVX r7, #-31 /* MW 6 */
	  3125      "10000101" // /* MW 5 */
	  3126      "11001110" // /* MW 4 */
	  3127      "11011111" // /* MW 3 */
	  3128      "10111000" // /* MW 2 */
	  3129      "11111011" // /* MW 1 */
	  3130      "10111011" // 	LDA p3, [sp, #-280];                                                                      MOVXM p6, #1968 /* MW 10 */
	  3131      "00010000" // /* MW 9 */
	  3132      "11011000" // /* MW 8 */
	  3133      "00011011" // /* MW 7 */
	  3134      "00000011" // /* MW 6 */
	  3135      "00000000" // /* MW 5 */
	  3136      "00000000" // /* MW 4 */
	  3137      "11011000" // /* MW 3 */
	  3138      "10101011" // /* MW 2 */
	  3139      "11111011" // /* MW 1 */
	  3140      "01011001" // 	LDA r10, [sp, #-104] /* MW 4 */
	  3141      "01010100" // /* MW 3 */
	  3142      "11110011" // /* MW 2 */
	  3143      "00000111" // /* MW 1 */
	  3144      "01011001" // 	LDA r8, [sp, #-116] /* MW 4 */
	  3145      "11010000" // /* MW 3 */
	  3146      "11110001" // /* MW 2 */
	  3147      "00000111" // /* MW 1 */
	  3148      "01011001" // 	LDA r24, [sp, #-96] /* MW 4 */
	  3149      "01110000" // /* MW 3 */
	  3150      "11110100" // /* MW 2 */
	  3151      "00000111" // /* MW 1 */
	  3152      "01011001" // 	LDA r9, [sp, #-120] /* MW 4 */
	  3153      "01010010" // /* MW 3 */
	  3154      "11110001" // /* MW 2 */
	  3155      "00000111" // /* MW 1 */
	  3156      "01011001" // 	LDA r26, [sp, #-128] /* MW 4 */
	  3157      "01110100" // /* MW 3 */
	  3158      "11110000" // /* MW 2 */
	  3159      "00000111" // /* MW 1 */
	  3160      "01011001" // 	LDA r29, [sp, #-108] /* MW 4 */
	  3161      "11111010" // /* MW 3 */
	  3162      "11110010" // /* MW 2 */
	  3163      "00000111" // /* MW 1 */
	  3164      "01011001" // 	LDA r11, [sp, #-84] /* MW 4 */
	  3165      "11010110" // /* MW 3 */
	  3166      "11110101" // /* MW 2 */
	  3167      "00000111" // /* MW 1 */
	  3168      "01011001" // 	LDA r3, [sp, #-148] /* MW 4 */
	  3169      "11000110" // /* MW 3 */
	  3170      "11101101" // /* MW 2 */
	  3171      "00000111" // /* MW 1 */
	  3172      "01011001" // 	LDA r28, [sp, #-112] /* MW 4 */
	  3173      "01111000" // /* MW 3 */
	  3174      "11110010" // /* MW 2 */
	  3175      "00000111" // /* MW 1 */
	  3176      "01011001" // 	LDA r15, [sp, #-92] /* MW 4 */
	  3177      "11011110" // /* MW 3 */
	  3178      "11110100" // /* MW 2 */
	  3179      "00000111" // /* MW 1 */
	  3180      "01011001" // 	LDA r12, [sp, #-76] /* MW 4 */
	  3181      "11011000" // /* MW 3 */
	  3182      "11110110" // /* MW 2 */
	  3183      "00000111" // /* MW 1 */
.label TGT_Fconv2dk1_skip_1920
.noswbrkpt
	  3184      "10111011" // 	LDA r27, [sp, #-100];                                                                     ADD r6, r6, r8;               ADD.NC r1, r1, #1 /* MW 10 */
	  3185      "01111000" // /* MW 9 */
	  3186      "01000011" // /* MW 8 */
	  3187      "00100000" // /* MW 7 */
	  3188      "00000100" // /* MW 6 */
	  3189      "01100100" // /* MW 5 */
	  3190      "00001100" // /* MW 4 */
	  3191      "11001000" // /* MW 3 */
	  3192      "01111110" // /* MW 2 */
	  3193      "11111110" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  3194      "10011001" // 	                                                                                          ASHL r6, r6, r24 /* MW 4 */
	  3195      "10001110" // /* MW 3 */
	  3196      "10001101" // /* MW 2 */
	  3197      "00010001" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  3198      "10011001" // 	                                                                                          LT r27, r4, r6 /* MW 4 */
	  3199      "01101010" // /* MW 3 */
	  3200      "00110110" // /* MW 2 */
	  3201      "00010001" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  3202      "00011001" // 	                                                                                          SEL.EQZ r6, r4, r6, r27 /* MW 4 */
	  3203      "01100110" // /* MW 3 */
	  3204      "00001100" // /* MW 2 */
	  3205      "00010001" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  3206      "10011001" // 	                                                                                          LT r27, r6, r13 /* MW 4 */
	  3207      "11011010" // /* MW 3 */
	  3208      "10110110" // /* MW 2 */
	  3209      "00010001" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  3210      "00011001" // 	                                                                                          SEL.EQZ r6, r13, r6, r27 /* MW 4 */
	  3211      "01100110" // /* MW 3 */
	  3212      "01001100" // /* MW 2 */
	  3213      "00010011" // /* MW 1 */
	  3214      "10011001" // 	                                                                                          ADD r6, r23, r6 /* MW 4 */
	  3215      "01100000" // /* MW 3 */
	  3216      "11001100" // /* MW 2 */
	  3217      "00010101" // /* MW 1 */
	  3218      "10011001" // 	                                                                                          ADD r23, r9, r6 /* MW 4 */
	  3219      "01100000" // /* MW 3 */
	  3220      "01101110" // /* MW 2 */
	  3221      "00010010" // /* MW 1 */
.noswbrkpt
	  3222      "10011101" // 	LDA r27, [sp, #-60];                                                                      ASHL r6, r6, r7 /* MW 6 */
	  3223      "01111110" // /* MW 5 */
	  3224      "10001100" // /* MW 4 */
	  3225      "11001001" // /* MW 3 */
	  3226      "00011110" // /* MW 2 */
	  3227      "11111111" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  3228      "10011001" // 	                                                                                          ADC r6, r6, r26 /* MW 4 */
	  3229      "10100010" // /* MW 3 */
	  3230      "10001101" // /* MW 2 */
	  3231      "00010001" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  3232      "10011001" // 	                                                                                          LSHL r25, r6, r10 /* MW 4 */
	  3233      "10101101" // /* MW 3 */
	  3234      "10110010" // /* MW 2 */
	  3235      "00010001" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  3236      "10011001" // 	                                                                                          LSHL r30, r23, r29 /* MW 4 */
	  3237      "11011101" // /* MW 3 */
	  3238      "11111101" // /* MW 2 */
	  3239      "00010101" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  3240      "10011001" // 	                                                                                          OR r25, r25, r30 /* MW 4 */
	  3241      "11100101" // /* MW 3 */
	  3242      "01110011" // /* MW 2 */
	  3243      "00010110" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  3244      "10011001" // 	                                                                                          ASHL r6, r6, r10 /* MW 4 */
	  3245      "10101110" // /* MW 3 */
	  3246      "10001100" // /* MW 2 */
	  3247      "00010001" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  3248      "00011001" // 	                                                                                          SEL.EQZ r6, r6, r25, r27 /* MW 4 */
	  3249      "10010110" // /* MW 3 */
	  3250      "10001101" // /* MW 2 */
	  3251      "00010001" // /* MW 1 */
	  3252      "00011001" // 	                                                                                          JNZD r21, r21, p6 /* MW 4 */
	  3253      "10001100" // /* MW 3 */
	  3254      "01101011" // /* MW 2 */
	  3255      "00010101" // /* MW 1 */
.delay_slot
.noswbrkpt
	  3256      "00011101" // 	ST.s8 r23, [p0], m0;                                                                      SEL.EQZ r23, r23, r6, r27 /* MW 6 */
	  3257      "01100110" // /* MW 5 */
	  3258      "11101110" // /* MW 4 */
	  3259      "11000101" // /* MW 3 */
	  3260      "00100101" // /* MW 2 */
	  3261      "00000001" // /* MW 1 */
.delay_slot
.nohwbrkpt
.noswbrkpt
	  3262      "10011001" // 	                                                                                          LT r27, r2, r23 /* MW 4 */
	  3263      "01111010" // /* MW 3 */
	  3264      "10110111" // /* MW 2 */
	  3265      "00010000" // /* MW 1 */
.delay_slot
.nohwbrkpt
.noswbrkpt
	  3266      "00011001" // 	                                                                                          SEL.EQZ r23, r2, r23, r27 /* MW 4 */
	  3267      "01110110" // /* MW 3 */
	  3268      "10101111" // /* MW 2 */
	  3269      "00010000" // /* MW 1 */
.delay_slot
.nohwbrkpt
.noswbrkpt
	  3270      "01000011" // 	                                                                                          LT r27, r23, r0;              ADD.NC r20, r20, #8 /* MW 8 */
	  3271      "00111000" // /* MW 7 */
	  3272      "00001011" // /* MW 6 */
	  3273      "10000101" // /* MW 5 */
	  3274      "01010110" // /* MW 4 */
	  3275      "10110000" // /* MW 3 */
	  3276      "00101111" // /* MW 2 */
	  3277      "00000000" // /* MW 1 */
.delay_slot
.nohwbrkpt
.noswbrkpt
	  3278      "00111011" // 	                              PADDB [p3], #8;                                             SEL.EQZ r23, r0, r23, r27;    ADD.NC r22, r22, #8 /* MW 10 */
	  3279      "00111000" // /* MW 9 */
	  3280      "10001011" // /* MW 8 */
	  3281      "11000101" // /* MW 7 */
	  3282      "10110010" // /* MW 6 */
	  3283      "01111011" // /* MW 5 */
	  3284      "00000001" // /* MW 4 */
	  3285      "01010000" // /* MW 3 */
	  3286      "00000011" // /* MW 2 */
	  3287      "00000011" // /* MW 1 */
.loop_nesting 2
	  3288      "10111011" // 	LDA r22, [sp, #-88];                                                                      MOVXM p7, #1648 /* MW 10 */
	  3289      "00010000" // /* MW 9 */
	  3290      "00111000" // /* MW 8 */
	  3291      "10011011" // /* MW 7 */
	  3292      "00000011" // /* MW 6 */
	  3293      "00000000" // /* MW 5 */
	  3294      "00000000" // /* MW 4 */
	  3295      "10001000" // /* MW 3 */
	  3296      "10101101" // /* MW 2 */
	  3297      "11111110" // /* MW 1 */
	  3298      "00000001" // 	NOPX /* MW 2 */
	  3299      "00000000" // /* MW 1 */
	  3300      "01011001" // 	LDA r21, [sp, #-272] /* MW 4 */
	  3301      "01101010" // /* MW 3 */
	  3302      "11011110" // /* MW 2 */
	  3303      "00000111" // /* MW 1 */
	  3304      "01011001" // 	LDA r25, [sp, #-268] /* MW 4 */
	  3305      "11110010" // /* MW 3 */
	  3306      "11011110" // /* MW 2 */
	  3307      "00000111" // /* MW 1 */
	  3308      "01011001" // 	LDA r20, [sp, #-264] /* MW 4 */
	  3309      "01101000" // /* MW 3 */
	  3310      "11011111" // /* MW 2 */
	  3311      "00000111" // /* MW 1 */
	  3312      "11000000" // 	LDA r23, [sp, #-260];         NOPB;                         NOPS;                         NOPX;                         NOPM;                                   NOPV /* MW 16 */
	  3313      "00000011" // /* MW 15 */
	  3314      "00000000" // /* MW 14 */
	  3315      "10001000" // /* MW 13 */
	  3316      "00000011" // /* MW 12 */
	  3317      "00000000" // /* MW 11 */
	  3318      "00000000" // /* MW 10 */
	  3319      "00000000" // /* MW 9 */
	  3320      "00000000" // /* MW 8 */
	  3321      "00000000" // /* MW 7 */
	  3322      "00000000" // /* MW 6 */
	  3323      "11001000" // /* MW 5 */
	  3324      "11111101" // /* MW 4 */
	  3325      "11111011" // /* MW 3 */
	  3326      "00000000" // /* MW 2 */
	  3327      "00000000" // /* MW 1 */
.label TGT_Fconv2dk1_skip_2064
	  3328      "00000001" // 	NOPX /* MW 2 */
	  3329      "00000000" // /* MW 1 */
	  3330      "00000001" // 	NOPX /* MW 2 */
	  3331      "00000000" // /* MW 1 */
	  3332      "00000001" // 	NOPX /* MW 2 */
	  3333      "00000000" // /* MW 1 */
	  3334      "00000001" // 	NOPX /* MW 2 */
	  3335      "00000000" // /* MW 1 */
	  3336      "00011001" // 	                                                                                          JNZD r21, r21, p7 /* MW 4 */
	  3337      "11001100" // /* MW 3 */
	  3338      "01101011" // /* MW 2 */
	  3339      "00010101" // /* MW 1 */
.delay_slot
	  3340      "11111001" // 	                                                                                                                        ADD.NC r25, r25, #1 /* MW 4 */
	  3341      "10000110" // /* MW 3 */
	  3342      "01001100" // /* MW 2 */
	  3343      "00011110" // /* MW 1 */
.delay_slot
	  3344      "01000011" // 	                                                                                          ADD r20, r20, #1;             ADD.NC r23, r23, #1 /* MW 8 */
	  3345      "01111000" // /* MW 7 */
	  3346      "11000011" // /* MW 6 */
	  3347      "11100101" // /* MW 5 */
	  3348      "00111010" // /* MW 4 */
	  3349      "01000000" // /* MW 3 */
	  3350      "00101001" // /* MW 2 */
	  3351      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  3352      "00000001" // 	NOPX /* MW 2 */
	  3353      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  3354      "00000001" // 	NOPX /* MW 2 */
	  3355      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  3356      "00000001" // 	NOPX /* MW 2 */
	  3357      "00000000" // /* MW 1 */
.loop_nesting 1
	  3358      "10111011" // 	LDA r21, [sp, #-136];                                                                     MOVXM p1, #1632 /* MW 10 */
	  3359      "00010000" // /* MW 9 */
	  3360      "00110000" // /* MW 8 */
	  3361      "10011011" // /* MW 7 */
	  3362      "00000000" // /* MW 6 */
	  3363      "00000000" // /* MW 5 */
	  3364      "00000000" // /* MW 4 */
	  3365      "01001000" // /* MW 3 */
	  3366      "11101101" // /* MW 2 */
	  3367      "11111101" // /* MW 1 */
	  3368      "01011001" // 	LDA r30, [sp, #-72] /* MW 4 */
	  3369      "01111100" // /* MW 3 */
	  3370      "11110111" // /* MW 2 */
	  3371      "00000111" // /* MW 1 */
	  3372      "01011001" // 	LDA r1, [sp, #-68] /* MW 4 */
	  3373      "11000010" // /* MW 3 */
	  3374      "11110111" // /* MW 2 */
	  3375      "00000111" // /* MW 1 */
.noswbrkpt
	  3376      "01011001" // 	LDA r21, [sp, #-160] /* MW 4 */
	  3377      "01101010" // /* MW 3 */
	  3378      "11101100" // /* MW 2 */
	  3379      "00000111" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  3380      "01011001" // 	LDA r6, [sp, #-64] /* MW 4 */
	  3381      "01001100" // /* MW 3 */
	  3382      "11111000" // /* MW 2 */
	  3383      "00000111" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  3384      "01011001" // 	LDA r20, [sp, #-156] /* MW 4 */
	  3385      "11101000" // /* MW 3 */
	  3386      "11101100" // /* MW 2 */
	  3387      "00000111" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  3388      "01011001" // 	LDA r31, [sp, #-140] /* MW 4 */
	  3389      "11111110" // /* MW 3 */
	  3390      "11101110" // /* MW 2 */
	  3391      "00000111" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  3392      "00000001" // 	NOPX /* MW 2 */
	  3393      "00000000" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  3394      "10011001" // 	                                                                                          ADD r30, r21, r30 /* MW 4 */
	  3395      "11100000" // /* MW 3 */
	  3396      "01111101" // /* MW 2 */
	  3397      "00010101" // /* MW 1 */
.nohwbrkpt
.noswbrkpt
	  3398      "10011001" // 	                                                                                          ADD r1, r21, r1 /* MW 4 */
	  3399      "00010000" // /* MW 3 */
	  3400      "01000010" // /* MW 2 */
	  3401      "00010101" // /* MW 1 */
	  3402      "00011001" // 	                                                                                          JNZD r21, r21, p1 /* MW 4 */
	  3403      "01001100" // /* MW 3 */
	  3404      "01101010" // /* MW 2 */
	  3405      "00010101" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  3406      "00000001" // 	NOPX /* MW 2 */
	  3407      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  3408      "00000001" // 	NOPX /* MW 2 */
	  3409      "00000000" // /* MW 1 */
.delay_slot
	  3410      "00011001" // 	                                                            ST r30, [sp, #-72] /* MW 4 */
	  3411      "01111100" // /* MW 3 */
	  3412      "11110111" // /* MW 2 */
	  3413      "00001111" // /* MW 1 */
.delay_slot
	  3414      "00111011" // 	                                                            ST r1, [sp, #-68];            ADD r30, r6, r18;             ADD.NC r25, r25, #-8 /* MW 10 */
	  3415      "00111001" // /* MW 9 */
	  3416      "01111011" // /* MW 8 */
	  3417      "00100110" // /* MW 7 */
	  3418      "00000111" // /* MW 6 */
	  3419      "11101001" // /* MW 5 */
	  3420      "00001101" // /* MW 4 */
	  3421      "01000000" // /* MW 3 */
	  3422      "11111000" // /* MW 2 */
	  3423      "11111110" // /* MW 1 */
.delay_slot
	  3424      "11000000" // 	NOPA;                         NOPB;                         ST r30, [sp, #-64];           ADD r20, r31, r20;            ADD.NC r23, r23, #-8;                   NOPV /* MW 16 */
	  3425      "00000011" // /* MW 15 */
	  3426      "00000000" // /* MW 14 */
	  3427      "00111000" // /* MW 13 */
	  3428      "11111011" // /* MW 12 */
	  3429      "11100101" // /* MW 11 */
	  3430      "00000110" // /* MW 10 */
	  3431      "01001010" // /* MW 9 */
	  3432      "00111111" // /* MW 8 */
	  3433      "01111100" // /* MW 7 */
	  3434      "11111000" // /* MW 6 */
	  3435      "00000111" // /* MW 5 */
	  3436      "00000000" // /* MW 4 */
	  3437      "00000000" // /* MW 3 */
	  3438      "00000000" // /* MW 2 */
	  3439      "00000000" // /* MW 1 */
.label TGT_Fconv2dk1_skip_2176
.loop_nesting 0
	  3440      "01011001" // 	LDA r23, [sp, #-40] /* MW 4 */
	  3441      "01101110" // /* MW 3 */
	  3442      "11111011" // /* MW 2 */
	  3443      "00000111" // /* MW 1 */
	  3444      "01011001" // 	LDA r22, [sp, #-36] /* MW 4 */
	  3445      "11101100" // /* MW 3 */
	  3446      "11111011" // /* MW 2 */
	  3447      "00000111" // /* MW 1 */
	  3448      "01011001" // 	LDA r21, [sp, #-32] /* MW 4 */
	  3449      "01101010" // /* MW 3 */
	  3450      "11111100" // /* MW 2 */
	  3451      "00000111" // /* MW 1 */
	  3452      "01011001" // 	LDA r20, [sp, #-28] /* MW 4 */
	  3453      "11101000" // /* MW 3 */
	  3454      "11111100" // /* MW 2 */
	  3455      "00000111" // /* MW 1 */
	  3456      "01011001" // 	LDA r19, [sp, #-24] /* MW 4 */
	  3457      "01100110" // /* MW 3 */
	  3458      "11111101" // /* MW 2 */
	  3459      "00000111" // /* MW 1 */
	  3460      "01011001" // 	LDA r18, [sp, #-20] /* MW 4 */
	  3461      "11100100" // /* MW 3 */
	  3462      "11111101" // /* MW 2 */
	  3463      "00000111" // /* MW 1 */
	  3464      "01011001" // 	LDA r17, [sp, #-16] /* MW 4 */
	  3465      "01100010" // /* MW 3 */
	  3466      "11111110" // /* MW 2 */
	  3467      "00000111" // /* MW 1 */
	  3468      "01011001" // 	LDA r16, [sp, #-12] /* MW 4 */
	  3469      "11100000" // /* MW 3 */
	  3470      "11111110" // /* MW 2 */
	  3471      "00000111" // /* MW 1 */
	  3472      "11011001" // 	LDA p7, [sp, #-8] /* MW 4 */
	  3473      "01111110" // /* MW 3 */
	  3474      "11111111" // /* MW 2 */
	  3475      "00000111" // /* MW 1 */
	  3476      "11011001" // 	LDA p6, [sp, #-4] /* MW 4 */
	  3477      "11110110" // /* MW 3 */
	  3478      "11111111" // /* MW 2 */
	  3479      "00000111" // /* MW 1 */
	  3480      "00011001" // 	                                                                                          RET lr /* MW 4 */
	  3481      "00011000" // /* MW 3 */
	  3482      "00000000" // /* MW 2 */
	  3483      "00010000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  3484      "00000001" // 	NOPX /* MW 2 */
	  3485      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  3486      "00000001" // 	NOPX /* MW 2 */
	  3487      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  3488      "00000001" // 	NOPX /* MW 2 */
	  3489      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  3490      "00000001" // 	NOPX /* MW 2 */
	  3491      "00000000" // /* MW 1 */
.delay_slot
	  3492      "00110111" // 	NOPA;                         PADDB [sp], #-288;            NOPS;                         EVENT #1 /* MW 12 */
	  3493      "00000001" // /* MW 11 */
	  3494      "00000000" // /* MW 10 */
	  3495      "00000000" // /* MW 9 */
	  3496      "10000000" // /* MW 8 */
	  3497      "00000000" // /* MW 7 */
	  3498      "00010000" // /* MW 6 */
	  3499      "11100000" // /* MW 5 */
	  3500      "11111011" // /* MW 4 */
	  3501      "00000111" // /* MW 3 */
	  3502      "00000000" // /* MW 2 */
.label conv2dk1_skip__end
	  3503      "00000000" // /* MW 1 */
.label _fini
.function_start
	  3504      "01011001" // 	                                                                                                                        MOV r0, r23 /* MW 4 */
	  3505      "10010110" // /* MW 3 */
	  3506      "00001011" // /* MW 2 */
	  3507      "00011000" // /* MW 1 */
	  3508      "01010101" // 	                                                                                          MOVXM r24, #0 /* MW 6 */
	  3509      "00000000" // /* MW 5 */
	  3510      "00000000" // /* MW 4 */
	  3511      "00001100" // /* MW 3 */
	  3512      "00000000" // /* MW 2 */
	  3513      "00000000" // /* MW 1 */
	  3514      "01011001" // 	                                                                                                                        MOV p0, p7 /* MW 4 */
	  3515      "01110110" // /* MW 3 */
	  3516      "00111110" // /* MW 2 */
	  3517      "00011000" // /* MW 1 */
	  3518      "01010101" // 	                                                                                          MOVXM r23, #0 /* MW 6 */
	  3519      "00000000" // /* MW 5 */
	  3520      "10000000" // /* MW 4 */
	  3521      "00001011" // /* MW 3 */
	  3522      "00000000" // /* MW 2 */
	  3523      "00000000" // /* MW 1 */
	  3524      "01000011" // 	                                                                                          EQ r24, r23, r24;             MOV p7, r24 /* MW 8 */
	  3525      "00101000" // /* MW 7 */
	  3526      "00001011" // /* MW 6 */
	  3527      "10011110" // /* MW 5 */
	  3528      "00111111" // /* MW 4 */
	  3529      "10001100" // /* MW 3 */
	  3530      "00101111" // /* MW 2 */
	  3531      "00000000" // /* MW 1 */
	  3532      "10010101" // 	                                                                                          JNZ r24, #3632 /* MW 6 */
	  3533      "00000001" // /* MW 5 */
	  3534      "01000000" // /* MW 4 */
	  3535      "00011000" // /* MW 3 */
	  3536      "00000111" // /* MW 2 */
	  3537      "11000000" // /* MW 1 */
.delay_slot
	  3538      "00011001" // 	                              PADDB [sp], #32 /* MW 4 */
	  3539      "00100000" // /* MW 3 */
	  3540      "00000011" // /* MW 2 */
	  3541      "00111000" // /* MW 1 */
.delay_slot
	  3542      "00011001" // 	                                                            ST r22, [sp, #-4] /* MW 4 */
	  3543      "11101100" // /* MW 3 */
	  3544      "11111111" // /* MW 2 */
	  3545      "00001111" // /* MW 1 */
.delay_slot
	  3546      "10011001" // 	                                                            ST lr, [sp, #-16] /* MW 4 */
	  3547      "01000010" // /* MW 3 */
	  3548      "11111110" // /* MW 2 */
	  3549      "00001111" // /* MW 1 */
.delay_slot
	  3550      "00011001" // 	                                                            ST r0, [sp, #-12] /* MW 4 */
	  3551      "11000000" // /* MW 3 */
	  3552      "11111110" // /* MW 2 */
	  3553      "00001111" // /* MW 1 */
.delay_slot
	  3554      "00101111" // 	NOPA;                                                       ST p0, [sp, #-8];                                           NOPM;                                   NOPV /* MW 14 */
	  3555      "01111000" // /* MW 13 */
	  3556      "00000000" // /* MW 12 */
	  3557      "00000000" // /* MW 11 */
	  3558      "00111000" // /* MW 10 */
	  3559      "00000000" // /* MW 9 */
	  3560      "01000000" // /* MW 8 */
	  3561      "00000000" // /* MW 7 */
	  3562      "10000000" // /* MW 6 */
	  3563      "01000110" // /* MW 5 */
	  3564      "11111111" // /* MW 4 */
	  3565      "00000111" // /* MW 3 */
	  3566      "00000000" // /* MW 2 */
	  3567      "00000000" // /* MW 1 */
.label TGT_F_fini_64
.loop_nesting 1
	  3568      "11011001" // 	LDA p0, [p7], #4 /* MW 4 */
	  3569      "10000110" // /* MW 3 */
	  3570      "00000011" // /* MW 2 */
	  3571      "00000111" // /* MW 1 */
	  3572      "00000001" // 	NOPX /* MW 2 */
	  3573      "00000000" // /* MW 1 */
	  3574      "00000001" // 	NOPX /* MW 2 */
	  3575      "00000000" // /* MW 1 */
	  3576      "00000001" // 	NOPX /* MW 2 */
	  3577      "00000000" // /* MW 1 */
	  3578      "00000001" // 	NOPX /* MW 2 */
	  3579      "00000000" // /* MW 1 */
	  3580      "00000001" // 	NOPX /* MW 2 */
	  3581      "00000000" // /* MW 1 */
	  3582      "00000001" // 	NOPX /* MW 2 */
	  3583      "00000000" // /* MW 1 */
.no_stack_arguments
	  3584      "00011001" // 	                                                                                          JL p0 /* MW 4 */
	  3585      "00010100" // /* MW 3 */
	  3586      "00000000" // /* MW 2 */
	  3587      "00010000" // /* MW 1 */
.delay_slot
	  3588      "01011001" // 	                                                                                                                        MOV r22, p7 /* MW 4 */
	  3589      "01110110" // /* MW 3 */
	  3590      "10001110" // /* MW 2 */
	  3591      "00011101" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  3592      "00000001" // 	NOPX /* MW 2 */
	  3593      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  3594      "00000001" // 	NOPX /* MW 2 */
	  3595      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  3596      "00000001" // 	NOPX /* MW 2 */
	  3597      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  3598      "00000001" // 	NOPX /* MW 2 */
	  3599      "00000000" // /* MW 1 */
.return_address
	  3600      "10011001" // 	                                                                                          NE r24, r23, r22 /* MW 4 */
	  3601      "01101000" // /* MW 3 */
	  3602      "11110001" // /* MW 2 */
	  3603      "00010101" // /* MW 1 */
	  3604      "10010101" // 	                                                                                          JNZ r24, #3568 /* MW 6 */
	  3605      "00000001" // /* MW 5 */
	  3606      "01000000" // /* MW 4 */
	  3607      "11111000" // /* MW 3 */
	  3608      "00000110" // /* MW 2 */
	  3609      "11000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  3610      "00000001" // 	NOPX /* MW 2 */
	  3611      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  3612      "00000001" // 	NOPX /* MW 2 */
	  3613      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  3614      "00000001" // 	NOPX /* MW 2 */
	  3615      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  3616      "00000001" // 	NOPX /* MW 2 */
	  3617      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  3618      "00101111" // 	NOPA;                                                       NOPS;                                                       NOPM;                                   NOPV /* MW 14 */
	  3619      "01111000" // /* MW 13 */
	  3620      "00000000" // /* MW 12 */
	  3621      "00000000" // /* MW 11 */
	  3622      "00111000" // /* MW 10 */
	  3623      "00000000" // /* MW 9 */
	  3624      "01000000" // /* MW 8 */
	  3625      "00000000" // /* MW 7 */
	  3626      "00000000" // /* MW 6 */
	  3627      "00000000" // /* MW 5 */
	  3628      "00000000" // /* MW 4 */
	  3629      "00000000" // /* MW 3 */
	  3630      "00000000" // /* MW 2 */
	  3631      "00000000" // /* MW 1 */
.label TGT_F_fini_128
.loop_nesting 0
	  3632      "11011001" // 	LDA lr, [sp, #-16] /* MW 4 */
	  3633      "01000010" // /* MW 3 */
	  3634      "11111110" // /* MW 2 */
	  3635      "00000111" // /* MW 1 */
	  3636      "01011001" // 	LDA r23, [sp, #-12] /* MW 4 */
	  3637      "11101110" // /* MW 3 */
	  3638      "11111110" // /* MW 2 */
	  3639      "00000111" // /* MW 1 */
	  3640      "01011001" // 	LDA r22, [sp, #-4] /* MW 4 */
	  3641      "11101100" // /* MW 3 */
	  3642      "11111111" // /* MW 2 */
	  3643      "00000111" // /* MW 1 */
	  3644      "11011001" // 	LDA p7, [sp, #-8] /* MW 4 */
	  3645      "01111110" // /* MW 3 */
	  3646      "11111111" // /* MW 2 */
	  3647      "00000111" // /* MW 1 */
	  3648      "00000001" // 	NOPX /* MW 2 */
	  3649      "00000000" // /* MW 1 */
	  3650      "00000001" // 	NOPX /* MW 2 */
	  3651      "00000000" // /* MW 1 */
	  3652      "00000001" // 	NOPX /* MW 2 */
	  3653      "00000000" // /* MW 1 */
	  3654      "00011001" // 	                                                                                          RET lr /* MW 4 */
	  3655      "00011000" // /* MW 3 */
	  3656      "00000000" // /* MW 2 */
	  3657      "00010000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  3658      "00000001" // 	NOPX /* MW 2 */
	  3659      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  3660      "00000001" // 	NOPX /* MW 2 */
	  3661      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  3662      "00000001" // 	NOPX /* MW 2 */
	  3663      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  3664      "00000001" // 	NOPX /* MW 2 */
	  3665      "00000000" // /* MW 1 */
.delay_slot
	  3666      "01111111" // 	NOPA;                         PADDB [sp], #-32;             NOPS;                         NOPX;                         NOPM /* MW 14 */
	  3667      "00000000" // /* MW 13 */
	  3668      "00000000" // /* MW 12 */
	  3669      "00000000" // /* MW 11 */
	  3670      "01110001" // /* MW 10 */
	  3671      "00000000" // /* MW 9 */
	  3672      "00000000" // /* MW 8 */
	  3673      "00000000" // /* MW 7 */
	  3674      "00000000" // /* MW 6 */
	  3675      "11100000" // /* MW 5 */
	  3676      "11111111" // /* MW 4 */
	  3677      "00000111" // /* MW 3 */
	  3678      "00000000" // /* MW 2 */
.label _fini__end
	  3679      "00000000" // /* MW 1 */
.label __cxa_finalize
.function_start
	  3680      "10111011" // 	MOVA r1, #8;                                                                              MOVXM p0, #513120 /* MW 10 */
	  3681      "00010000" // /* MW 9 */
	  3682      "00110000" // /* MW 8 */
	  3683      "00011010" // /* MW 7 */
	  3684      "11110100" // /* MW 6 */
	  3685      "00000001" // /* MW 5 */
	  3686      "00000000" // /* MW 4 */
	  3687      "01001000" // /* MW 3 */
	  3688      "00000000" // /* MW 2 */
	  3689      "00000001" // /* MW 1 */
	  3690      "10111011" // 	LDA r3, [p0, #0];                                                                         MOVXM r2, #513088 /* MW 10 */
	  3691      "00010000" // /* MW 9 */
	  3692      "00100000" // /* MW 8 */
	  3693      "01000010" // /* MW 7 */
	  3694      "11110100" // /* MW 6 */
	  3695      "00000001" // /* MW 5 */
	  3696      "00000000" // /* MW 4 */
	  3697      "11001000" // /* MW 3 */
	  3698      "01010000" // /* MW 2 */
	  3699      "00000000" // /* MW 1 */
	  3700      "00111011" // 	                                                            ST r1, [p0, #0];              MOVX r1, #-3;                 MOV r17, crSat /* MW 10 */
	  3701      "00101001" // /* MW 9 */
	  3702      "10011011" // /* MW 8 */
	  3703      "00100100" // /* MW 7 */
	  3704      "10101010" // /* MW 6 */
	  3705      "00010111" // /* MW 5 */
	  3706      "00111110" // /* MW 4 */
	  3707      "01000000" // /* MW 3 */
	  3708      "01010000" // /* MW 2 */
	  3709      "00000000" // /* MW 1 */
	  3710      "01011001" // 	                                                                                                                        MOV r16, crRnd /* MW 4 */
	  3711      "00110110" // /* MW 3 */
	  3712      "00000110" // /* MW 2 */
	  3713      "00011100" // /* MW 1 */
	  3714      "01011001" // 	                                                                                                                        MOV r18, lr /* MW 4 */
	  3715      "11110110" // /* MW 3 */
	  3716      "10000100" // /* MW 2 */
	  3717      "00011100" // /* MW 1 */
	  3718      "01010101" // 	                                                                                          MOVXM p6, #3744 /* MW 6 */
	  3719      "01000000" // /* MW 5 */
	  3720      "01111101" // /* MW 4 */
	  3721      "00001100" // /* MW 3 */
	  3722      "00000000" // /* MW 2 */
	  3723      "00000000" // /* MW 1 */
	  3724      "00000001" // 	NOPX /* MW 2 */
	  3725      "00000000" // /* MW 1 */
	  3726      "00000001" // 	NOPX /* MW 2 */
	  3727      "00000000" // /* MW 1 */
	  3728      "01111001" // 	                                                                                                                        ADD.NC r3, r3, #-8 /* MW 4 */
	  3729      "11110110" // /* MW 3 */
	  3730      "11000001" // /* MW 2 */
	  3731      "00011000" // /* MW 1 */
	  3732      "10011001" // 	                                                                                          ADD r2, r3, r2 /* MW 4 */
	  3733      "00100000" // /* MW 3 */
	  3734      "11000100" // /* MW 2 */
	  3735      "00010000" // /* MW 1 */
	  3736      "01000011" // 	                                                                                          ASHL r19, r3, r1;             MOV p7, r2 /* MW 8 */
	  3737      "00101000" // /* MW 7 */
	  3738      "10001011" // /* MW 6 */
	  3739      "10011000" // /* MW 5 */
	  3740      "11110111" // /* MW 4 */
	  3741      "00110000" // /* MW 3 */
	  3742      "00000111" // /* MW 2 */
	  3743      "00000000" // /* MW 1 */
.label TGT_F__cxa_finalize_64
.loop_nesting 1
	  3744      "11011001" // 	LDA p1, [p7], #4 /* MW 4 */
	  3745      "10001110" // /* MW 3 */
	  3746      "00000011" // /* MW 2 */
	  3747      "00000111" // /* MW 1 */
	  3748      "11011001" // 	LDA p0, [p7], #-12 /* MW 4 */
	  3749      "10000110" // /* MW 3 */
	  3750      "11111011" // /* MW 2 */
	  3751      "00000111" // /* MW 1 */
	  3752      "00000001" // 	NOPX /* MW 2 */
	  3753      "00000000" // /* MW 1 */
	  3754      "00000001" // 	NOPX /* MW 2 */
	  3755      "00000000" // /* MW 1 */
	  3756      "00000001" // 	NOPX /* MW 2 */
	  3757      "00000000" // /* MW 1 */
	  3758      "00000001" // 	NOPX /* MW 2 */
	  3759      "00000000" // /* MW 1 */
	  3760      "00000001" // 	NOPX /* MW 2 */
	  3761      "00000000" // /* MW 1 */
.no_stack_arguments
	  3762      "00011001" // 	                                                                                          JL p1 /* MW 4 */
	  3763      "01010100" // /* MW 3 */
	  3764      "00000000" // /* MW 2 */
	  3765      "00010000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  3766      "00000001" // 	NOPX /* MW 2 */
	  3767      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  3768      "00000001" // 	NOPX /* MW 2 */
	  3769      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  3770      "00000001" // 	NOPX /* MW 2 */
	  3771      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  3772      "00011001" // 	NOPA /* MW 4 */
	  3773      "00000000" // /* MW 3 */
	  3774      "00000000" // /* MW 2 */
	  3775      "00000000" // /* MW 1 */
.delay_slot
	  3776      "11000000" // 	NOPA;                         NOPB;                         NOPS;                         NOPX;                         MOV r20, r0;                            NOPV /* MW 16 */
	  3777      "00000011" // /* MW 15 */
	  3778      "00000000" // /* MW 14 */
	  3779      "00101000" // /* MW 13 */
	  3780      "00001011" // /* MW 12 */
	  3781      "10000000" // /* MW 11 */
	  3782      "00000010" // /* MW 10 */
	  3783      "00000000" // /* MW 9 */
	  3784      "00000000" // /* MW 8 */
	  3785      "00000000" // /* MW 7 */
	  3786      "00000000" // /* MW 6 */
	  3787      "00000000" // /* MW 5 */
	  3788      "00000000" // /* MW 4 */
	  3789      "00000000" // /* MW 3 */
	  3790      "00000000" // /* MW 2 */
	  3791      "00000000" // /* MW 1 */
.return_address
	  3792      "00011001" // 	                                                                                          JNZD r19, r19, p6 /* MW 4 */
	  3793      "10001100" // /* MW 3 */
	  3794      "11100111" // /* MW 2 */
	  3795      "00010100" // /* MW 1 */
.delay_slot
	  3796      "01011001" // 	                                                                                                                        MOV r0, r20 /* MW 4 */
	  3797      "00010110" // /* MW 3 */
	  3798      "00001010" // /* MW 2 */
	  3799      "00011000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  3800      "00000001" // 	NOPX /* MW 2 */
	  3801      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  3802      "00000001" // 	NOPX /* MW 2 */
	  3803      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  3804      "00000001" // 	NOPX /* MW 2 */
	  3805      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  3806      "00000001" // 	NOPX /* MW 2 */
	  3807      "00000000" // /* MW 1 */
.loop_nesting 0
	  3808      "01011001" // 	                                                                                                                        MOV lr, r18 /* MW 4 */
	  3809      "00010110" // /* MW 3 */
	  3810      "01111001" // /* MW 2 */
	  3811      "00011010" // /* MW 1 */
	  3812      "00011001" // 	                                                                                          RET lr /* MW 4 */
	  3813      "00011000" // /* MW 3 */
	  3814      "00000000" // /* MW 2 */
	  3815      "00010000" // /* MW 1 */
.delay_slot
	  3816      "01000011" // 	                                                                                          MOVX crSat, r17;              MOV crRnd, r16 /* MW 8 */
	  3817      "00101000" // /* MW 7 */
	  3818      "00001011" // /* MW 6 */
	  3819      "10001100" // /* MW 5 */
	  3820      "00000001" // /* MW 4 */
	  3821      "00100001" // /* MW 3 */
	  3822      "00100011" // /* MW 2 */
	  3823      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  3824      "00000001" // 	NOPX /* MW 2 */
	  3825      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  3826      "00000001" // 	NOPX /* MW 2 */
	  3827      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  3828      "00000001" // 	NOPX /* MW 2 */
	  3829      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  3830      "10111011" // 	NOPA;                         NOPB;                                                                                     NOPM /* MW 10 */
	  3831      "10001110" // /* MW 9 */
	  3832      "00000011" // /* MW 8 */
	  3833      "00000000" // /* MW 7 */
	  3834      "00000000" // /* MW 6 */
	  3835      "00000000" // /* MW 5 */
	  3836      "00000000" // /* MW 4 */
	  3837      "00000000" // /* MW 3 */
	  3838      "00000000" // /* MW 2 */
.label __cxa_finalize__end
	  3839      "00000000" // /* MW 1 */
