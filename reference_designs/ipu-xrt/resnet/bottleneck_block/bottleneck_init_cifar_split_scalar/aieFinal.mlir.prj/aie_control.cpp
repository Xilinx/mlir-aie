/********************************************* Disclaimer *********************************************/
/* This file is generated by aie-translate. */
/* Changes to this file may cause incorrect behavior. */

/************************** Constants/Macros *****************************/
#define HW_GEN                   XAIE_DEV_GEN_AIEML
#define XAIE_NUM_ROWS            6
#define XAIE_NUM_COLS            5
#define XAIE_BASE_ADDR           0x40000000
#define XAIE_COL_SHIFT           25
#define XAIE_ROW_SHIFT           20
#define XAIE_SHIM_ROW            0
#define XAIE_MEM_TILE_ROW_START  1
#define XAIE_MEM_TILE_NUM_ROWS   1
#define XAIE_AIE_TILE_ROW_START  2
#define XAIE_AIE_TILE_NUM_ROWS   4
#define FOR_WRITE                0
#define FOR_READ                 1
#define XAIE_PARTITION_BASE_ADDR 0x0

/***************************** Includes *********************************/
//#include <fstream>
extern "C"
{
  #include <xaiengine.h>
}
//#include "adf/adf_api/AIEControlConfig.h"

#define __mlir_aie_try(x) x
static XAie_DmaDimDesc *__mlir_aie_alloc_dim_desc(size_t ndims) {
  XAie_DmaDimDesc *ret = NULL;
  ret = (XAie_DmaDimDesc *)calloc(sizeof(XAie_DmaDimDesc), ndims);
  if(NULL == ret) {
    fprintf(stderr, "Allocating DmaDimDesc failed.\n");
  }
  return ret;
}
XAie_InstDeclare(DevInst, &ConfigPtr);   // Declare global device instance

bool ppgraph_load_elf(const std::string& work_path, std::vector<std::string>& elfInfoPath)
{
std::string work_dir = (work_path.empty() ?  "Work" : work_path);
{
if (XAie_LoadElf(&DevInst, XAie_TileLoc(0,2), (work_dir + "/core_0_2.elf").c_str(), XAIE_ENABLE) != XAIE_OK)
{
    std::cerr << "ERROR: Failed to load elf for core(%d,%d)" << std::endl;
    return false;
}
}
{
if (XAie_LoadElf(&DevInst, XAie_TileLoc(0,3), (work_dir + "/core_0_3.elf").c_str(), XAIE_ENABLE) != XAIE_OK)
{
    std::cerr << "ERROR: Failed to load elf for core(%d,%d)" << std::endl;
    return false;
}
}
{
if (XAie_LoadElf(&DevInst, XAie_TileLoc(0,5), (work_dir + "/core_0_5.elf").c_str(), XAIE_ENABLE) != XAIE_OK)
{
    std::cerr << "ERROR: Failed to load elf for core(%d,%d)" << std::endl;
    return false;
}
}
{
if (XAie_LoadElf(&DevInst, XAie_TileLoc(0,4), (work_dir + "/core_0_4.elf").c_str(), XAIE_ENABLE) != XAIE_OK)
{
    std::cerr << "ERROR: Failed to load elf for core(%d,%d)" << std::endl;
    return false;
}
}
    return true;
} // ppgraph_load_elf

bool hasCoreElfFiles() { return 1;}
void ppgraph_core_enable()
{
XAie_CoreEnable(&DevInst, XAie_TileLoc(0,2));
XAie_CoreEnable(&DevInst, XAie_TileLoc(0,3));
XAie_CoreEnable(&DevInst, XAie_TileLoc(0,5));
XAie_CoreEnable(&DevInst, XAie_TileLoc(0,4));
    return;
} // ppgraph_core_enable

void enableErrorHandling()
{
    XAie_ErrorHandlingInit(&DevInst);
} // enableErrorHandling

void ppgraph_init(const std::string& work_path)
{
XAie_CoreReset(&DevInst, XAie_TileLoc(0,2));
XAie_CoreUnreset(&DevInst, XAie_TileLoc(0,2));
for (int l=0; l<16; l++)
  XAie_LockSetValue(&DevInst, XAie_TileLoc(0,2), XAie_LockInit(l, 0));
XAie_CoreReset(&DevInst, XAie_TileLoc(0,3));
XAie_CoreUnreset(&DevInst, XAie_TileLoc(0,3));
for (int l=0; l<16; l++)
  XAie_LockSetValue(&DevInst, XAie_TileLoc(0,3), XAie_LockInit(l, 0));
XAie_CoreReset(&DevInst, XAie_TileLoc(0,5));
XAie_CoreUnreset(&DevInst, XAie_TileLoc(0,5));
for (int l=0; l<16; l++)
  XAie_LockSetValue(&DevInst, XAie_TileLoc(0,5), XAie_LockInit(l, 0));
XAie_CoreReset(&DevInst, XAie_TileLoc(0,4));
XAie_CoreUnreset(&DevInst, XAie_TileLoc(0,4));
for (int l=0; l<16; l++)
  XAie_LockSetValue(&DevInst, XAie_TileLoc(0,4), XAie_LockInit(l, 0));
XAie_LockSetValue(&DevInst, XAie_TileLoc(0,0), XAie_LockInit(4, 0));
XAie_LockSetValue(&DevInst, XAie_TileLoc(0,0), XAie_LockInit(5, 0));
XAie_LockSetValue(&DevInst, XAie_TileLoc(0,4), XAie_LockInit(4, 2));
XAie_LockSetValue(&DevInst, XAie_TileLoc(0,4), XAie_LockInit(5, 0));
XAie_LockSetValue(&DevInst, XAie_TileLoc(0,5), XAie_LockInit(4, 2));
XAie_LockSetValue(&DevInst, XAie_TileLoc(0,5), XAie_LockInit(5, 0));
XAie_LockSetValue(&DevInst, XAie_TileLoc(0,3), XAie_LockInit(4, 2));
XAie_LockSetValue(&DevInst, XAie_TileLoc(0,3), XAie_LockInit(5, 0));
XAie_LockSetValue(&DevInst, XAie_TileLoc(0,3), XAie_LockInit(2, 4));
XAie_LockSetValue(&DevInst, XAie_TileLoc(0,3), XAie_LockInit(3, 0));
XAie_LockSetValue(&DevInst, XAie_TileLoc(0,5), XAie_LockInit(2, 4));
XAie_LockSetValue(&DevInst, XAie_TileLoc(0,5), XAie_LockInit(3, 0));
XAie_LockSetValue(&DevInst, XAie_TileLoc(0,2), XAie_LockInit(4, 2));
XAie_LockSetValue(&DevInst, XAie_TileLoc(0,2), XAie_LockInit(5, 0));
XAie_LockSetValue(&DevInst, XAie_TileLoc(0,4), XAie_LockInit(2, 1));
XAie_LockSetValue(&DevInst, XAie_TileLoc(0,4), XAie_LockInit(3, 0));
XAie_LockSetValue(&DevInst, XAie_TileLoc(0,3), XAie_LockInit(0, 1));
XAie_LockSetValue(&DevInst, XAie_TileLoc(0,3), XAie_LockInit(1, 0));
XAie_LockSetValue(&DevInst, XAie_TileLoc(0,5), XAie_LockInit(0, 1));
XAie_LockSetValue(&DevInst, XAie_TileLoc(0,5), XAie_LockInit(1, 0));
XAie_LockSetValue(&DevInst, XAie_TileLoc(0,2), XAie_LockInit(2, 1));
XAie_LockSetValue(&DevInst, XAie_TileLoc(0,2), XAie_LockInit(3, 0));
XAie_LockSetValue(&DevInst, XAie_TileLoc(0,1), XAie_LockInit(2, 3));
XAie_LockSetValue(&DevInst, XAie_TileLoc(0,1), XAie_LockInit(3, 0));
XAie_LockSetValue(&DevInst, XAie_TileLoc(0,0), XAie_LockInit(2, 0));
XAie_LockSetValue(&DevInst, XAie_TileLoc(0,0), XAie_LockInit(3, 0));
XAie_LockSetValue(&DevInst, XAie_TileLoc(0,4), XAie_LockInit(0, 2));
XAie_LockSetValue(&DevInst, XAie_TileLoc(0,4), XAie_LockInit(1, 0));
XAie_LockSetValue(&DevInst, XAie_TileLoc(0,2), XAie_LockInit(0, 2));
XAie_LockSetValue(&DevInst, XAie_TileLoc(0,2), XAie_LockInit(1, 0));
XAie_LockSetValue(&DevInst, XAie_TileLoc(0,1), XAie_LockInit(0, 4));
XAie_LockSetValue(&DevInst, XAie_TileLoc(0,1), XAie_LockInit(1, 0));
XAie_LockSetValue(&DevInst, XAie_TileLoc(0,0), XAie_LockInit(0, 0));
XAie_LockSetValue(&DevInst, XAie_TileLoc(0,0), XAie_LockInit(1, 0));
XAie_DmaDesc dma_tile02_bd0;
XAie_DmaDescInit(&DevInst, &(dma_tile02_bd0), XAie_TileLoc(0,2));
XAie_DmaSetLock(&(dma_tile02_bd0), XAie_LockInit(0,-1),XAie_LockInit(1,1));
XAie_DmaSetAddrLen(&(dma_tile02_bd0), /* addrA */ 0x2400,  /* len */ 2048 * 1);
XAie_DmaSetNextBd(&(dma_tile02_bd0),  /* nextbd */ 1,  /* enableNextBd */ 1);
XAie_DmaEnableBd(&(dma_tile02_bd0));
XAie_DmaWriteBd(&DevInst, &(dma_tile02_bd0), XAie_TileLoc(0,2),  /* bd */ 0);
XAie_DmaDesc dma_tile02_bd1;
XAie_DmaDescInit(&DevInst, &(dma_tile02_bd1), XAie_TileLoc(0,2));
XAie_DmaSetLock(&(dma_tile02_bd1), XAie_LockInit(0,-1),XAie_LockInit(1,1));
XAie_DmaSetAddrLen(&(dma_tile02_bd1), /* addrA */ 0x2C00,  /* len */ 2048 * 1);
XAie_DmaSetNextBd(&(dma_tile02_bd1),  /* nextbd */ 0,  /* enableNextBd */ 1);
XAie_DmaEnableBd(&(dma_tile02_bd1));
XAie_DmaWriteBd(&DevInst, &(dma_tile02_bd1), XAie_TileLoc(0,2),  /* bd */ 1);
XAie_DmaDesc dma_tile02_bd2;
XAie_DmaDescInit(&DevInst, &(dma_tile02_bd2), XAie_TileLoc(0,2));
XAie_DmaSetLock(&(dma_tile02_bd2), XAie_LockInit(2,-1),XAie_LockInit(3,1));
XAie_DmaSetAddrLen(&(dma_tile02_bd2), /* addrA */ 0x400,  /* len */ 4096 * 1);
XAie_DmaSetNextBd(&(dma_tile02_bd2),  /* nextbd */ 2,  /* enableNextBd */ 1);
XAie_DmaEnableBd(&(dma_tile02_bd2));
XAie_DmaWriteBd(&DevInst, &(dma_tile02_bd2), XAie_TileLoc(0,2),  /* bd */ 2);
XAie_DmaDesc dma_tile02_bd3;
XAie_DmaDescInit(&DevInst, &(dma_tile02_bd3), XAie_TileLoc(0,2));
XAie_DmaSetLock(&(dma_tile02_bd3), XAie_LockInit(5,-1),XAie_LockInit(4,1));
XAie_DmaSetAddrLen(&(dma_tile02_bd3), /* addrA */ 0x1400,  /* len */ 2048 * 1);
XAie_DmaSetNextBd(&(dma_tile02_bd3),  /* nextbd */ 4,  /* enableNextBd */ 1);
XAie_DmaEnableBd(&(dma_tile02_bd3));
XAie_DmaWriteBd(&DevInst, &(dma_tile02_bd3), XAie_TileLoc(0,2),  /* bd */ 3);
XAie_DmaDesc dma_tile02_bd4;
XAie_DmaDescInit(&DevInst, &(dma_tile02_bd4), XAie_TileLoc(0,2));
XAie_DmaSetLock(&(dma_tile02_bd4), XAie_LockInit(5,-1),XAie_LockInit(4,1));
XAie_DmaSetAddrLen(&(dma_tile02_bd4), /* addrA */ 0x1C00,  /* len */ 2048 * 1);
XAie_DmaSetNextBd(&(dma_tile02_bd4),  /* nextbd */ 3,  /* enableNextBd */ 1);
XAie_DmaEnableBd(&(dma_tile02_bd4));
XAie_DmaWriteBd(&DevInst, &(dma_tile02_bd4), XAie_TileLoc(0,2),  /* bd */ 4);
XAie_DmaChannelPushBdToQueue(&DevInst, XAie_TileLoc(0,2), /* ChNum */0, /* dmaDir */ DMA_S2MM, /* BdNum */0);
XAie_DmaChannelEnable(&DevInst, XAie_TileLoc(0,2), /* ChNum */ 0, /* dmaDir */ DMA_S2MM);
XAie_DmaChannelPushBdToQueue(&DevInst, XAie_TileLoc(0,2), /* ChNum */1, /* dmaDir */ DMA_S2MM, /* BdNum */2);
XAie_DmaChannelEnable(&DevInst, XAie_TileLoc(0,2), /* ChNum */ 1, /* dmaDir */ DMA_S2MM);
XAie_DmaChannelPushBdToQueue(&DevInst, XAie_TileLoc(0,2), /* ChNum */0, /* dmaDir */ DMA_MM2S, /* BdNum */3);
XAie_DmaChannelEnable(&DevInst, XAie_TileLoc(0,2), /* ChNum */ 0, /* dmaDir */ DMA_MM2S);
XAie_DmaDesc dma_tile04_bd0;
XAie_DmaDescInit(&DevInst, &(dma_tile04_bd0), XAie_TileLoc(0,4));
XAie_DmaSetLock(&(dma_tile04_bd0), XAie_LockInit(0,-1),XAie_LockInit(1,1));
XAie_DmaSetAddrLen(&(dma_tile04_bd0), /* addrA */ 0xC400,  /* len */ 2048 * 1);
XAie_DmaSetNextBd(&(dma_tile04_bd0),  /* nextbd */ 1,  /* enableNextBd */ 1);
XAie_DmaEnableBd(&(dma_tile04_bd0));
XAie_DmaWriteBd(&DevInst, &(dma_tile04_bd0), XAie_TileLoc(0,4),  /* bd */ 0);
XAie_DmaDesc dma_tile04_bd1;
XAie_DmaDescInit(&DevInst, &(dma_tile04_bd1), XAie_TileLoc(0,4));
XAie_DmaSetLock(&(dma_tile04_bd1), XAie_LockInit(0,-1),XAie_LockInit(1,1));
XAie_DmaSetAddrLen(&(dma_tile04_bd1), /* addrA */ 0xCC00,  /* len */ 2048 * 1);
XAie_DmaSetNextBd(&(dma_tile04_bd1),  /* nextbd */ 0,  /* enableNextBd */ 1);
XAie_DmaEnableBd(&(dma_tile04_bd1));
XAie_DmaWriteBd(&DevInst, &(dma_tile04_bd1), XAie_TileLoc(0,4),  /* bd */ 1);
XAie_DmaDesc dma_tile04_bd2;
XAie_DmaDescInit(&DevInst, &(dma_tile04_bd2), XAie_TileLoc(0,4));
XAie_DmaSetLock(&(dma_tile04_bd2), XAie_LockInit(2,-1),XAie_LockInit(3,1));
XAie_DmaSetAddrLen(&(dma_tile04_bd2), /* addrA */ 0x400,  /* len */ 32768 * 1);
XAie_DmaSetNextBd(&(dma_tile04_bd2),  /* nextbd */ 2,  /* enableNextBd */ 1);
XAie_DmaEnableBd(&(dma_tile04_bd2));
XAie_DmaWriteBd(&DevInst, &(dma_tile04_bd2), XAie_TileLoc(0,4),  /* bd */ 2);
XAie_DmaDesc dma_tile04_bd3;
XAie_DmaDescInit(&DevInst, &(dma_tile04_bd3), XAie_TileLoc(0,4));
XAie_DmaSetLock(&(dma_tile04_bd3), XAie_LockInit(5,-1),XAie_LockInit(4,1));
XAie_DmaSetAddrLen(&(dma_tile04_bd3), /* addrA */ 0x8400,  /* len */ 8192 * 1);
XAie_DmaSetNextBd(&(dma_tile04_bd3),  /* nextbd */ 4,  /* enableNextBd */ 1);
XAie_DmaEnableBd(&(dma_tile04_bd3));
XAie_DmaWriteBd(&DevInst, &(dma_tile04_bd3), XAie_TileLoc(0,4),  /* bd */ 3);
XAie_DmaDesc dma_tile04_bd4;
XAie_DmaDescInit(&DevInst, &(dma_tile04_bd4), XAie_TileLoc(0,4));
XAie_DmaSetLock(&(dma_tile04_bd4), XAie_LockInit(5,-1),XAie_LockInit(4,1));
XAie_DmaSetAddrLen(&(dma_tile04_bd4), /* addrA */ 0xA400,  /* len */ 8192 * 1);
XAie_DmaSetNextBd(&(dma_tile04_bd4),  /* nextbd */ 3,  /* enableNextBd */ 1);
XAie_DmaEnableBd(&(dma_tile04_bd4));
XAie_DmaWriteBd(&DevInst, &(dma_tile04_bd4), XAie_TileLoc(0,4),  /* bd */ 4);
XAie_DmaChannelPushBdToQueue(&DevInst, XAie_TileLoc(0,4), /* ChNum */0, /* dmaDir */ DMA_S2MM, /* BdNum */0);
XAie_DmaChannelEnable(&DevInst, XAie_TileLoc(0,4), /* ChNum */ 0, /* dmaDir */ DMA_S2MM);
XAie_DmaChannelPushBdToQueue(&DevInst, XAie_TileLoc(0,4), /* ChNum */1, /* dmaDir */ DMA_S2MM, /* BdNum */2);
XAie_DmaChannelEnable(&DevInst, XAie_TileLoc(0,4), /* ChNum */ 1, /* dmaDir */ DMA_S2MM);
XAie_DmaChannelPushBdToQueue(&DevInst, XAie_TileLoc(0,4), /* ChNum */0, /* dmaDir */ DMA_MM2S, /* BdNum */3);
XAie_DmaChannelEnable(&DevInst, XAie_TileLoc(0,4), /* ChNum */ 0, /* dmaDir */ DMA_MM2S);
XAie_DmaDesc dma_tile03_bd0;
XAie_DmaDescInit(&DevInst, &(dma_tile03_bd0), XAie_TileLoc(0,3));
XAie_DmaSetLock(&(dma_tile03_bd0), XAie_LockInit(0,-1),XAie_LockInit(1,1));
XAie_DmaSetAddrLen(&(dma_tile03_bd0), /* addrA */ 0x400,  /* len */ 36864 * 1);
XAie_DmaSetNextBd(&(dma_tile03_bd0),  /* nextbd */ 0,  /* enableNextBd */ 1);
XAie_DmaEnableBd(&(dma_tile03_bd0));
XAie_DmaWriteBd(&DevInst, &(dma_tile03_bd0), XAie_TileLoc(0,3),  /* bd */ 0);
XAie_DmaDesc dma_tile03_bd1;
XAie_DmaDescInit(&DevInst, &(dma_tile03_bd1), XAie_TileLoc(0,3));
XAie_DmaSetLock(&(dma_tile03_bd1), XAie_LockInit(2,-1),XAie_LockInit(3,1));
XAie_DmaSetAddrLen(&(dma_tile03_bd1), /* addrA */ 0x9400,  /* len */ 2048 * 1);
XAie_DmaSetNextBd(&(dma_tile03_bd1),  /* nextbd */ 2,  /* enableNextBd */ 1);
XAie_DmaEnableBd(&(dma_tile03_bd1));
XAie_DmaWriteBd(&DevInst, &(dma_tile03_bd1), XAie_TileLoc(0,3),  /* bd */ 1);
XAie_DmaDesc dma_tile03_bd2;
XAie_DmaDescInit(&DevInst, &(dma_tile03_bd2), XAie_TileLoc(0,3));
XAie_DmaSetLock(&(dma_tile03_bd2), XAie_LockInit(2,-1),XAie_LockInit(3,1));
XAie_DmaSetAddrLen(&(dma_tile03_bd2), /* addrA */ 0x9C00,  /* len */ 2048 * 1);
XAie_DmaSetNextBd(&(dma_tile03_bd2),  /* nextbd */ 3,  /* enableNextBd */ 1);
XAie_DmaEnableBd(&(dma_tile03_bd2));
XAie_DmaWriteBd(&DevInst, &(dma_tile03_bd2), XAie_TileLoc(0,3),  /* bd */ 2);
XAie_DmaDesc dma_tile03_bd3;
XAie_DmaDescInit(&DevInst, &(dma_tile03_bd3), XAie_TileLoc(0,3));
XAie_DmaSetLock(&(dma_tile03_bd3), XAie_LockInit(2,-1),XAie_LockInit(3,1));
XAie_DmaSetAddrLen(&(dma_tile03_bd3), /* addrA */ 0xA400,  /* len */ 2048 * 1);
XAie_DmaSetNextBd(&(dma_tile03_bd3),  /* nextbd */ 4,  /* enableNextBd */ 1);
XAie_DmaEnableBd(&(dma_tile03_bd3));
XAie_DmaWriteBd(&DevInst, &(dma_tile03_bd3), XAie_TileLoc(0,3),  /* bd */ 3);
XAie_DmaDesc dma_tile03_bd4;
XAie_DmaDescInit(&DevInst, &(dma_tile03_bd4), XAie_TileLoc(0,3));
XAie_DmaSetLock(&(dma_tile03_bd4), XAie_LockInit(2,-1),XAie_LockInit(3,1));
XAie_DmaSetAddrLen(&(dma_tile03_bd4), /* addrA */ 0xAC00,  /* len */ 2048 * 1);
XAie_DmaSetNextBd(&(dma_tile03_bd4),  /* nextbd */ 1,  /* enableNextBd */ 1);
XAie_DmaEnableBd(&(dma_tile03_bd4));
XAie_DmaWriteBd(&DevInst, &(dma_tile03_bd4), XAie_TileLoc(0,3),  /* bd */ 4);
XAie_DmaChannelPushBdToQueue(&DevInst, XAie_TileLoc(0,3), /* ChNum */0, /* dmaDir */ DMA_S2MM, /* BdNum */0);
XAie_DmaChannelEnable(&DevInst, XAie_TileLoc(0,3), /* ChNum */ 0, /* dmaDir */ DMA_S2MM);
XAie_DmaChannelPushBdToQueue(&DevInst, XAie_TileLoc(0,3), /* ChNum */1, /* dmaDir */ DMA_S2MM, /* BdNum */1);
XAie_DmaChannelEnable(&DevInst, XAie_TileLoc(0,3), /* ChNum */ 1, /* dmaDir */ DMA_S2MM);
XAie_DmaDesc dma_tile05_bd0;
XAie_DmaDescInit(&DevInst, &(dma_tile05_bd0), XAie_TileLoc(0,5));
XAie_DmaSetLock(&(dma_tile05_bd0), XAie_LockInit(0,-1),XAie_LockInit(1,1));
XAie_DmaSetAddrLen(&(dma_tile05_bd0), /* addrA */ 0x400,  /* len */ 36864 * 1);
XAie_DmaSetNextBd(&(dma_tile05_bd0),  /* nextbd */ 0,  /* enableNextBd */ 1);
XAie_DmaEnableBd(&(dma_tile05_bd0));
XAie_DmaWriteBd(&DevInst, &(dma_tile05_bd0), XAie_TileLoc(0,5),  /* bd */ 0);
XAie_DmaDesc dma_tile05_bd1;
XAie_DmaDescInit(&DevInst, &(dma_tile05_bd1), XAie_TileLoc(0,5));
XAie_DmaSetLock(&(dma_tile05_bd1), XAie_LockInit(2,-1),XAie_LockInit(3,1));
XAie_DmaSetAddrLen(&(dma_tile05_bd1), /* addrA */ 0x9400,  /* len */ 2048 * 1);
XAie_DmaSetNextBd(&(dma_tile05_bd1),  /* nextbd */ 2,  /* enableNextBd */ 1);
XAie_DmaEnableBd(&(dma_tile05_bd1));
XAie_DmaWriteBd(&DevInst, &(dma_tile05_bd1), XAie_TileLoc(0,5),  /* bd */ 1);
XAie_DmaDesc dma_tile05_bd2;
XAie_DmaDescInit(&DevInst, &(dma_tile05_bd2), XAie_TileLoc(0,5));
XAie_DmaSetLock(&(dma_tile05_bd2), XAie_LockInit(2,-1),XAie_LockInit(3,1));
XAie_DmaSetAddrLen(&(dma_tile05_bd2), /* addrA */ 0x9C00,  /* len */ 2048 * 1);
XAie_DmaSetNextBd(&(dma_tile05_bd2),  /* nextbd */ 3,  /* enableNextBd */ 1);
XAie_DmaEnableBd(&(dma_tile05_bd2));
XAie_DmaWriteBd(&DevInst, &(dma_tile05_bd2), XAie_TileLoc(0,5),  /* bd */ 2);
XAie_DmaDesc dma_tile05_bd3;
XAie_DmaDescInit(&DevInst, &(dma_tile05_bd3), XAie_TileLoc(0,5));
XAie_DmaSetLock(&(dma_tile05_bd3), XAie_LockInit(2,-1),XAie_LockInit(3,1));
XAie_DmaSetAddrLen(&(dma_tile05_bd3), /* addrA */ 0xA400,  /* len */ 2048 * 1);
XAie_DmaSetNextBd(&(dma_tile05_bd3),  /* nextbd */ 4,  /* enableNextBd */ 1);
XAie_DmaEnableBd(&(dma_tile05_bd3));
XAie_DmaWriteBd(&DevInst, &(dma_tile05_bd3), XAie_TileLoc(0,5),  /* bd */ 3);
XAie_DmaDesc dma_tile05_bd4;
XAie_DmaDescInit(&DevInst, &(dma_tile05_bd4), XAie_TileLoc(0,5));
XAie_DmaSetLock(&(dma_tile05_bd4), XAie_LockInit(2,-1),XAie_LockInit(3,1));
XAie_DmaSetAddrLen(&(dma_tile05_bd4), /* addrA */ 0xAC00,  /* len */ 2048 * 1);
XAie_DmaSetNextBd(&(dma_tile05_bd4),  /* nextbd */ 1,  /* enableNextBd */ 1);
XAie_DmaEnableBd(&(dma_tile05_bd4));
XAie_DmaWriteBd(&DevInst, &(dma_tile05_bd4), XAie_TileLoc(0,5),  /* bd */ 4);
XAie_DmaChannelPushBdToQueue(&DevInst, XAie_TileLoc(0,5), /* ChNum */0, /* dmaDir */ DMA_S2MM, /* BdNum */0);
XAie_DmaChannelEnable(&DevInst, XAie_TileLoc(0,5), /* ChNum */ 0, /* dmaDir */ DMA_S2MM);
XAie_DmaChannelPushBdToQueue(&DevInst, XAie_TileLoc(0,5), /* ChNum */1, /* dmaDir */ DMA_S2MM, /* BdNum */1);
XAie_DmaChannelEnable(&DevInst, XAie_TileLoc(0,5), /* ChNum */ 1, /* dmaDir */ DMA_S2MM);
XAie_DmaDesc dma_tile01_bd0;
XAie_DmaDescInit(&DevInst, &(dma_tile01_bd0), XAie_TileLoc(0,1));
XAie_DmaSetLock(&(dma_tile01_bd0), XAie_LockInit(64,-1),XAie_LockInit(65,1));
XAie_DmaSetAddrLen(&(dma_tile01_bd0), /* addrA */ 0x92000,  /* len */ 2048 * 1);
XAie_DmaSetNextBd(&(dma_tile01_bd0),  /* nextbd */ 1,  /* enableNextBd */ 1);
XAie_DmaEnableBd(&(dma_tile01_bd0));
XAie_DmaWriteBd(&DevInst, &(dma_tile01_bd0), XAie_TileLoc(0,1),  /* bd */ 0);
XAie_DmaDesc dma_tile01_bd1;
XAie_DmaDescInit(&DevInst, &(dma_tile01_bd1), XAie_TileLoc(0,1));
XAie_DmaSetLock(&(dma_tile01_bd1), XAie_LockInit(64,-1),XAie_LockInit(65,1));
XAie_DmaSetAddrLen(&(dma_tile01_bd1), /* addrA */ 0x92800,  /* len */ 2048 * 1);
XAie_DmaSetNextBd(&(dma_tile01_bd1),  /* nextbd */ 2,  /* enableNextBd */ 1);
XAie_DmaEnableBd(&(dma_tile01_bd1));
XAie_DmaWriteBd(&DevInst, &(dma_tile01_bd1), XAie_TileLoc(0,1),  /* bd */ 1);
XAie_DmaDesc dma_tile01_bd2;
XAie_DmaDescInit(&DevInst, &(dma_tile01_bd2), XAie_TileLoc(0,1));
XAie_DmaSetLock(&(dma_tile01_bd2), XAie_LockInit(64,-1),XAie_LockInit(65,1));
XAie_DmaSetAddrLen(&(dma_tile01_bd2), /* addrA */ 0x93000,  /* len */ 2048 * 1);
XAie_DmaSetNextBd(&(dma_tile01_bd2),  /* nextbd */ 3,  /* enableNextBd */ 1);
XAie_DmaEnableBd(&(dma_tile01_bd2));
XAie_DmaWriteBd(&DevInst, &(dma_tile01_bd2), XAie_TileLoc(0,1),  /* bd */ 2);
XAie_DmaDesc dma_tile01_bd3;
XAie_DmaDescInit(&DevInst, &(dma_tile01_bd3), XAie_TileLoc(0,1));
XAie_DmaSetLock(&(dma_tile01_bd3), XAie_LockInit(64,-1),XAie_LockInit(65,1));
XAie_DmaSetAddrLen(&(dma_tile01_bd3), /* addrA */ 0x93800,  /* len */ 2048 * 1);
XAie_DmaSetNextBd(&(dma_tile01_bd3),  /* nextbd */ 0,  /* enableNextBd */ 1);
XAie_DmaEnableBd(&(dma_tile01_bd3));
XAie_DmaWriteBd(&DevInst, &(dma_tile01_bd3), XAie_TileLoc(0,1),  /* bd */ 3);
XAie_DmaDesc dma_tile01_bd4;
XAie_DmaDescInit(&DevInst, &(dma_tile01_bd4), XAie_TileLoc(0,1));
XAie_DmaSetLock(&(dma_tile01_bd4), XAie_LockInit(65,-1),XAie_LockInit(64,1));
XAie_DmaSetAddrLen(&(dma_tile01_bd4), /* addrA */ 0x92000,  /* len */ 2048 * 1);
XAie_DmaSetNextBd(&(dma_tile01_bd4),  /* nextbd */ 5,  /* enableNextBd */ 1);
XAie_DmaEnableBd(&(dma_tile01_bd4));
XAie_DmaWriteBd(&DevInst, &(dma_tile01_bd4), XAie_TileLoc(0,1),  /* bd */ 4);
XAie_DmaDesc dma_tile01_bd5;
XAie_DmaDescInit(&DevInst, &(dma_tile01_bd5), XAie_TileLoc(0,1));
XAie_DmaSetLock(&(dma_tile01_bd5), XAie_LockInit(65,-1),XAie_LockInit(64,1));
XAie_DmaSetAddrLen(&(dma_tile01_bd5), /* addrA */ 0x92800,  /* len */ 2048 * 1);
XAie_DmaSetNextBd(&(dma_tile01_bd5),  /* nextbd */ 6,  /* enableNextBd */ 1);
XAie_DmaEnableBd(&(dma_tile01_bd5));
XAie_DmaWriteBd(&DevInst, &(dma_tile01_bd5), XAie_TileLoc(0,1),  /* bd */ 5);
XAie_DmaDesc dma_tile01_bd6;
XAie_DmaDescInit(&DevInst, &(dma_tile01_bd6), XAie_TileLoc(0,1));
XAie_DmaSetLock(&(dma_tile01_bd6), XAie_LockInit(65,-1),XAie_LockInit(64,1));
XAie_DmaSetAddrLen(&(dma_tile01_bd6), /* addrA */ 0x93000,  /* len */ 2048 * 1);
XAie_DmaSetNextBd(&(dma_tile01_bd6),  /* nextbd */ 7,  /* enableNextBd */ 1);
XAie_DmaEnableBd(&(dma_tile01_bd6));
XAie_DmaWriteBd(&DevInst, &(dma_tile01_bd6), XAie_TileLoc(0,1),  /* bd */ 6);
XAie_DmaDesc dma_tile01_bd7;
XAie_DmaDescInit(&DevInst, &(dma_tile01_bd7), XAie_TileLoc(0,1));
XAie_DmaSetLock(&(dma_tile01_bd7), XAie_LockInit(65,-1),XAie_LockInit(64,1));
XAie_DmaSetAddrLen(&(dma_tile01_bd7), /* addrA */ 0x93800,  /* len */ 2048 * 1);
XAie_DmaSetNextBd(&(dma_tile01_bd7),  /* nextbd */ 4,  /* enableNextBd */ 1);
XAie_DmaEnableBd(&(dma_tile01_bd7));
XAie_DmaWriteBd(&DevInst, &(dma_tile01_bd7), XAie_TileLoc(0,1),  /* bd */ 7);
XAie_DmaDesc dma_tile01_bd24;
XAie_DmaDescInit(&DevInst, &(dma_tile01_bd24), XAie_TileLoc(0,1));
XAie_DmaSetLock(&(dma_tile01_bd24), XAie_LockInit(66,-3),XAie_LockInit(67,3));
XAie_DmaSetAddrLen(&(dma_tile01_bd24), /* addrA */ 0x80000,  /* len */ 73728 * 1);
XAie_DmaSetNextBd(&(dma_tile01_bd24),  /* nextbd */ 24,  /* enableNextBd */ 1);
XAie_DmaEnableBd(&(dma_tile01_bd24));
XAie_DmaWriteBd(&DevInst, &(dma_tile01_bd24), XAie_TileLoc(0,1),  /* bd */ 24);
XAie_DmaDesc dma_tile01_bd25;
XAie_DmaDescInit(&DevInst, &(dma_tile01_bd25), XAie_TileLoc(0,1));
XAie_DmaSetLock(&(dma_tile01_bd25), XAie_LockInit(67,-1),XAie_LockInit(66,1));
XAie_DmaSetAddrLen(&(dma_tile01_bd25), /* addrA */ 0x80000,  /* len */ 4096 * 1);
XAie_DmaSetNextBd(&(dma_tile01_bd25),  /* nextbd */ 25,  /* enableNextBd */ 1);
XAie_DmaEnableBd(&(dma_tile01_bd25));
XAie_DmaWriteBd(&DevInst, &(dma_tile01_bd25), XAie_TileLoc(0,1),  /* bd */ 25);
XAie_DmaDesc dma_tile01_bd8;
XAie_DmaDescInit(&DevInst, &(dma_tile01_bd8), XAie_TileLoc(0,1));
XAie_DmaSetLock(&(dma_tile01_bd8), XAie_LockInit(67,-1),XAie_LockInit(66,1));
XAie_DmaSetAddrLen(&(dma_tile01_bd8), /* addrA */ 0x81000,  /* len */ 36864 * 1);
XAie_DmaSetNextBd(&(dma_tile01_bd8),  /* nextbd */ 8,  /* enableNextBd */ 1);
XAie_DmaEnableBd(&(dma_tile01_bd8));
XAie_DmaWriteBd(&DevInst, &(dma_tile01_bd8), XAie_TileLoc(0,1),  /* bd */ 8);
XAie_DmaDesc dma_tile01_bd26;
XAie_DmaDescInit(&DevInst, &(dma_tile01_bd26), XAie_TileLoc(0,1));
XAie_DmaSetLock(&(dma_tile01_bd26), XAie_LockInit(67,-1),XAie_LockInit(66,1));
XAie_DmaSetAddrLen(&(dma_tile01_bd26), /* addrA */ 0x8A000,  /* len */ 32768 * 1);
XAie_DmaSetNextBd(&(dma_tile01_bd26),  /* nextbd */ 26,  /* enableNextBd */ 1);
XAie_DmaEnableBd(&(dma_tile01_bd26));
XAie_DmaWriteBd(&DevInst, &(dma_tile01_bd26), XAie_TileLoc(0,1),  /* bd */ 26);
XAie_DmaChannelPushBdToQueue(&DevInst, XAie_TileLoc(0,1), /* ChNum */0, /* dmaDir */ DMA_S2MM, /* BdNum */0);
XAie_DmaChannelEnable(&DevInst, XAie_TileLoc(0,1), /* ChNum */ 0, /* dmaDir */ DMA_S2MM);
XAie_DmaChannelPushBdToQueue(&DevInst, XAie_TileLoc(0,1), /* ChNum */0, /* dmaDir */ DMA_MM2S, /* BdNum */4);
XAie_DmaChannelEnable(&DevInst, XAie_TileLoc(0,1), /* ChNum */ 0, /* dmaDir */ DMA_MM2S);
XAie_DmaChannelPushBdToQueue(&DevInst, XAie_TileLoc(0,1), /* ChNum */1, /* dmaDir */ DMA_S2MM, /* BdNum */24);
XAie_DmaChannelEnable(&DevInst, XAie_TileLoc(0,1), /* ChNum */ 1, /* dmaDir */ DMA_S2MM);
XAie_DmaChannelPushBdToQueue(&DevInst, XAie_TileLoc(0,1), /* ChNum */1, /* dmaDir */ DMA_MM2S, /* BdNum */25);
XAie_DmaChannelEnable(&DevInst, XAie_TileLoc(0,1), /* ChNum */ 1, /* dmaDir */ DMA_MM2S);
XAie_DmaChannelPushBdToQueue(&DevInst, XAie_TileLoc(0,1), /* ChNum */2, /* dmaDir */ DMA_MM2S, /* BdNum */8);
XAie_DmaChannelEnable(&DevInst, XAie_TileLoc(0,1), /* ChNum */ 2, /* dmaDir */ DMA_MM2S);
XAie_DmaChannelPushBdToQueue(&DevInst, XAie_TileLoc(0,1), /* ChNum */3, /* dmaDir */ DMA_MM2S, /* BdNum */26);
XAie_DmaChannelEnable(&DevInst, XAie_TileLoc(0,1), /* ChNum */ 3, /* dmaDir */ DMA_MM2S);
  int x, y;
// Core Stream Switch column 0 row 0
x = 0;
y = 0;
XAie_StrmConnCctEnable(&DevInst, XAie_TileLoc(x,y), CTRL, 0, SOUTH, 0);
{
  //configure DMA_<S2MM/MM2S>_<N>_Ctrl register
  XAie_DmaChannelDesc DmaChannelDescInst;
  XAie_DmaChannelDescInit(&DevInst, &DmaChannelDescInst, XAie_TileLoc(x,y));
  XAie_DmaChannelSetControllerId(&DmaChannelDescInst, 0);
  XAie_DmaWriteChannel(&DevInst, &DmaChannelDescInst, XAie_TileLoc(x,y), 0, DMA_S2MM);
}

{
  //configure DMA_<S2MM/MM2S>_<N>_Ctrl register
  XAie_DmaChannelDesc DmaChannelDescInst;
  XAie_DmaChannelDescInit(&DevInst, &DmaChannelDescInst, XAie_TileLoc(x,y));
  XAie_DmaChannelSetControllerId(&DmaChannelDescInst, 0);
  XAie_DmaWriteChannel(&DevInst, &DmaChannelDescInst, XAie_TileLoc(x,y), 1, DMA_S2MM);
}

XAie_AieToPlIntfEnable (&DevInst, XAie_TileLoc(x, y), 0, PLIF_WIDTH_32);
XAie_StrmConnCctEnable(&DevInst, XAie_TileLoc(x,y), SOUTH, 3, NORTH, 0);
XAie_StrmConnCctEnable(&DevInst, XAie_TileLoc(x,y), SOUTH, 7, NORTH, 1);
XAie_StrmConnCctEnable(&DevInst, XAie_TileLoc(x,y), NORTH, 0, SOUTH, 2);
// Core Stream Switch column 0 row 1
x = 0;
y = 1;
XAie_StrmConnCctEnable(&DevInst, XAie_TileLoc(x,y), SOUTH, 0, DMA, 0);
XAie_StrmConnCctEnable(&DevInst, XAie_TileLoc(x,y), SOUTH, 0, NORTH, 0);
XAie_StrmConnCctEnable(&DevInst, XAie_TileLoc(x,y), DMA, 0, NORTH, 1);
XAie_StrmConnCctEnable(&DevInst, XAie_TileLoc(x,y), SOUTH, 1, DMA, 1);
XAie_StrmConnCctEnable(&DevInst, XAie_TileLoc(x,y), DMA, 1, NORTH, 2);
XAie_StrmConnCctEnable(&DevInst, XAie_TileLoc(x,y), DMA, 2, NORTH, 3);
XAie_StrmConnCctEnable(&DevInst, XAie_TileLoc(x,y), DMA, 3, NORTH, 4);
XAie_StrmConnCctEnable(&DevInst, XAie_TileLoc(x,y), NORTH, 0, SOUTH, 0);
// Core Stream Switch column 0 row 2
x = 0;
y = 2;
XAie_StrmConnCctEnable(&DevInst, XAie_TileLoc(x,y), SOUTH, 0, DMA, 0);
XAie_StrmConnCctEnable(&DevInst, XAie_TileLoc(x,y), SOUTH, 1, NORTH, 0);
XAie_StrmConnCctEnable(&DevInst, XAie_TileLoc(x,y), SOUTH, 2, DMA, 1);
XAie_StrmConnCctEnable(&DevInst, XAie_TileLoc(x,y), SOUTH, 3, NORTH, 1);
XAie_StrmConnCctEnable(&DevInst, XAie_TileLoc(x,y), SOUTH, 4, NORTH, 2);
XAie_StrmConnCctEnable(&DevInst, XAie_TileLoc(x,y), DMA, 0, NORTH, 3);
XAie_StrmConnCctEnable(&DevInst, XAie_TileLoc(x,y), NORTH, 0, SOUTH, 0);
// Core Stream Switch column 0 row 3
x = 0;
y = 3;
XAie_StrmConnCctEnable(&DevInst, XAie_TileLoc(x,y), SOUTH, 0, NORTH, 0);
XAie_StrmConnCctEnable(&DevInst, XAie_TileLoc(x,y), SOUTH, 1, DMA, 0);
XAie_StrmConnCctEnable(&DevInst, XAie_TileLoc(x,y), SOUTH, 1, NORTH, 1);
XAie_StrmConnCctEnable(&DevInst, XAie_TileLoc(x,y), SOUTH, 2, NORTH, 2);
XAie_StrmConnCctEnable(&DevInst, XAie_TileLoc(x,y), SOUTH, 3, DMA, 1);
XAie_StrmConnCctEnable(&DevInst, XAie_TileLoc(x,y), SOUTH, 3, NORTH, 3);
XAie_StrmConnCctEnable(&DevInst, XAie_TileLoc(x,y), NORTH, 0, SOUTH, 0);
// Core Stream Switch column 0 row 5
x = 0;
y = 5;
XAie_StrmConnCctEnable(&DevInst, XAie_TileLoc(x,y), SOUTH, 0, DMA, 0);
XAie_StrmConnCctEnable(&DevInst, XAie_TileLoc(x,y), SOUTH, 1, DMA, 1);
// Core Stream Switch column 0 row 4
x = 0;
y = 4;
XAie_StrmConnCctEnable(&DevInst, XAie_TileLoc(x,y), SOUTH, 0, DMA, 0);
XAie_StrmConnCctEnable(&DevInst, XAie_TileLoc(x,y), SOUTH, 1, NORTH, 0);
XAie_StrmConnCctEnable(&DevInst, XAie_TileLoc(x,y), SOUTH, 2, DMA, 1);
XAie_StrmConnCctEnable(&DevInst, XAie_TileLoc(x,y), SOUTH, 3, NORTH, 1);
XAie_StrmConnCctEnable(&DevInst, XAie_TileLoc(x,y), DMA, 0, SOUTH, 0);
// ShimMux column 0 row 0
// NOTE ShimMux always connects from the south as directions are defined relative to the tile stream switch
x = 0;
y = 0;
XAie_EnableShimDmaToAieStrmPort(&DevInst, XAie_TileLoc(x,y), 3);
XAie_EnableShimDmaToAieStrmPort(&DevInst, XAie_TileLoc(x,y), 7);
XAie_EnableAieToShimDmaStrmPort(&DevInst, XAie_TileLoc(x,y), 2);
} // ppgraph_init



  class InitializeAIEControl
  {
  public:
    InitializeAIEControl()
    {
      XAie_SetupConfig(ConfigPtr, HW_GEN, XAIE_BASE_ADDR, XAIE_COL_SHIFT,
                       XAIE_ROW_SHIFT, XAIE_NUM_COLS, XAIE_NUM_ROWS,
                       XAIE_SHIM_ROW, XAIE_MEM_TILE_ROW_START,
                       XAIE_MEM_TILE_NUM_ROWS, XAIE_AIE_TILE_ROW_START,
                       XAIE_AIE_TILE_NUM_ROWS);

      XAie_SetupPartitionConfig(&DevInst, XAIE_PARTITION_BASE_ADDR, 1, 1);

      XAie_CfgInitialize(&(DevInst), &ConfigPtr);

#if defined(__AIESIM__)
#if defined(__CDO__)
      XAie_SetIOBackend(&(DevInst), XAIE_IO_BACKEND_CDO); // Set aiengine driver library to run for CDO Mode
      XAie_UpdateNpiAddr(&(DevInst), 0x0);
#else
      //AIE driver currently error out XAie_UpdateNpiAddr for AIESIM
#endif
#else
      XAie_UpdateNpiAddr(&(DevInst), 0x0);
#endif

#if defined(__AIESIM__) && !defined(__CDO__)
      XAie_TurnEccOff(&DevInst);
#endif

#if defined(__AIESIM__) && !defined(__CDO__)
      extern unsigned ess_debug;
#else
      unsigned ess_debug = false;
#endif

#ifdef __EXCLUDE_PL_CONTROL__
      bool exclude_pl_control = true;
#else
      bool exclude_pl_control = false;
#endif

#ifdef __CDO__
      int trace_config_stream_option = 2;
#else
      int trace_config_stream_option = 0;
#endif
    }
  } initAIEControl;

