
// File generated by darts version U-2022.12#3eec2545bc#230622, Wed Jan 10 06:25:13 2024
// Copyright 2014-2022 Synopsys, Inc. All rights reserved.
// darts -I/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/aietools/data/aie_ml/lib -d -h -I/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/aietools/data/aie_ml/lib/runtime_cxx/libcxx-lite/include -I/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/aietools/data/aie_ml/lib/runtime_cxx/libs/libcxx-9.0.0/include-lite -I/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/aietools/data/aie_ml/lib/runtime/include -I<BOOST_DIR> -D__AIENGINE__ -D__AIE_ARCH__=20 -D__AIEARCH__=20 -D__tct_tgt__=230622 -L +Ihex +nanno +u core_0_2.elf me

// Release: ipp U-2022.12-TGT-230622
.label __AIE_ARCH_MODEL_VERSION__20010300__inlined__1__me_basic___main_init_
.label _main_init
.function_start
	     0      "01000011" // 	                                                                                          MOVXM sp, #458752 /* MW 8 */
	     1      "00010000" // /* MW 7 */
	     2      "00000000" // /* MW 6 */
	     3      "00111000" // /* MW 5 */
	     4      "11000011" // /* MW 4 */
	     5      "00000001" // /* MW 3 */
	     6      "00000000" // /* MW 2 */
	     7      "00000000" // /* MW 1 */
	     8      "01010101" // 	                                                                                          MOVXM r16, #0 /* MW 6 */
	     9      "00000000" // /* MW 5 */
	    10      "00000000" // /* MW 4 */
	    11      "00001000" // /* MW 3 */
	    12      "00000000" // /* MW 2 */
	    13      "00000000" // /* MW 1 */
	    14      "01010101" // 	                                                                                          MOVXM r24, #0 /* MW 6 */
	    15      "00000000" // /* MW 5 */
	    16      "00000000" // /* MW 4 */
	    17      "00001100" // /* MW 3 */
	    18      "00000000" // /* MW 2 */
	    19      "00000000" // /* MW 1 */
	    20      "10011001" // 	                                                                                          EQ r24, r24, r16 /* MW 4 */
	    21      "00000111" // /* MW 3 */
	    22      "00110001" // /* MW 2 */
	    23      "00010110" // /* MW 1 */
	    24      "10010101" // 	                                                                                          JNZ r24, #128 /* MW 6 */
	    25      "00000001" // /* MW 5 */
	    26      "01000000" // /* MW 4 */
	    27      "01000000" // /* MW 3 */
	    28      "00000000" // /* MW 2 */
	    29      "11000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    30      "00000001" // 	NOPX /* MW 2 */
	    31      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    32      "00000001" // 	NOPX /* MW 2 */
	    33      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    34      "00000001" // 	NOPX /* MW 2 */
	    35      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    36      "00000001" // 	NOPX /* MW 2 */
	    37      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    38      "00000001" // 	NOPX /* MW 2 */
	    39      "00000000" // /* MW 1 */
	    40      "01010101" // 	                                                                                          MOVXM p6, #-4 /* MW 6 */
	    41      "11111000" // /* MW 5 */
	    42      "01111111" // /* MW 4 */
	    43      "11111100" // /* MW 3 */
	    44      "11111111" // /* MW 2 */
	    45      "11111111" // /* MW 1 */
	    46      "01011001" // 	                                                                                                                        MOV p7, p0 /* MW 4 */
	    47      "01110110" // /* MW 3 */
	    48      "00110000" // /* MW 2 */
	    49      "00011111" // /* MW 1 */
	    50      "00101111" // 	NOPA;                                                       NOPS;                                                       MOV r17, r1;                            NOPV /* MW 14 */
	    51      "01111000" // /* MW 13 */
	    52      "00000000" // /* MW 12 */
	    53      "00000000" // /* MW 11 */
	    54      "10110010" // /* MW 10 */
	    55      "00000100" // /* MW 9 */
	    56      "01100010" // /* MW 8 */
	    57      "00000000" // /* MW 7 */
	    58      "00000000" // /* MW 6 */
	    59      "00000000" // /* MW 5 */
	    60      "00000000" // /* MW 4 */
	    61      "00000000" // /* MW 3 */
	    62      "00000000" // /* MW 2 */
	    63      "00000000" // /* MW 1 */
.label TGT_F_main_init_64
.loop_nesting 1
	    64      "01001101" // 	LDA p0, [p6], #-4;                                                                                                      MOV r18, p6 /* MW 6 */
	    65      "01110110" // /* MW 5 */
	    66      "10001100" // /* MW 4 */
	    67      "11011100" // /* MW 3 */
	    68      "11110000" // /* MW 2 */
	    69      "11011111" // /* MW 1 */
	    70      "00000001" // 	NOPX /* MW 2 */
	    71      "00000000" // /* MW 1 */
	    72      "00000001" // 	NOPX /* MW 2 */
	    73      "00000000" // /* MW 1 */
	    74      "00000001" // 	NOPX /* MW 2 */
	    75      "00000000" // /* MW 1 */
	    76      "00000001" // 	NOPX /* MW 2 */
	    77      "00000000" // /* MW 1 */
	    78      "00000001" // 	NOPX /* MW 2 */
	    79      "00000000" // /* MW 1 */
	    80      "00000001" // 	NOPX /* MW 2 */
	    81      "00000000" // /* MW 1 */
.no_stack_arguments
	    82      "00011001" // 	                                                                                          JL p0 /* MW 4 */
	    83      "00010100" // /* MW 3 */
	    84      "00000000" // /* MW 2 */
	    85      "00010000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    86      "00000001" // 	NOPX /* MW 2 */
	    87      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    88      "00000001" // 	NOPX /* MW 2 */
	    89      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    90      "00000001" // 	NOPX /* MW 2 */
	    91      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    92      "00000001" // 	NOPX /* MW 2 */
	    93      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	    94      "00000001" // 	NOPX /* MW 2 */
	    95      "00000000" // /* MW 1 */
.return_address
	    96      "10011001" // 	                                                                                          NE r24, r18, r16 /* MW 4 */
	    97      "00001000" // /* MW 3 */
	    98      "10110001" // /* MW 2 */
	    99      "00010100" // /* MW 1 */
	   100      "10010101" // 	                                                                                          JNZ r24, #64 /* MW 6 */
	   101      "00000001" // /* MW 5 */
	   102      "01000000" // /* MW 4 */
	   103      "00100000" // /* MW 3 */
	   104      "00000000" // /* MW 2 */
	   105      "11000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   106      "00000001" // 	NOPX /* MW 2 */
	   107      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   108      "00000001" // 	NOPX /* MW 2 */
	   109      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   110      "00000001" // 	NOPX /* MW 2 */
	   111      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   112      "00000001" // 	NOPX /* MW 2 */
	   113      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   114      "00000001" // 	NOPX /* MW 2 */
	   115      "00000000" // /* MW 1 */
.loop_nesting 0
	   116      "01011001" // 	                                                                                                                        MOV p0, p7 /* MW 4 */
	   117      "01110110" // /* MW 3 */
	   118      "00111110" // /* MW 2 */
	   119      "00011000" // /* MW 1 */
	   120      "00000011" // 	                                                            NOPS;                                                       MOV r1, r17 /* MW 8 */
	   121      "00100000" // /* MW 7 */
	   122      "01001011" // /* MW 6 */
	   123      "00100100" // /* MW 5 */
	   124      "00000000" // /* MW 4 */
	   125      "00000000" // /* MW 3 */
	   126      "00000000" // /* MW 2 */
	   127      "00000000" // /* MW 1 */
.label TGT_F_main_init_128
.no_stack_arguments
	   128      "00010101" // 	                                                                                          JL #224 /* MW 6 */
	   129      "00000001" // /* MW 5 */
	   130      "00000000" // /* MW 4 */
	   131      "01110000" // /* MW 3 */
	   132      "00000000" // /* MW 2 */
	   133      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   134      "00000001" // 	NOPX /* MW 2 */
	   135      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   136      "00000001" // 	NOPX /* MW 2 */
	   137      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   138      "00000001" // 	NOPX /* MW 2 */
	   139      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   140      "00000001" // 	NOPX /* MW 2 */
	   141      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   142      "00000001" // 	NOPX /* MW 2 */
	   143      "00000000" // /* MW 1 */
.return_address
.no_stack_arguments
	   144      "00010101" // 	                                                                                          JL #2000 /* MW 6 */
	   145      "00000001" // /* MW 5 */
	   146      "00000000" // /* MW 4 */
	   147      "11101000" // /* MW 3 */
	   148      "00000011" // /* MW 2 */
	   149      "00000000" // /* MW 1 */
.delay_slot
	   150      "10011001" // 	                                                                                                                        MOV p0, #0 /* MW 4 */
	   151      "00000110" // /* MW 3 */
	   152      "00110000" // /* MW 2 */
	   153      "00011000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   154      "00000001" // 	NOPX /* MW 2 */
	   155      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   156      "00000001" // 	NOPX /* MW 2 */
	   157      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   158      "00000001" // 	NOPX /* MW 2 */
	   159      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   160      "11000000" // 	NOPA;                         NOPB;                         NOPS;                         NOPX;                         NOPM;                                   NOPV /* MW 16 */
	   161      "00000011" // /* MW 15 */
	   162      "00000000" // /* MW 14 */
	   163      "10001000" // /* MW 13 */
	   164      "00000011" // /* MW 12 */
	   165      "00000000" // /* MW 11 */
	   166      "00000000" // /* MW 10 */
	   167      "00000000" // /* MW 9 */
	   168      "00000000" // /* MW 8 */
	   169      "00000000" // /* MW 7 */
	   170      "00000000" // /* MW 6 */
	   171      "00000000" // /* MW 5 */
	   172      "00000000" // /* MW 4 */
	   173      "00000000" // /* MW 3 */
	   174      "00000000" // /* MW 2 */
	   175      "00000000" // /* MW 1 */
.return_address
.swstall chess_separator_scheduler
	   176      "00000001" // 	NOPX /* MW 2 */
	   177      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   178      "00000001" // 	NOPX /* MW 2 */
	   179      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   180      "00000001" // 	NOPX /* MW 2 */
	   181      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   182      "00000001" // 	NOPX /* MW 2 */
	   183      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   184      "00000001" // 	NOPX /* MW 2 */
	   185      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   186      "00000001" // 	NOPX /* MW 2 */
	   187      "00000000" // /* MW 1 */
	   188      "00011001" // 	                                                                                          DONE /* MW 4 */
	   189      "00001000" // /* MW 3 */
	   190      "00000000" // /* MW 2 */
	   191      "00010000" // /* MW 1 */
.swstall chess_separator_scheduler
	   192      "00000001" // 	NOPX /* MW 2 */
	   193      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   194      "00000001" // 	NOPX /* MW 2 */
	   195      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   196      "00000001" // 	NOPX /* MW 2 */
	   197      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   198      "00000001" // 	NOPX /* MW 2 */
	   199      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   200      "00000001" // 	NOPX /* MW 2 */
	   201      "00000000" // /* MW 1 */
.swstall chess_separator_scheduler
	   202      "00000001" // 	NOPX /* MW 2 */
	   203      "00000000" // /* MW 1 */
.swstall for_chess_exit
.exit
	   204      "00011001" // 	NOPA /* MW 4 */
	   205      "00000000" // /* MW 3 */
	   206      "00000000" // /* MW 2 */
	   207      "00000000" // /* MW 1 */
.label TGT_F_main_init_208
.loop_nesting 1
	   208      "10010101" // 	                                                                                          J #208 /* MW 6 */
	   209      "00000000" // /* MW 5 */
	   210      "00000000" // /* MW 4 */
	   211      "01101000" // /* MW 3 */
	   212      "00000000" // /* MW 2 */
	   213      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   214      "00000001" // 	NOPX /* MW 2 */
	   215      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   216      "00000001" // 	NOPX /* MW 2 */
	   217      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   218      "00000001" // 	NOPX /* MW 2 */
	   219      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   220      "00000001" // 	NOPX /* MW 2 */
	   221      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   222      "00000001" // 	NOPX /* MW 2 */
.label _main_init__end
	   223      "00000000" // /* MW 1 */
.label core_0_2
.function_start
	   224      "00111011" // 	                              PADDB [sp], #64;                                            MOVX r24, #0;                 MOV p0, p7 /* MW 10 */
	   225      "00101000" // /* MW 9 */
	   226      "00111011" // /* MW 8 */
	   227      "00011111" // /* MW 7 */
	   228      "00001000" // /* MW 6 */
	   229      "10000000" // /* MW 5 */
	   230      "00000001" // /* MW 4 */
	   231      "01000000" // /* MW 3 */
	   232      "00000011" // /* MW 2 */
	   233      "00000000" // /* MW 1 */
	   234      "00111011" // 	                                                            ST p6, [sp, #-36];            MOVX r21, #-1;                MOV r1, r21 /* MW 10 */
	   235      "00101001" // /* MW 9 */
	   236      "01001011" // /* MW 8 */
	   237      "00100101" // /* MW 7 */
	   238      "11101000" // /* MW 6 */
	   239      "01010111" // /* MW 5 */
	   240      "00111111" // /* MW 4 */
	   241      "11010000" // /* MW 3 */
	   242      "01111110" // /* MW 2 */
	   243      "11111111" // /* MW 1 */
	   244      "00000011" // 	                                                            ST r24, [sp, #-48];                                         MOV r0, r20 /* MW 8 */
	   245      "00100000" // /* MW 7 */
	   246      "00001011" // /* MW 6 */
	   247      "00000101" // /* MW 5 */
	   248      "00000000" // /* MW 4 */
	   249      "00000000" // /* MW 3 */
	   250      "01001110" // /* MW 2 */
	   251      "11111111" // /* MW 1 */
	   252      "00000011" // 	                                                            ST p0, [sp, #-32];                                          MOV r2, r23 /* MW 8 */
	   253      "00100000" // /* MW 7 */
	   254      "11001011" // /* MW 6 */
	   255      "01000101" // /* MW 5 */
	   256      "00000000" // /* MW 4 */
	   257      "11010000" // /* MW 3 */
	   258      "10001000" // /* MW 2 */
	   259      "11111111" // /* MW 1 */
	   260      "00000011" // 	                                                            ST r2, [sp, #-28];                                          MOV r3, r22 /* MW 8 */
	   261      "00100000" // /* MW 7 */
	   262      "10001011" // /* MW 6 */
	   263      "01100101" // /* MW 5 */
	   264      "00000000" // /* MW 4 */
	   265      "10000000" // /* MW 3 */
	   266      "10011000" // /* MW 2 */
	   267      "11111111" // /* MW 1 */
	   268      "00111011" // 	                                                            ST r3, [sp, #-24];            MOVXM p7, #472064 /* MW 10 */
	   269      "00010001" // /* MW 9 */
	   270      "00000000" // /* MW 8 */
	   271      "10011010" // /* MW 7 */
	   272      "11001111" // /* MW 6 */
	   273      "00000001" // /* MW 5 */
	   274      "00000000" // /* MW 4 */
	   275      "11000000" // /* MW 3 */
	   276      "10101000" // /* MW 2 */
	   277      "11111111" // /* MW 1 */
	   278      "00111011" // 	                                                            ST r1, [sp, #-20];            MOVXM p6, #368 /* MW 10 */
	   279      "00010001" // /* MW 9 */
	   280      "10111000" // /* MW 8 */
	   281      "00011000" // /* MW 7 */
	   282      "00000011" // /* MW 6 */
	   283      "00000000" // /* MW 5 */
	   284      "00000000" // /* MW 4 */
	   285      "01000000" // /* MW 3 */
	   286      "10111000" // /* MW 2 */
	   287      "11111111" // /* MW 1 */
	   288      "00011001" // 	                                                            ST r0, [sp, #-16] /* MW 4 */
	   289      "01000000" // /* MW 3 */
	   290      "11111110" // /* MW 2 */
	   291      "00001111" // /* MW 1 */
	   292      "00011001" // 	                                                            ST r19, [sp, #-12] /* MW 4 */
	   293      "11100110" // /* MW 3 */
	   294      "11111110" // /* MW 2 */
	   295      "00001111" // /* MW 1 */
	   296      "00011001" // 	                                                            ST r18, [sp, #-8] /* MW 4 */
	   297      "01100100" // /* MW 3 */
	   298      "11111111" // /* MW 2 */
	   299      "00001111" // /* MW 1 */
	   300      "00011001" // 	                                                            ST r17, [sp, #-4] /* MW 4 */
	   301      "11100010" // /* MW 3 */
	   302      "11111111" // /* MW 2 */
	   303      "00001111" // /* MW 1 */
	   304      "00011001" // 	                                                            ST r16, [sp, #-40] /* MW 4 */
	   305      "01100000" // /* MW 3 */
	   306      "11111011" // /* MW 2 */
	   307      "00001111" // /* MW 1 */
	   308      "00110111" // 	NOPA;                         NOPB;                         ST lr, [sp, #-44];            NOPX /* MW 12 */
	   309      "01000001" // /* MW 11 */
	   310      "01100001" // /* MW 10 */
	   311      "11111101" // /* MW 9 */
	   312      "00000011" // /* MW 8 */
	   313      "00000000" // /* MW 7 */
	   314      "00000000" // /* MW 6 */
	   315      "00000000" // /* MW 5 */
	   316      "00000000" // /* MW 4 */
	   317      "00000000" // /* MW 3 */
	   318      "00000000" // /* MW 2 */
	   319      "00000000" // /* MW 1 */
.label TGT_Fcore_0_2_96
.no_stack_arguments
.loop_nesting 1
	   320      "00010101" // 	                                                                                          JL #896 /* MW 6 */
	   321      "00000001" // /* MW 5 */
	   322      "00000000" // /* MW 4 */
	   323      "11000000" // /* MW 3 */
	   324      "00000001" // /* MW 2 */
	   325      "00000000" // /* MW 1 */
.delay_slot
	   326      "00111011" // 	                                                            ST r24, [sp, #-52];           MOVX r0, #51;                 MOV r1, #-1 /* MW 10 */
	   327      "11001001" // /* MW 9 */
	   328      "11111111" // /* MW 8 */
	   329      "00100111" // /* MW 7 */
	   330      "01101000" // /* MW 6 */
	   331      "00000110" // /* MW 5 */
	   332      "00000000" // /* MW 4 */
	   333      "00000000" // /* MW 3 */
	   334      "00111110" // /* MW 2 */
	   335      "11111111" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   336      "00000001" // 	NOPX /* MW 2 */
	   337      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   338      "00000001" // 	NOPX /* MW 2 */
	   339      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   340      "00000001" // 	NOPX /* MW 2 */
	   341      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   342      "10111011" // 	NOPA;                         NOPB;                                                                                     NOPM /* MW 10 */
	   343      "10001110" // /* MW 9 */
	   344      "00000011" // /* MW 8 */
	   345      "00000000" // /* MW 7 */
	   346      "00000000" // /* MW 6 */
	   347      "00000000" // /* MW 5 */
	   348      "00000000" // /* MW 4 */
	   349      "00000000" // /* MW 3 */
	   350      "00000000" // /* MW 2 */
	   351      "00000000" // /* MW 1 */
.return_address
	   352      "11000000" // 	LDA r17, [p7, #0];            NOPB;                         NOPS;                         MOVX r16, #15;                NOPM;                                   NOPV /* MW 16 */
	   353      "00000011" // /* MW 15 */
	   354      "00000000" // /* MW 14 */
	   355      "10001000" // /* MW 13 */
	   356      "00000011" // /* MW 12 */
	   357      "00000000" // /* MW 11 */
	   358      "11101000" // /* MW 10 */
	   359      "00000001" // /* MW 9 */
	   360      "00000001" // /* MW 8 */
	   361      "00000000" // /* MW 7 */
	   362      "00000000" // /* MW 6 */
	   363      "01001000" // /* MW 5 */
	   364      "01010100" // /* MW 4 */
	   365      "11100000" // /* MW 3 */
	   366      "00000000" // /* MW 2 */
	   367      "00000000" // /* MW 1 */
.label TGT_Fcore_0_2_144
.no_stack_arguments
.loop_nesting 2
	   368      "00010101" // 	                                                                                          JL #896 /* MW 6 */
	   369      "00000001" // /* MW 5 */
	   370      "00000000" // /* MW 4 */
	   371      "11000000" // /* MW 3 */
	   372      "00000001" // /* MW 2 */
	   373      "00000000" // /* MW 1 */
.delay_slot
	   374      "01000011" // 	                                                                                          MOVX r0, #49;                 MOV r1, #-1 /* MW 8 */
	   375      "11001000" // /* MW 7 */
	   376      "11111111" // /* MW 6 */
	   377      "00100111" // /* MW 5 */
	   378      "00101000" // /* MW 4 */
	   379      "00000110" // /* MW 3 */
	   380      "00000000" // /* MW 2 */
	   381      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   382      "00000001" // 	NOPX /* MW 2 */
	   383      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   384      "00000001" // 	NOPX /* MW 2 */
	   385      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   386      "00000001" // 	NOPX /* MW 2 */
	   387      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   388      "00110111" // 	NOPA;                         NOPB;                         NOPS;                         NOPX /* MW 12 */
	   389      "00000001" // /* MW 11 */
	   390      "00000000" // /* MW 10 */
	   391      "00000000" // /* MW 9 */
	   392      "00000000" // /* MW 8 */
	   393      "00000000" // /* MW 7 */
	   394      "00000000" // /* MW 6 */
	   395      "00000000" // /* MW 5 */
	   396      "00000000" // /* MW 4 */
	   397      "00000000" // /* MW 3 */
	   398      "00000000" // /* MW 2 */
	   399      "00000000" // /* MW 1 */
.return_address
.no_stack_arguments
	   400      "00010101" // 	                                                                                          JL #896 /* MW 6 */
	   401      "00000001" // /* MW 5 */
	   402      "00000000" // /* MW 4 */
	   403      "11000000" // /* MW 3 */
	   404      "00000001" // /* MW 2 */
	   405      "00000000" // /* MW 1 */
.delay_slot
	   406      "01000011" // 	                                                                                          MOVX r0, #52;                 MOV r1, #-1 /* MW 8 */
	   407      "11001000" // /* MW 7 */
	   408      "11111111" // /* MW 6 */
	   409      "00100111" // /* MW 5 */
	   410      "10001000" // /* MW 4 */
	   411      "00000110" // /* MW 3 */
	   412      "00000000" // /* MW 2 */
	   413      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   414      "00000001" // 	NOPX /* MW 2 */
	   415      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   416      "00000001" // 	NOPX /* MW 2 */
	   417      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   418      "00000001" // 	NOPX /* MW 2 */
	   419      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   420      "00110111" // 	NOPA;                         NOPB;                         NOPS;                         NOPX /* MW 12 */
	   421      "00000001" // /* MW 11 */
	   422      "00000000" // /* MW 10 */
	   423      "00000000" // /* MW 9 */
	   424      "00000000" // /* MW 8 */
	   425      "00000000" // /* MW 7 */
	   426      "00000000" // /* MW 6 */
	   427      "00000000" // /* MW 5 */
	   428      "00000000" // /* MW 4 */
	   429      "00000000" // /* MW 3 */
	   430      "00000000" // /* MW 2 */
	   431      "00000000" // /* MW 1 */
.return_address
.no_stack_arguments
	   432      "00010101" // 	                                                                                          JL #960 /* MW 6 */
	   433      "00000001" // /* MW 5 */
	   434      "00000000" // /* MW 4 */
	   435      "11100000" // /* MW 3 */
	   436      "00000001" // /* MW 2 */
	   437      "00000000" // /* MW 1 */
.delay_slot
	   438      "01010101" // 	                                                                                          MOVXM p2, #463872 /* MW 6 */
	   439      "00000000" // /* MW 5 */
	   440      "01101000" // /* MW 4 */
	   441      "00010100" // /* MW 3 */
	   442      "00000111" // /* MW 2 */
	   443      "00000000" // /* MW 1 */
.delay_slot
	   444      "01010101" // 	                                                                                          MOVXM p1, #459776 /* MW 6 */
	   445      "00000000" // /* MW 5 */
	   446      "01101000" // /* MW 4 */
	   447      "00000010" // /* MW 3 */
	   448      "00000111" // /* MW 2 */
	   449      "00000000" // /* MW 1 */
.delay_slot
	   450      "10111011" // 	MOVA r2, #64;                                                                             MOVXM p0, #467968 /* MW 10 */
	   451      "00010000" // /* MW 9 */
	   452      "00000000" // /* MW 8 */
	   453      "00011010" // /* MW 7 */
	   454      "11001000" // /* MW 6 */
	   455      "00000001" // /* MW 5 */
	   456      "00000000" // /* MW 4 */
	   457      "10001000" // /* MW 3 */
	   458      "00000000" // /* MW 2 */
	   459      "00001000" // /* MW 1 */
.delay_slot
	   460      "10111011" // 	MOVA r0, #32;                                                                             MOVX r1, #64;                 MOV r3, r17 /* MW 10 */
	   461      "00101000" // /* MW 9 */
	   462      "01001011" // /* MW 8 */
	   463      "01100100" // /* MW 7 */
	   464      "00001000" // /* MW 6 */
	   465      "00010000" // /* MW 5 */
	   466      "00000010" // /* MW 4 */
	   467      "00001000" // /* MW 3 */
	   468      "00000000" // /* MW 2 */
	   469      "00000100" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   470      "10111011" // 	NOPA;                         NOPB;                                                                                     NOPM /* MW 10 */
	   471      "10001110" // /* MW 9 */
	   472      "00000011" // /* MW 8 */
	   473      "00000000" // /* MW 7 */
	   474      "00000000" // /* MW 6 */
	   475      "00000000" // /* MW 5 */
	   476      "00000000" // /* MW 4 */
	   477      "00000000" // /* MW 3 */
	   478      "00000000" // /* MW 2 */
	   479      "00000000" // /* MW 1 */
.return_address
.no_stack_arguments
	   480      "00010101" // 	                                                                                          JL #928 /* MW 6 */
	   481      "00000001" // /* MW 5 */
	   482      "00000000" // /* MW 4 */
	   483      "11010000" // /* MW 3 */
	   484      "00000001" // /* MW 2 */
	   485      "00000000" // /* MW 1 */
.delay_slot
	   486      "01000011" // 	                                                                                          MOVX r0, #48;                 MOV r1, #1 /* MW 8 */
	   487      "11001000" // /* MW 7 */
	   488      "00000011" // /* MW 6 */
	   489      "00100000" // /* MW 5 */
	   490      "00001000" // /* MW 4 */
	   491      "00000110" // /* MW 3 */
	   492      "00000000" // /* MW 2 */
	   493      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   494      "00000001" // 	NOPX /* MW 2 */
	   495      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   496      "00000001" // 	NOPX /* MW 2 */
	   497      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   498      "00000001" // 	NOPX /* MW 2 */
	   499      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   500      "00110111" // 	NOPA;                         NOPB;                         NOPS;                         NOPX /* MW 12 */
	   501      "00000001" // /* MW 11 */
	   502      "00000000" // /* MW 10 */
	   503      "00000000" // /* MW 9 */
	   504      "00000000" // /* MW 8 */
	   505      "00000000" // /* MW 7 */
	   506      "00000000" // /* MW 6 */
	   507      "00000000" // /* MW 5 */
	   508      "00000000" // /* MW 4 */
	   509      "00000000" // /* MW 3 */
	   510      "00000000" // /* MW 2 */
	   511      "00000000" // /* MW 1 */
.return_address
.no_stack_arguments
	   512      "00010101" // 	                                                                                          JL #928 /* MW 6 */
	   513      "00000001" // /* MW 5 */
	   514      "00000000" // /* MW 4 */
	   515      "11010000" // /* MW 3 */
	   516      "00000001" // /* MW 2 */
	   517      "00000000" // /* MW 1 */
.delay_slot
	   518      "01000011" // 	                                                                                          MOVX r0, #53;                 MOV r1, #1 /* MW 8 */
	   519      "11001000" // /* MW 7 */
	   520      "00000011" // /* MW 6 */
	   521      "00100000" // /* MW 5 */
	   522      "10101000" // /* MW 4 */
	   523      "00000110" // /* MW 3 */
	   524      "00000000" // /* MW 2 */
	   525      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   526      "00000001" // 	NOPX /* MW 2 */
	   527      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   528      "00000001" // 	NOPX /* MW 2 */
	   529      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   530      "00000001" // 	NOPX /* MW 2 */
	   531      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   532      "00110111" // 	NOPA;                         NOPB;                         NOPS;                         NOPX /* MW 12 */
	   533      "00000001" // /* MW 11 */
	   534      "00000000" // /* MW 10 */
	   535      "00000000" // /* MW 9 */
	   536      "00000000" // /* MW 8 */
	   537      "00000000" // /* MW 7 */
	   538      "00000000" // /* MW 6 */
	   539      "00000000" // /* MW 5 */
	   540      "00000000" // /* MW 4 */
	   541      "00000000" // /* MW 3 */
	   542      "00000000" // /* MW 2 */
	   543      "00000000" // /* MW 1 */
.return_address
.no_stack_arguments
	   544      "00010101" // 	                                                                                          JL #896 /* MW 6 */
	   545      "00000001" // /* MW 5 */
	   546      "00000000" // /* MW 4 */
	   547      "11000000" // /* MW 3 */
	   548      "00000001" // /* MW 2 */
	   549      "00000000" // /* MW 1 */
.delay_slot
	   550      "01000011" // 	                                                                                          MOVX r0, #49;                 MOV r1, #-1 /* MW 8 */
	   551      "11001000" // /* MW 7 */
	   552      "11111111" // /* MW 6 */
	   553      "00100111" // /* MW 5 */
	   554      "00101000" // /* MW 4 */
	   555      "00000110" // /* MW 3 */
	   556      "00000000" // /* MW 2 */
	   557      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   558      "00000001" // 	NOPX /* MW 2 */
	   559      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   560      "00000001" // 	NOPX /* MW 2 */
	   561      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   562      "00000001" // 	NOPX /* MW 2 */
	   563      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   564      "00110111" // 	NOPA;                         NOPB;                         NOPS;                         NOPX /* MW 12 */
	   565      "00000001" // /* MW 11 */
	   566      "00000000" // /* MW 10 */
	   567      "00000000" // /* MW 9 */
	   568      "00000000" // /* MW 8 */
	   569      "00000000" // /* MW 7 */
	   570      "00000000" // /* MW 6 */
	   571      "00000000" // /* MW 5 */
	   572      "00000000" // /* MW 4 */
	   573      "00000000" // /* MW 3 */
	   574      "00000000" // /* MW 2 */
	   575      "00000000" // /* MW 1 */
.return_address
.no_stack_arguments
	   576      "00010101" // 	                                                                                          JL #896 /* MW 6 */
	   577      "00000001" // /* MW 5 */
	   578      "00000000" // /* MW 4 */
	   579      "11000000" // /* MW 3 */
	   580      "00000001" // /* MW 2 */
	   581      "00000000" // /* MW 1 */
.delay_slot
	   582      "01000011" // 	                                                                                          MOVX r0, #52;                 MOV r1, #-1 /* MW 8 */
	   583      "11001000" // /* MW 7 */
	   584      "11111111" // /* MW 6 */
	   585      "00100111" // /* MW 5 */
	   586      "10001000" // /* MW 4 */
	   587      "00000110" // /* MW 3 */
	   588      "00000000" // /* MW 2 */
	   589      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   590      "00000001" // 	NOPX /* MW 2 */
	   591      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   592      "00000001" // 	NOPX /* MW 2 */
	   593      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   594      "00000001" // 	NOPX /* MW 2 */
	   595      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   596      "00110111" // 	NOPA;                         NOPB;                         NOPS;                         NOPX /* MW 12 */
	   597      "00000001" // /* MW 11 */
	   598      "00000000" // /* MW 10 */
	   599      "00000000" // /* MW 9 */
	   600      "00000000" // /* MW 8 */
	   601      "00000000" // /* MW 7 */
	   602      "00000000" // /* MW 6 */
	   603      "00000000" // /* MW 5 */
	   604      "00000000" // /* MW 4 */
	   605      "00000000" // /* MW 3 */
	   606      "00000000" // /* MW 2 */
	   607      "00000000" // /* MW 1 */
.return_address
.no_stack_arguments
	   608      "00010101" // 	                                                                                          JL #960 /* MW 6 */
	   609      "00000001" // /* MW 5 */
	   610      "00000000" // /* MW 4 */
	   611      "11100000" // /* MW 3 */
	   612      "00000001" // /* MW 2 */
	   613      "00000000" // /* MW 1 */
.delay_slot
	   614      "01010101" // 	                                                                                          MOVXM p0, #470016 /* MW 6 */
	   615      "00000000" // /* MW 5 */
	   616      "01111000" // /* MW 4 */
	   617      "00100000" // /* MW 3 */
	   618      "00000111" // /* MW 2 */
	   619      "00000000" // /* MW 1 */
.delay_slot
	   620      "01010101" // 	                                                                                          MOVXM p2, #465920 /* MW 6 */
	   621      "00000000" // /* MW 5 */
	   622      "01111000" // /* MW 4 */
	   623      "00010100" // /* MW 3 */
	   624      "00000111" // /* MW 2 */
	   625      "00000000" // /* MW 1 */
.delay_slot
	   626      "10111011" // 	MOVA r0, #32;                                                                             MOVXM p1, #459776 /* MW 10 */
	   627      "00010000" // /* MW 9 */
	   628      "00000000" // /* MW 8 */
	   629      "10011010" // /* MW 7 */
	   630      "11000000" // /* MW 6 */
	   631      "00000001" // /* MW 5 */
	   632      "00000000" // /* MW 4 */
	   633      "00001000" // /* MW 3 */
	   634      "00000000" // /* MW 2 */
	   635      "00000100" // /* MW 1 */
.delay_slot
	   636      "10111011" // 	MOVA r2, #64;                                                                             MOVX r1, #64;                 MOV r3, r17 /* MW 10 */
	   637      "00101000" // /* MW 9 */
	   638      "01001011" // /* MW 8 */
	   639      "01100100" // /* MW 7 */
	   640      "00001000" // /* MW 6 */
	   641      "00010000" // /* MW 5 */
	   642      "00000010" // /* MW 4 */
	   643      "10001000" // /* MW 3 */
	   644      "00000000" // /* MW 2 */
	   645      "00001000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   646      "10111011" // 	NOPA;                         NOPB;                                                                                     NOPM /* MW 10 */
	   647      "10001110" // /* MW 9 */
	   648      "00000011" // /* MW 8 */
	   649      "00000000" // /* MW 7 */
	   650      "00000000" // /* MW 6 */
	   651      "00000000" // /* MW 5 */
	   652      "00000000" // /* MW 4 */
	   653      "00000000" // /* MW 3 */
	   654      "00000000" // /* MW 2 */
	   655      "00000000" // /* MW 1 */
.return_address
.no_stack_arguments
	   656      "00010101" // 	                                                                                          JL #928 /* MW 6 */
	   657      "00000001" // /* MW 5 */
	   658      "00000000" // /* MW 4 */
	   659      "11010000" // /* MW 3 */
	   660      "00000001" // /* MW 2 */
	   661      "00000000" // /* MW 1 */
.delay_slot
	   662      "01000011" // 	                                                                                          MOVX r0, #48;                 MOV r1, #1 /* MW 8 */
	   663      "11001000" // /* MW 7 */
	   664      "00000011" // /* MW 6 */
	   665      "00100000" // /* MW 5 */
	   666      "00001000" // /* MW 4 */
	   667      "00000110" // /* MW 3 */
	   668      "00000000" // /* MW 2 */
	   669      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   670      "00000001" // 	NOPX /* MW 2 */
	   671      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   672      "00000001" // 	NOPX /* MW 2 */
	   673      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   674      "00000001" // 	NOPX /* MW 2 */
	   675      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   676      "00110111" // 	NOPA;                         NOPB;                         NOPS;                         NOPX /* MW 12 */
	   677      "00000001" // /* MW 11 */
	   678      "00000000" // /* MW 10 */
	   679      "00000000" // /* MW 9 */
	   680      "00000000" // /* MW 8 */
	   681      "00000000" // /* MW 7 */
	   682      "00000000" // /* MW 6 */
	   683      "00000000" // /* MW 5 */
	   684      "00000000" // /* MW 4 */
	   685      "00000000" // /* MW 3 */
	   686      "00000000" // /* MW 2 */
	   687      "00000000" // /* MW 1 */
.return_address
.no_stack_arguments
	   688      "00010101" // 	                                                                                          JL #928 /* MW 6 */
	   689      "00000001" // /* MW 5 */
	   690      "00000000" // /* MW 4 */
	   691      "11010000" // /* MW 3 */
	   692      "00000001" // /* MW 2 */
	   693      "00000000" // /* MW 1 */
.delay_slot
	   694      "01000011" // 	                                                                                          MOVX r0, #53;                 MOV r1, #1 /* MW 8 */
	   695      "11001000" // /* MW 7 */
	   696      "00000011" // /* MW 6 */
	   697      "00100000" // /* MW 5 */
	   698      "10101000" // /* MW 4 */
	   699      "00000110" // /* MW 3 */
	   700      "00000000" // /* MW 2 */
	   701      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   702      "00000001" // 	NOPX /* MW 2 */
	   703      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   704      "00000001" // 	NOPX /* MW 2 */
	   705      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   706      "00000001" // 	NOPX /* MW 2 */
	   707      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   708      "00110111" // 	NOPA;                         NOPB;                         NOPS;                         NOPX /* MW 12 */
	   709      "00000001" // /* MW 11 */
	   710      "00000000" // /* MW 10 */
	   711      "00000000" // /* MW 9 */
	   712      "00000000" // /* MW 8 */
	   713      "00000000" // /* MW 7 */
	   714      "00000000" // /* MW 6 */
	   715      "00000000" // /* MW 5 */
	   716      "00000000" // /* MW 4 */
	   717      "00000000" // /* MW 3 */
	   718      "00000000" // /* MW 2 */
	   719      "00000000" // /* MW 1 */
.return_address
	   720      "00011001" // 	                                                                                          JNZD r16, r16, p6 /* MW 4 */
	   721      "10001100" // /* MW 3 */
	   722      "00100001" // /* MW 2 */
	   723      "00010100" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   724      "00000001" // 	NOPX /* MW 2 */
	   725      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   726      "00000001" // 	NOPX /* MW 2 */
	   727      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   728      "00000001" // 	NOPX /* MW 2 */
	   729      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   730      "00000001" // 	NOPX /* MW 2 */
	   731      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   732      "00000001" // 	NOPX /* MW 2 */
	   733      "00000000" // /* MW 1 */
.loop_nesting 1
	   734      "01011001" // 	LDA r17, [sp, #-52] /* MW 4 */
	   735      "11100010" // /* MW 3 */
	   736      "11111001" // /* MW 2 */
	   737      "00000111" // /* MW 1 */
	   738      "00000001" // 	NOPX /* MW 2 */
	   739      "00000000" // /* MW 1 */
.no_stack_arguments
	   740      "00010101" // 	                                                                                          JL #928 /* MW 6 */
	   741      "00000001" // /* MW 5 */
	   742      "00000000" // /* MW 4 */
	   743      "11010000" // /* MW 3 */
	   744      "00000001" // /* MW 2 */
	   745      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   746      "00000001" // 	NOPX /* MW 2 */
	   747      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   748      "00000001" // 	NOPX /* MW 2 */
	   749      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   750      "00000001" // 	NOPX /* MW 2 */
	   751      "00000000" // /* MW 1 */
.delay_slot
	   752      "01010101" // 	                                                                                          MOVXM p7, #472064 /* MW 6 */
	   753      "00000000" // /* MW 5 */
	   754      "01101000" // /* MW 4 */
	   755      "00111110" // /* MW 3 */
	   756      "00000111" // /* MW 2 */
	   757      "00000000" // /* MW 1 */
.delay_slot
	   758      "10111011" // 	MOVA r16, #0;                                                                             MOVX r0, #50;                 MOV r1, #1 /* MW 10 */
	   759      "11001000" // /* MW 9 */
	   760      "00000011" // /* MW 8 */
	   761      "00100000" // /* MW 7 */
	   762      "01001000" // /* MW 6 */
	   763      "00000110" // /* MW 5 */
	   764      "00000000" // /* MW 4 */
	   765      "00001000" // /* MW 3 */
	   766      "00000100" // /* MW 2 */
	   767      "00000000" // /* MW 1 */
.return_address
	   768      "00011101" // 	LDA r25, [sp, #-48];                                                                      ADD r24, r17, #1 /* MW 6 */
	   769      "00000111" // /* MW 5 */
	   770      "01110000" // /* MW 4 */
	   771      "01001100" // /* MW 3 */
	   772      "01001110" // /* MW 2 */
	   773      "11111111" // /* MW 1 */
	   774      "10011001" // 	                                                                                          NE r26, r21, r24 /* MW 4 */
	   775      "10001000" // /* MW 3 */
	   776      "01110101" // /* MW 2 */
	   777      "00010101" // /* MW 1 */
	   778      "00000001" // 	NOPX /* MW 2 */
	   779      "00000000" // /* MW 1 */
	   780      "00000001" // 	NOPX /* MW 2 */
	   781      "00000000" // /* MW 1 */
	   782      "00000001" // 	NOPX /* MW 2 */
	   783      "00000000" // /* MW 1 */
	   784      "00000001" // 	NOPX /* MW 2 */
	   785      "00000000" // /* MW 1 */
	   786      "00000001" // 	NOPX /* MW 2 */
	   787      "00000000" // /* MW 1 */
	   788      "10011001" // 	                                                                                          ADC r25, r25, r16 /* MW 4 */
	   789      "00000010" // /* MW 3 */
	   790      "01110011" // /* MW 2 */
	   791      "00010110" // /* MW 1 */
	   792      "00111101" // 	                                                            ST r25, [sp, #-48];           EQZ r27, r25 /* MW 6 */
	   793      "11011100" // /* MW 5 */
	   794      "01110110" // /* MW 4 */
	   795      "01000110" // /* MW 3 */
	   796      "01001110" // /* MW 2 */
	   797      "11111111" // /* MW 1 */
	   798      "10011001" // 	                                                                                          LT r25, r25, r16 /* MW 4 */
	   799      "00001010" // /* MW 3 */
	   800      "01110011" // /* MW 2 */
	   801      "00010110" // /* MW 1 */
	   802      "10011001" // 	                                                                                          AND r26, r27, r26 /* MW 4 */
	   803      "10100100" // /* MW 3 */
	   804      "11110101" // /* MW 2 */
	   805      "00010110" // /* MW 1 */
	   806      "10011001" // 	                                                                                          OR r25, r25, r26 /* MW 4 */
	   807      "10100101" // /* MW 3 */
	   808      "01110011" // /* MW 2 */
	   809      "00010110" // /* MW 1 */
	   810      "10010101" // 	                                                                                          JNZ r25, #320 /* MW 6 */
	   811      "00000001" // /* MW 5 */
	   812      "01000000" // /* MW 4 */
	   813      "10100000" // /* MW 3 */
	   814      "00000000" // /* MW 2 */
	   815      "11001000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   816      "00000001" // 	NOPX /* MW 2 */
	   817      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   818      "00000001" // 	NOPX /* MW 2 */
	   819      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   820      "00000001" // 	NOPX /* MW 2 */
	   821      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   822      "00000001" // 	NOPX /* MW 2 */
	   823      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   824      "00000001" // 	NOPX /* MW 2 */
	   825      "00000000" // /* MW 1 */
.loop_nesting 0
	   826      "11011001" // 	LDA lr, [sp, #-44] /* MW 4 */
	   827      "11000010" // /* MW 3 */
	   828      "11111010" // /* MW 2 */
	   829      "00000111" // /* MW 1 */
	   830      "01011001" // 	LDA r16, [sp, #-40] /* MW 4 */
	   831      "01100000" // /* MW 3 */
	   832      "11111011" // /* MW 2 */
	   833      "00000111" // /* MW 1 */
	   834      "01011001" // 	LDA r17, [sp, #-4] /* MW 4 */
	   835      "11100010" // /* MW 3 */
	   836      "11111111" // /* MW 2 */
	   837      "00000111" // /* MW 1 */
	   838      "01011001" // 	LDA r18, [sp, #-8] /* MW 4 */
	   839      "01100100" // /* MW 3 */
	   840      "11111111" // /* MW 2 */
	   841      "00000111" // /* MW 1 */
	   842      "01011001" // 	LDA r19, [sp, #-12] /* MW 4 */
	   843      "11100110" // /* MW 3 */
	   844      "11111110" // /* MW 2 */
	   845      "00000111" // /* MW 1 */
	   846      "01011001" // 	LDA r20, [sp, #-16] /* MW 4 */
	   847      "01101000" // /* MW 3 */
	   848      "11111110" // /* MW 2 */
	   849      "00000111" // /* MW 1 */
	   850      "01011001" // 	LDA r21, [sp, #-20] /* MW 4 */
	   851      "11101010" // /* MW 3 */
	   852      "11111101" // /* MW 2 */
	   853      "00000111" // /* MW 1 */
	   854      "01011001" // 	LDA r22, [sp, #-24] /* MW 4 */
	   855      "01101100" // /* MW 3 */
	   856      "11111101" // /* MW 2 */
	   857      "00000111" // /* MW 1 */
	   858      "01011001" // 	LDA r23, [sp, #-28] /* MW 4 */
	   859      "11101110" // /* MW 3 */
	   860      "11111100" // /* MW 2 */
	   861      "00000111" // /* MW 1 */
	   862      "11011001" // 	LDA p7, [sp, #-32] /* MW 4 */
	   863      "01111110" // /* MW 3 */
	   864      "11111100" // /* MW 2 */
	   865      "00000111" // /* MW 1 */
	   866      "11011001" // 	LDA p6, [sp, #-36] /* MW 4 */
	   867      "11110110" // /* MW 3 */
	   868      "11111011" // /* MW 2 */
	   869      "00000111" // /* MW 1 */
	   870      "00011001" // 	                                                                                          RET lr /* MW 4 */
	   871      "00011000" // /* MW 3 */
	   872      "00000000" // /* MW 2 */
	   873      "00010000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   874      "00000001" // 	NOPX /* MW 2 */
	   875      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   876      "00000001" // 	NOPX /* MW 2 */
	   877      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   878      "00000001" // 	NOPX /* MW 2 */
	   879      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   880      "00000001" // 	NOPX /* MW 2 */
	   881      "00000000" // /* MW 1 */
.delay_slot
	   882      "01111111" // 	NOPA;                         PADDB [sp], #-64;             NOPS;                         NOPX;                         NOPM /* MW 14 */
	   883      "00000000" // /* MW 13 */
	   884      "00000000" // /* MW 12 */
	   885      "00000000" // /* MW 11 */
	   886      "01110001" // /* MW 10 */
	   887      "00000000" // /* MW 9 */
	   888      "00000000" // /* MW 8 */
	   889      "00000000" // /* MW 7 */
	   890      "00000000" // /* MW 6 */
	   891      "11000000" // /* MW 5 */
	   892      "11111111" // /* MW 4 */
	   893      "00000111" // /* MW 3 */
	   894      "00000000" // /* MW 2 */
.label core_0_2__end
	   895      "00000000" // /* MW 1 */
.label llvm___aie2___acquire
.function_start
	   896      "00011001" // 	                                                                                          ACQ r0, r1 /* MW 4 */
	   897      "00010010" // /* MW 3 */
	   898      "00010010" // /* MW 2 */
	   899      "00010000" // /* MW 1 */
	   900      "00011001" // 	                                                                                          RET lr /* MW 4 */
	   901      "00011000" // /* MW 3 */
	   902      "00000000" // /* MW 2 */
	   903      "00010000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   904      "00000001" // 	NOPX /* MW 2 */
	   905      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   906      "00000001" // 	NOPX /* MW 2 */
	   907      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   908      "00000001" // 	NOPX /* MW 2 */
	   909      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   910      "00000001" // 	NOPX /* MW 2 */
	   911      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   912      "11000000" // 	NOPA;                         NOPB;                         NOPS;                         NOPX;                         NOPM;                                   NOPV /* MW 16 */
	   913      "00000011" // /* MW 15 */
	   914      "00000000" // /* MW 14 */
	   915      "10001000" // /* MW 13 */
	   916      "00000011" // /* MW 12 */
	   917      "00000000" // /* MW 11 */
	   918      "00000000" // /* MW 10 */
	   919      "00000000" // /* MW 9 */
	   920      "00000000" // /* MW 8 */
	   921      "00000000" // /* MW 7 */
	   922      "00000000" // /* MW 6 */
	   923      "00000000" // /* MW 5 */
	   924      "00000000" // /* MW 4 */
	   925      "00000000" // /* MW 3 */
	   926      "00000000" // /* MW 2 */
.label llvm___aie2___acquire__end
	   927      "00000000" // /* MW 1 */
.label llvm___aie2___release
.function_start
	   928      "00000001" // 	NOPX /* MW 2 */
	   929      "00000000" // /* MW 1 */
	   930      "00000001" // 	NOPX /* MW 2 */
	   931      "00000000" // /* MW 1 */
	   932      "00000001" // 	NOPX /* MW 2 */
	   933      "00000000" // /* MW 1 */
	   934      "00000001" // 	NOPX /* MW 2 */
	   935      "00000000" // /* MW 1 */
	   936      "00000001" // 	NOPX /* MW 2 */
	   937      "00000000" // /* MW 1 */
	   938      "00000001" // 	NOPX /* MW 2 */
	   939      "00000000" // /* MW 1 */
	   940      "00011001" // 	                                                                                          REL r0, r1 /* MW 4 */
	   941      "00010010" // /* MW 3 */
	   942      "00010000" // /* MW 2 */
	   943      "00010000" // /* MW 1 */
	   944      "00011001" // 	                                                                                          RET lr /* MW 4 */
	   945      "00011000" // /* MW 3 */
	   946      "00000000" // /* MW 2 */
	   947      "00010000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   948      "00000001" // 	NOPX /* MW 2 */
	   949      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   950      "00000001" // 	NOPX /* MW 2 */
	   951      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   952      "00000001" // 	NOPX /* MW 2 */
	   953      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   954      "00000001" // 	NOPX /* MW 2 */
	   955      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	   956      "00011001" // 	NOPA /* MW 4 */
	   957      "00000000" // /* MW 3 */
	   958      "00000000" // /* MW 2 */
.label llvm___aie2___release__end
	   959      "00000000" // /* MW 1 */
.label conv2dk1
.function_start
	   960      "00000101" // 	                              PADDB [sp], #96;                                            MOVX r8, #8 /* MW 6 */
	   961      "00100001" // /* MW 5 */
	   962      "00010000" // /* MW 4 */
	   963      "01100000" // /* MW 3 */
	   964      "00000011" // /* MW 2 */
	   965      "00010000" // /* MW 1 */
	   966      "10111101" // 	                                                            ST r21, [sp, #-32];           LT r21, r2, r8 /* MW 6 */
	   967      "10001010" // /* MW 5 */
	   968      "10101010" // /* MW 4 */
	   969      "01000000" // /* MW 3 */
	   970      "10001101" // /* MW 2 */
	   971      "11111111" // /* MW 1 */
	   972      "00011001" // 	                                                            ST r18, [sp, #-40] /* MW 4 */
	   973      "01100100" // /* MW 3 */
	   974      "11111011" // /* MW 2 */
	   975      "00001111" // /* MW 1 */
	   976      "00011001" // 	                                                            ST r23, [sp, #-36] /* MW 4 */
	   977      "11101110" // /* MW 3 */
	   978      "11111011" // /* MW 2 */
	   979      "00001111" // /* MW 1 */
	   980      "00011001" // 	                                                            ST r22, [sp, #-28] /* MW 4 */
	   981      "11101100" // /* MW 3 */
	   982      "11111100" // /* MW 2 */
	   983      "00001111" // /* MW 1 */
	   984      "00011001" // 	                                                            ST r17, [sp, #-24] /* MW 4 */
	   985      "01100010" // /* MW 3 */
	   986      "11111101" // /* MW 2 */
	   987      "00001111" // /* MW 1 */
	   988      "00111011" // 	                                                            ST r20, [sp, #-20];           JNZ r21, #1760 /* MW 10 */
	   989      "01100001" // /* MW 9 */
	   990      "00000000" // /* MW 8 */
	   991      "00010000" // /* MW 7 */
	   992      "11011100" // /* MW 6 */
	   993      "00000000" // /* MW 5 */
	   994      "00101010" // /* MW 4 */
	   995      "00000000" // /* MW 3 */
	   996      "10111101" // /* MW 2 */
	   997      "11111111" // /* MW 1 */
.delay_slot
	   998      "00111011" // 	                                                            ST p7, [sp, #-8];             EVENT #0;                     MOV r5, #-31 /* MW 10 */
	   999      "11001001" // /* MW 9 */
	  1000      "11000011" // /* MW 8 */
	  1001      "10100111" // /* MW 7 */
	  1002      "10000000" // /* MW 6 */
	  1003      "00000000" // /* MW 5 */
	  1004      "00000000" // /* MW 4 */
	  1005      "11010000" // /* MW 3 */
	  1006      "11101111" // /* MW 2 */
	  1007      "11111111" // /* MW 1 */
.delay_slot
	  1008      "00111011" // 	                                                            ST p6, [sp, #-4];             ASHL r6, r2, r5;              MOV r7, #-29 /* MW 10 */
	  1009      "11001001" // /* MW 9 */
	  1010      "11000111" // /* MW 8 */
	  1011      "11100111" // /* MW 7 */
	  1012      "11110100" // /* MW 6 */
	  1013      "01100010" // /* MW 5 */
	  1014      "00000100" // /* MW 4 */
	  1015      "11010000" // /* MW 3 */
	  1016      "11111110" // /* MW 2 */
	  1017      "11111111" // /* MW 1 */
.delay_slot
	  1018      "10111101" // 	                                                            ST p1, [sp, #-44];            LSHL r6, r6, r7 /* MW 6 */
	  1019      "01111101" // /* MW 5 */
	  1020      "10001100" // /* MW 4 */
	  1021      "11010001" // /* MW 3 */
	  1022      "01011001" // /* MW 2 */
	  1023      "11111111" // /* MW 1 */
.delay_slot
	  1024      "01110111" // 	MOVA r4, #-3;                                               ST r19, [sp, #-16];           ADD r23, r6, r2;              MOV r18, p0 /* MW 12 */
	  1025      "00101000" // /* MW 11 */
	  1026      "00111011" // /* MW 10 */
	  1027      "01000000" // /* MW 9 */
	  1028      "00000110" // /* MW 8 */
	  1029      "01110001" // /* MW 7 */
	  1030      "00001101" // /* MW 6 */
	  1031      "01100110" // /* MW 5 */
	  1032      "11111110" // /* MW 4 */
	  1033      "00001111" // /* MW 3 */
	  1034      "10100001" // /* MW 2 */
	  1035      "11111111" // /* MW 1 */
.delay_slot
	  1036      "00111011" // 	                                                            ST r16, [sp, #-12];           ASHL r17, r23, r4;            MOV r6, p1 /* MW 10 */
	  1037      "00101001" // /* MW 9 */
	  1038      "00111011" // /* MW 8 */
	  1039      "11000001" // /* MW 7 */
	  1040      "01110100" // /* MW 6 */
	  1041      "00010010" // /* MW 5 */
	  1042      "00101111" // /* MW 4 */
	  1043      "00000000" // /* MW 3 */
	  1044      "11011100" // /* MW 2 */
	  1045      "11111111" // /* MW 1 */
	  1046      "10111011" // 	MOVA r2, #0;                                                                              ASHL r19, r1, r5;             ADD.NC r21, r0, #-1 /* MW 10 */
	  1047      "11111000" // /* MW 9 */
	  1048      "00111111" // /* MW 8 */
	  1049      "10100000" // /* MW 7 */
	  1050      "11110110" // /* MW 6 */
	  1051      "00110010" // /* MW 5 */
	  1052      "00000011" // /* MW 4 */
	  1053      "10001000" // /* MW 3 */
	  1054      "00000000" // /* MW 2 */
	  1055      "00000000" // /* MW 1 */
	  1056      "01110111" // 	MOVA r20, #3;                                               ST r21, [sp, #-52];           LSHL r22, r19, r7;            ADD.NC r5, r3, #-1 /* MW 12 */
	  1057      "11111000" // /* MW 11 */
	  1058      "11111111" // /* MW 10 */
	  1059      "10100000" // /* MW 9 */
	  1060      "11101100" // /* MW 8 */
	  1061      "01100011" // /* MW 7 */
	  1062      "00100111" // /* MW 6 */
	  1063      "11101010" // /* MW 5 */
	  1064      "11111001" // /* MW 4 */
	  1065      "00001111" // /* MW 3 */
	  1066      "01100101" // /* MW 2 */
	  1067      "00000000" // /* MW 1 */
	  1068      "10111011" // 	MOVA r19, #6;                                                                             ADD r21, r1, r22;             MOV r16, #1 /* MW 10 */
	  1069      "11001000" // /* MW 9 */
	  1070      "00000011" // /* MW 8 */
	  1071      "00000000" // /* MW 7 */
	  1072      "00000110" // /* MW 6 */
	  1073      "01011011" // /* MW 5 */
	  1074      "00000011" // /* MW 4 */
	  1075      "11001000" // /* MW 3 */
	  1076      "11000100" // /* MW 2 */
	  1077      "00000000" // /* MW 1 */
	  1078      "10111011" // 	MOVA r7, #255;                                                                            ASHL r4, r21, r4;             MOV dn0, p0 /* MW 10 */
	  1079      "00101000" // /* MW 9 */
	  1080      "00111011" // /* MW 8 */
	  1081      "00010000" // /* MW 7 */
	  1082      "01110101" // /* MW 6 */
	  1083      "01000010" // /* MW 5 */
	  1084      "00101010" // /* MW 4 */
	  1085      "11001000" // /* MW 3 */
	  1086      "11100001" // /* MW 2 */
	  1087      "00011111" // /* MW 1 */
	  1088      "01110111" // 	MOVA r21, #2;                                               ST r4, [sp, #-68];            GE r10, r2, r0;               MOV m0, #64 /* MW 12 */
	  1089      "01001000" // /* MW 11 */
	  1090      "10000011" // /* MW 10 */
	  1091      "00010000" // /* MW 9 */
	  1092      "01001100" // /* MW 8 */
	  1093      "10100000" // /* MW 7 */
	  1094      "00000100" // /* MW 6 */
	  1095      "11001000" // /* MW 5 */
	  1096      "11110111" // /* MW 4 */
	  1097      "01001111" // /* MW 3 */
	  1098      "01000101" // /* MW 2 */
	  1099      "00000000" // /* MW 1 */
	  1100      "01110111" // 	MOVA r17, #7;                                               ST r10, [sp, #-56];           LT r8, r1, r8;                ADD.NC r1, r17, #-1 /* MW 12 */
	  1101      "11111000" // /* MW 11 */
	  1102      "01111111" // /* MW 10 */
	  1103      "00100100" // /* MW 9 */
	  1104      "01010100" // /* MW 8 */
	  1105      "10000100" // /* MW 7 */
	  1106      "00000010" // /* MW 6 */
	  1107      "01010100" // /* MW 5 */
	  1108      "11111001" // /* MW 4 */
	  1109      "01001111" // /* MW 3 */
	  1110      "11100100" // /* MW 2 */
	  1111      "00000000" // /* MW 1 */
	  1112      "01110111" // 	MOVA r23, #5;                                               ST r8, [sp, #-48];            SUB r3, r2, r3;               MOV r22, #4 /* MW 12 */
	  1113      "01001000" // /* MW 11 */
	  1114      "00001011" // /* MW 10 */
	  1115      "11000000" // /* MW 9 */
	  1116      "10001110" // /* MW 8 */
	  1117      "00110001" // /* MW 7 */
	  1118      "00000100" // /* MW 6 */
	  1119      "01010000" // /* MW 5 */
	  1120      "11111010" // /* MW 4 */
	  1121      "11001111" // /* MW 3 */
	  1122      "10100101" // /* MW 2 */
	  1123      "00000000" // /* MW 1 */
	  1124      "00111011" // 	                                                            ST r3, [sp, #-60];            LSHL r0, r0, r20;             MOV r9, #0 /* MW 10 */
	  1125      "01001001" // /* MW 9 */
	  1126      "00000011" // /* MW 8 */
	  1127      "00100000" // /* MW 7 */
	  1128      "01101101" // /* MW 6 */
	  1129      "00001010" // /* MW 5 */
	  1130      "00000000" // /* MW 4 */
	  1131      "11000000" // /* MW 3 */
	  1132      "00011000" // /* MW 2 */
	  1133      "11111111" // /* MW 1 */
	  1134      "01000011" // 	                                                                                          LSHL r5, r16, r5;             MOV m1, r0 /* MW 8 */
	  1135      "00101000" // /* MW 7 */
	  1136      "00001011" // /* MW 6 */
	  1137      "00110000" // /* MW 5 */
	  1138      "11101100" // /* MW 4 */
	  1139      "01010010" // /* MW 3 */
	  1140      "00100000" // /* MW 2 */
	  1141      "00000000" // /* MW 1 */
	  1142      "10111101" // 	                                                            ST r5, [sp, #-64];            LSHL r4, r4, r19 /* MW 6 */
	  1143      "00111101" // /* MW 5 */
	  1144      "00001001" // /* MW 4 */
	  1145      "01000001" // /* MW 3 */
	  1146      "00001001" // /* MW 2 */
	  1147      "11111111" // /* MW 1 */
	  1148      "00111011" // 	                                                            ST r4, [sp, #-72];            MOVXM ls, #1376 /* MW 10 */
	  1149      "00010001" // /* MW 9 */
	  1150      "10110000" // /* MW 8 */
	  1151      "00111010" // /* MW 7 */
	  1152      "00000000" // /* MW 6 */
	  1153      "00000000" // /* MW 5 */
	  1154      "00000000" // /* MW 4 */
	  1155      "00000000" // /* MW 3 */
	  1156      "11101001" // /* MW 2 */
	  1157      "11111110" // /* MW 1 */
	  1158      "01010101" // 	                                                                                          MOVXM le, #1552 /* MW 6 */
	  1159      "00100000" // /* MW 5 */
	  1160      "11101100" // /* MW 4 */
	  1161      "00001000" // /* MW 3 */
	  1162      "00000000" // /* MW 2 */
	  1163      "00000000" // /* MW 1 */
	  1164      "01010101" // 	                                                                                          MOVXM p7, #1184 /* MW 6 */
	  1165      "01000000" // /* MW 5 */
	  1166      "01101001" // /* MW 4 */
	  1167      "00001110" // /* MW 3 */
	  1168      "00000000" // /* MW 2 */
	  1169      "00000000" // /* MW 1 */
	  1170      "01111111" // 	NOPA;                         NOPB;                         NOPS;                         MOVXM p6, #1248 /* MW 14 */
	  1171      "00000000" // /* MW 13 */
	  1172      "00000000" // /* MW 12 */
	  1173      "00000000" // /* MW 11 */
	  1174      "00000010" // /* MW 10 */
	  1175      "01001110" // /* MW 9 */
	  1176      "01100011" // /* MW 8 */
	  1177      "00000000" // /* MW 7 */
	  1178      "00000000" // /* MW 6 */
	  1179      "00000000" // /* MW 5 */
	  1180      "00000000" // /* MW 4 */
	  1181      "00000000" // /* MW 3 */
	  1182      "00000000" // /* MW 2 */
	  1183      "00000000" // /* MW 1 */
.label TGT_Fconv2dk1_224
.loop_nesting 1
	  1184      "10010101" // 	                                                                                          JNZ r10, #1728 /* MW 6 */
	  1185      "00000001" // /* MW 5 */
	  1186      "01000000" // /* MW 4 */
	  1187      "01100000" // /* MW 3 */
	  1188      "00000011" // /* MW 2 */
	  1189      "01010000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1190      "00000001" // 	NOPX /* MW 2 */
	  1191      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1192      "00000001" // 	NOPX /* MW 2 */
	  1193      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1194      "00000001" // 	NOPX /* MW 2 */
	  1195      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1196      "00000001" // 	NOPX /* MW 2 */
	  1197      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1198      "00000001" // 	NOPX /* MW 2 */
	  1199      "00000000" // /* MW 1 */
	  1200      "01001101" // 	LDA r4, [sp, #-52];                                                                                                     MOV dn1, dn0 /* MW 6 */
	  1201      "01010110" // /* MW 5 */
	  1202      "01100100" // /* MW 4 */
	  1203      "00001010" // /* MW 3 */
	  1204      "00111001" // /* MW 2 */
	  1205      "11111111" // /* MW 1 */
	  1206      "00011001" // 	                                                            ST r1, [sp, #-80] /* MW 4 */
	  1207      "01000010" // /* MW 3 */
	  1208      "11110110" // /* MW 2 */
	  1209      "00001111" // /* MW 1 */
	  1210      "10011001" // 	                                                            ST p2, [sp, #-76] /* MW 4 */
	  1211      "11010110" // /* MW 3 */
	  1212      "11110110" // /* MW 2 */
	  1213      "00001111" // /* MW 1 */
	  1214      "00011001" // 	                                                            ST r2, [sp, #-92] /* MW 4 */
	  1215      "11000100" // /* MW 3 */
	  1216      "11110100" // /* MW 2 */
	  1217      "00001111" // /* MW 1 */
	  1218      "00011001" // 	                                                            ST r9, [sp, #-84] /* MW 4 */
	  1219      "11010010" // /* MW 3 */
	  1220      "11110101" // /* MW 2 */
	  1221      "00001111" // /* MW 1 */
	  1222      "00000001" // 	NOPX /* MW 2 */
	  1223      "00000000" // /* MW 1 */
	  1224      "00100011" // 	NOPA;                                                                                                                                                           NOPV /* MW 8 */
	  1225      "01111000" // /* MW 7 */
	  1226      "00000000" // /* MW 6 */
	  1227      "00000000" // /* MW 5 */
	  1228      "00000100" // /* MW 4 */
	  1229      "00000000" // /* MW 3 */
	  1230      "00000000" // /* MW 2 */
	  1231      "00000000" // /* MW 1 */
.label TGT_Fconv2dk1_272
.loop_nesting 2
	  1232      "00111011" // 	                                                            ST r4, [sp, #-96];            MOVX r4, #0;                  MOV r1, #7 /* MW 10 */
	  1233      "11001001" // /* MW 9 */
	  1234      "00001111" // /* MW 8 */
	  1235      "00100000" // /* MW 7 */
	  1236      "00001000" // /* MW 6 */
	  1237      "01000000" // /* MW 5 */
	  1238      "00000000" // /* MW 4 */
	  1239      "00000000" // /* MW 3 */
	  1240      "10001001" // /* MW 2 */
	  1241      "11111110" // /* MW 1 */
	  1242      "00110101" // 	NOPA;                                                       ST dn1, [sp, #-88] /* MW 6 */
	  1243      "01010011" // /* MW 5 */
	  1244      "11110101" // /* MW 4 */
	  1245      "00000111" // /* MW 3 */
	  1246      "00000000" // /* MW 2 */
	  1247      "00000000" // /* MW 1 */
.label TGT_Fconv2dk1_288
.loop_nesting 3
	  1248      "10010101" // 	                                                                                          JNZ r8, #1600 /* MW 6 */
	  1249      "00000001" // /* MW 5 */
	  1250      "01000000" // /* MW 4 */
	  1251      "00100000" // /* MW 3 */
	  1252      "00000011" // /* MW 2 */
	  1253      "01000000" // /* MW 1 */
.delay_slot
	  1254      "00011001" // 	                                                                                          MOVX r25, #0 /* MW 4 */
	  1255      "00000001" // /* MW 3 */
	  1256      "00110010" // /* MW 2 */
	  1257      "00010000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1258      "00000001" // 	NOPX /* MW 2 */
	  1259      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1260      "00000001" // 	NOPX /* MW 2 */
	  1261      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1262      "00000001" // 	NOPX /* MW 2 */
	  1263      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1264      "00000001" // 	NOPX /* MW 2 */
	  1265      "00000000" // /* MW 1 */
	  1266      "10111011" // 	LDA r8, [sp, #-84];                                                                       ADD r6, r6, #8;               MOV r3, p2 /* MW 10 */
	  1267      "00101000" // /* MW 9 */
	  1268      "00111011" // /* MW 8 */
	  1269      "01100010" // /* MW 7 */
	  1270      "00011000" // /* MW 6 */
	  1271      "01100001" // /* MW 5 */
	  1272      "00001100" // /* MW 4 */
	  1273      "00001000" // /* MW 3 */
	  1274      "10111010" // /* MW 2 */
	  1275      "11111110" // /* MW 1 */
	  1276      "01101101" // 	LDA r9, [sp, #-68];                                                                                                     ADD.NC r7, r6, #8 /* MW 6 */
	  1277      "00010110" // /* MW 5 */
	  1278      "11000011" // /* MW 4 */
	  1279      "01001001" // /* MW 3 */
	  1280      "11111010" // /* MW 2 */
	  1281      "11111110" // /* MW 1 */
	  1282      "01101101" // 	LDA p6, [sp, #-44];                                                                                                     ADD.NC r11, r7, #8 /* MW 6 */
	  1283      "10010110" // /* MW 5 */
	  1284      "11000011" // /* MW 4 */
	  1285      "11011010" // /* MW 3 */
	  1286      "01011110" // /* MW 2 */
	  1287      "11111111" // /* MW 1 */
	  1288      "01101101" // 	LDA r2, [sp, #-92];                                                                                                     ADD.NC r10, r11, #8 /* MW 6 */
	  1289      "10010110" // /* MW 5 */
	  1290      "10000101" // /* MW 4 */
	  1291      "10001010" // /* MW 3 */
	  1292      "10011000" // /* MW 2 */
	  1293      "11111110" // /* MW 1 */
	  1294      "10111011" // 	LDA r5, [sp, #-88];                                                                       ADD r10, r10, #8;             MOV p7, r10 /* MW 10 */
	  1295      "00101000" // /* MW 9 */
	  1296      "10001011" // /* MW 8 */
	  1297      "10011010" // /* MW 7 */
	  1298      "00011011" // /* MW 6 */
	  1299      "10100001" // /* MW 5 */
	  1300      "00010100" // /* MW 4 */
	  1301      "01001000" // /* MW 3 */
	  1302      "10101001" // /* MW 2 */
	  1303      "11111110" // /* MW 1 */
	  1304      "01111001" // 	                                                                                                                        ADD.NC r12, r10, #8 /* MW 4 */
	  1305      "00010110" // /* MW 3 */
	  1306      "00000101" // /* MW 2 */
	  1307      "00011011" // /* MW 1 */
	  1308      "01000011" // 	                                                                                          ADD r10, r12, #8;             MOV p2, r10 /* MW 8 */
	  1309      "00101000" // /* MW 7 */
	  1310      "10001011" // /* MW 6 */
	  1311      "00011010" // /* MW 5 */
	  1312      "00011001" // /* MW 4 */
	  1313      "10100001" // /* MW 3 */
	  1314      "00011000" // /* MW 2 */
	  1315      "00000000" // /* MW 1 */
	  1316      "01000011" // 	                                                                                          ADD r8, r4, r8;               MOV p1, r12 /* MW 8 */
	  1317      "00101000" // /* MW 7 */
	  1318      "00001011" // /* MW 6 */
	  1319      "10011011" // /* MW 5 */
	  1320      "00000100" // /* MW 4 */
	  1321      "10000100" // /* MW 3 */
	  1322      "00001000" // /* MW 2 */
	  1323      "00000000" // /* MW 1 */
	  1324      "01000011" // 	                                                                                          ADD r6, r6, r8;               MOV m2, r8 /* MW 8 */
	  1325      "00101000" // /* MW 7 */
	  1326      "00001011" // /* MW 6 */
	  1327      "01010010" // /* MW 5 */
	  1328      "00000100" // /* MW 4 */
	  1329      "01100100" // /* MW 3 */
	  1330      "00001100" // /* MW 2 */
	  1331      "00000000" // /* MW 1 */
	  1332      "01111111" // 	PADDA [p2], m2;               PADDB [p7], m2;               PADDS [p6], m2;               ADD r7, r7, r8;               MOV p0, r11 /* MW 14 */
	  1333      "00101000" // /* MW 13 */
	  1334      "00000110" // /* MW 12 */
	  1335      "11001001" // /* MW 11 */
	  1336      "01100101" // /* MW 10 */
	  1337      "01011001" // /* MW 9 */
	  1338      "10000011" // /* MW 8 */
	  1339      "10000000" // /* MW 7 */
	  1340      "11001110" // /* MW 6 */
	  1341      "00001001" // /* MW 5 */
	  1342      "01001011" // /* MW 4 */
	  1343      "00110111" // /* MW 3 */
	  1344      "00000110" // /* MW 2 */
	  1345      "01001001" // /* MW 1 */
	  1346      "10110111" // 	PADDA [p0], m2;               PADDB [p1], m2;                                             ADD r9, r10, r8;              MOV lc, r9 /* MW 12 */
	  1347      "00101000" // /* MW 11 */
	  1348      "01001011" // /* MW 10 */
	  1349      "10111010" // /* MW 9 */
	  1350      "00000110" // /* MW 8 */
	  1351      "10010100" // /* MW 7 */
	  1352      "00010100" // /* MW 6 */
	  1353      "00001000" // /* MW 5 */
	  1354      "01001011" // /* MW 4 */
	  1355      "00110001" // /* MW 3 */
	  1356      "00000110" // /* MW 2 */
	  1357      "00001001" // /* MW 1 */
	  1358      "01011001" // 	                                                                                                                        MOV p3, r7 /* MW 4 */
	  1359      "10010110" // /* MW 3 */
	  1360      "00110011" // /* MW 2 */
	  1361      "00011011" // /* MW 1 */
	  1362      "00101111" // 	NOPA;                                                       NOPS;                                                       MOV p4, r6;                             NOPV /* MW 14 */
	  1363      "01111000" // /* MW 13 */
	  1364      "00000000" // /* MW 12 */
	  1365      "00000000" // /* MW 11 */
	  1366      "10110010" // /* MW 10 */
	  1367      "10011000" // /* MW 9 */
	  1368      "01100001" // /* MW 8 */
	  1369      "00000000" // /* MW 7 */
	  1370      "00000000" // /* MW 6 */
	  1371      "00000000" // /* MW 5 */
	  1372      "00000000" // /* MW 4 */
	  1373      "00000000" // /* MW 3 */
	  1374      "00000000" // /* MW 2 */
	  1375      "00000000" // /* MW 1 */
.label ZLS_Fconv2dk1_416
.begin_of_loop
.loop_nesting 4
	  1376      "10111011" // 	LDA.s8 r14, [p6], m0;                                                                     OR r13, r2, r16;              MOV p5, r5 /* MW 10 */
	  1377      "00101000" // /* MW 9 */
	  1378      "01001011" // /* MW 8 */
	  1379      "10011001" // /* MW 7 */
	  1380      "00101110" // /* MW 6 */
	  1381      "11011000" // /* MW 5 */
	  1382      "00000100" // /* MW 4 */
	  1383      "10111000" // /* MW 3 */
	  1384      "00000011" // /* MW 2 */
	  1385      "11000001" // /* MW 1 */
	  1386      "10111011" // 	LDA.s8 r13, [p5], m1;                                                                     OR r28, r21, r2;              MOV dj2, r13 /* MW 10 */
	  1387      "00101000" // /* MW 9 */
	  1388      "01001011" // /* MW 8 */
	  1389      "01010011" // /* MW 7 */
	  1390      "00101110" // /* MW 6 */
	  1391      "11000001" // /* MW 5 */
	  1392      "00101011" // /* MW 4 */
	  1393      "01111000" // /* MW 3 */
	  1394      "00000011" // /* MW 2 */
	  1395      "10100101" // /* MW 1 */
	  1396      "10111011" // 	LDA.s8 r30, [p4], m0;                                                                     OR r15, r2, r20;              MOV r5, p5 /* MW 10 */
	  1397      "00101000" // /* MW 9 */
	  1398      "00111011" // /* MW 8 */
	  1399      "10100101" // /* MW 7 */
	  1400      "00101100" // /* MW 6 */
	  1401      "11111010" // /* MW 5 */
	  1402      "00000100" // /* MW 4 */
	  1403      "10111000" // /* MW 3 */
	  1404      "00000111" // /* MW 2 */
	  1405      "10000001" // /* MW 1 */
	  1406      "10111011" // 	LDA.s8 r26, [p3], m0;                                                                     OR r24, r22, r2;              MOV p5, r18 /* MW 10 */
	  1407      "00101000" // /* MW 9 */
	  1408      "10001011" // /* MW 8 */
	  1409      "10011100" // /* MW 7 */
	  1410      "00101110" // /* MW 6 */
	  1411      "10000001" // /* MW 5 */
	  1412      "00101101" // /* MW 4 */
	  1413      "10111000" // /* MW 3 */
	  1414      "00000110" // /* MW 2 */
	  1415      "01100001" // /* MW 1 */
	  1416      "10111011" // 	LDA.s8 r27, [p5, dj2];                                                                    OR r28, r23, r2;              MOV dj3, r28 /* MW 10 */
	  1417      "00101000" // /* MW 9 */
	  1418      "00001011" // /* MW 8 */
	  1419      "01110111" // /* MW 7 */
	  1420      "00101110" // /* MW 6 */
	  1421      "11000001" // /* MW 5 */
	  1422      "00101111" // /* MW 4 */
	  1423      "11111000" // /* MW 3 */
	  1424      "00000110" // /* MW 2 */
	  1425      "10101010" // /* MW 1 */
	  1426      "10111011" // 	LDA.s8 r29, [p5, dj3];                                                                    OR r15, r19, r2;              MOV dj4, r15 /* MW 10 */
	  1427      "00101000" // /* MW 9 */
	  1428      "11001011" // /* MW 8 */
	  1429      "10010011" // /* MW 7 */
	  1430      "00101110" // /* MW 6 */
	  1431      "11110001" // /* MW 5 */
	  1432      "00100110" // /* MW 4 */
	  1433      "01111000" // /* MW 3 */
	  1434      "00000111" // /* MW 2 */
	  1435      "10101110" // /* MW 1 */
	  1436      "10111011" // 	LDA.s8 r24, [p5, dj4];                                                                    OR r31, r17, r2;              MOV dj5, r24 /* MW 10 */
	  1437      "00101000" // /* MW 9 */
	  1438      "00001011" // /* MW 8 */
	  1439      "10110110" // /* MW 7 */
	  1440      "00101110" // /* MW 6 */
	  1441      "11110001" // /* MW 5 */
	  1442      "00100011" // /* MW 4 */
	  1443      "00111000" // /* MW 3 */
	  1444      "00000110" // /* MW 2 */
	  1445      "10110010" // /* MW 1 */
	  1446      "10111011" // 	LDA.s8 r28, [p0], m0;                                                                     ADD r2, r2, r0;               MOV dj1, r28 /* MW 10 */
	  1447      "00101000" // /* MW 9 */
	  1448      "00001011" // /* MW 8 */
	  1449      "00110111" // /* MW 7 */
	  1450      "00000110" // /* MW 6 */
	  1451      "00100000" // /* MW 5 */
	  1452      "00000100" // /* MW 4 */
	  1453      "00111000" // /* MW 3 */
	  1454      "00000111" // /* MW 2 */
	  1455      "00000001" // /* MW 1 */
	  1456      "10111011" // 	LDA.s8 r14, [p5, dj5];                                                                    MUL r13, r13, r14;            MOV dj0, r15 /* MW 10 */
	  1457      "00101000" // /* MW 9 */
	  1458      "11001011" // /* MW 8 */
	  1459      "00010011" // /* MW 7 */
	  1460      "01111110" // /* MW 6 */
	  1461      "11010111" // /* MW 5 */
	  1462      "00011010" // /* MW 4 */
	  1463      "10111000" // /* MW 3 */
	  1464      "00000011" // /* MW 2 */
	  1465      "10110110" // /* MW 1 */
	  1466      "01001101" // 	LDA.s8 r11, [p7], m0;                                                                                                   MOV dj6, r31 /* MW 6 */
	  1467      "10010110" // /* MW 5 */
	  1468      "10101111" // /* MW 4 */
	  1469      "11111101" // /* MW 3 */
	  1470      "00000010" // /* MW 2 */
	  1471      "11100001" // /* MW 1 */
	  1472      "10011101" // 	LDA.s8 r31, [p5, dj1];                                                                    ADD r15, r13, r25 /* MW 6 */
	  1473      "10010000" // /* MW 5 */
	  1474      "01011111" // /* MW 4 */
	  1475      "11111011" // /* MW 3 */
	  1476      "00000111" // /* MW 2 */
	  1477      "10100110" // /* MW 1 */
	  1478      "10011101" // 	LDA.s8 r8, [p2], m0;                                                                      MUL r27, r27, r30 /* MW 6 */
	  1479      "11101111" // /* MW 5 */
	  1480      "11110111" // /* MW 4 */
	  1481      "00111110" // /* MW 3 */
	  1482      "00000010" // /* MW 2 */
	  1483      "01000001" // /* MW 1 */
	  1484      "10011101" // 	LDA.s8 r12, [p5, dj0];                                                                    MUL r26, r29, r26 /* MW 6 */
	  1485      "10101111" // /* MW 5 */
	  1486      "01110101" // /* MW 4 */
	  1487      "00111111" // /* MW 3 */
	  1488      "00000011" // /* MW 2 */
	  1489      "10100010" // /* MW 1 */
	  1490      "01001101" // 	LDA.s8 r29, [p5, dj6];                                                                                                  MOV p5, r9 /* MW 6 */
	  1491      "10010110" // /* MW 5 */
	  1492      "00110100" // /* MW 4 */
	  1493      "01111101" // /* MW 3 */
	  1494      "00000111" // /* MW 2 */
	  1495      "10111010" // /* MW 1 */
	  1496      "10011101" // 	LDA.s8 r27, [p1], m0;                                                                     ADD r10, r15, r27 /* MW 6 */
	  1497      "10110000" // /* MW 5 */
	  1498      "11010101" // /* MW 4 */
	  1499      "11111011" // /* MW 3 */
	  1500      "00000110" // /* MW 2 */
	  1501      "00100001" // /* MW 1 */
	  1502      "10011101" // 	LDA.s8 r7, [p5], m0;                                                                      MUL r6, r28, r24 /* MW 6 */
	  1503      "10001111" // /* MW 5 */
	  1504      "00001101" // /* MW 4 */
	  1505      "11111111" // /* MW 3 */
	  1506      "00000001" // /* MW 2 */
	  1507      "10100001" // /* MW 1 */
	  1508      "01000011" // 	                                                                                          MUL r11, r11, r14;            MOV r9, p5 /* MW 8 */
	  1509      "00101000" // /* MW 7 */
	  1510      "00111011" // /* MW 6 */
	  1511      "00100101" // /* MW 5 */
	  1512      "01111101" // /* MW 4 */
	  1513      "10110111" // /* MW 3 */
	  1514      "00010110" // /* MW 2 */
	  1515      "00000000" // /* MW 1 */
	  1516      "00000001" // 	NOPX /* MW 2 */
	  1517      "00000000" // /* MW 1 */
	  1518      "10011001" // 	                                                                                          ADD r10, r26, r10 /* MW 4 */
	  1519      "10100000" // /* MW 3 */
	  1520      "10010100" // /* MW 2 */
	  1521      "00010110" // /* MW 1 */
	  1522      "10011001" // 	                                                                                          ADD r6, r6, r10 /* MW 4 */
	  1523      "10100000" // /* MW 3 */
	  1524      "10001100" // /* MW 2 */
	  1525      "00010001" // /* MW 1 */
	  1526      "10011001" // 	                                                                                          MUL r8, r31, r8 /* MW 4 */
	  1527      "10001111" // /* MW 3 */
	  1528      "11010000" // /* MW 2 */
	  1529      "00010111" // /* MW 1 */
	  1530      "10011001" // 	                                                                                          MUL r10, r27, r12 /* MW 4 */
	  1531      "11001111" // /* MW 3 */
	  1532      "11010100" // /* MW 2 */
	  1533      "00010110" // /* MW 1 */
	  1534      "10011001" // 	                                                                                          MUL r7, r7, r29 /* MW 4 */
	  1535      "11011111" // /* MW 3 */
	  1536      "11001111" // /* MW 2 */
	  1537      "00010001" // /* MW 1 */
	  1538      "00000001" // 	NOPX /* MW 2 */
	  1539      "00000000" // /* MW 1 */
	  1540      "10011001" // 	                                                                                          ADD r6, r11, r6 /* MW 4 */
	  1541      "01100000" // /* MW 3 */
	  1542      "11001100" // /* MW 2 */
	  1543      "00010010" // /* MW 1 */
	  1544      "10011001" // 	                                                                                          ADD r6, r6, r8 /* MW 4 */
	  1545      "10000000" // /* MW 3 */
	  1546      "10001100" // /* MW 2 */
	  1547      "00010001" // /* MW 1 */
	  1548      "10011001" // 	                                                                                          ADD r6, r6, r10 /* MW 4 */
	  1549      "10100000" // /* MW 3 */
	  1550      "10001100" // /* MW 2 */
	  1551      "00010001" // /* MW 1 */
.label ZLE_Fconv2dk1_592
.end_of_loop
	  1552      "11000000" // 	NOPA;                         NOPB;                         NOPS;                         ADD r25, r7, r6;              NOPM;                                   NOPV /* MW 16 */
	  1553      "00000011" // /* MW 15 */
	  1554      "00000000" // /* MW 14 */
	  1555      "10001000" // /* MW 13 */
	  1556      "00000011" // /* MW 12 */
	  1557      "00000000" // /* MW 11 */
	  1558      "00000100" // /* MW 10 */
	  1559      "10010011" // /* MW 9 */
	  1560      "00001111" // /* MW 8 */
	  1561      "00000000" // /* MW 7 */
	  1562      "00000000" // /* MW 6 */
	  1563      "00000000" // /* MW 5 */
	  1564      "00000000" // /* MW 4 */
	  1565      "00000000" // /* MW 3 */
	  1566      "00000000" // /* MW 2 */
	  1567      "00000000" // /* MW 1 */
.loop_nesting 3
	  1568      "10111011" // 	LDA r5, [sp, #-64];                                                                       MOVX r2, #0;                  MOV p2, r3 /* MW 10 */
	  1569      "00101000" // /* MW 9 */
	  1570      "11001011" // /* MW 8 */
	  1571      "00011000" // /* MW 7 */
	  1572      "00001001" // /* MW 6 */
	  1573      "00100000" // /* MW 5 */
	  1574      "00000000" // /* MW 4 */
	  1575      "01001000" // /* MW 3 */
	  1576      "00001001" // /* MW 2 */
	  1577      "11111111" // /* MW 1 */
	  1578      "00011101" // 	LDA r3, [sp, #-60];                                                                       MOVX r7, #255 /* MW 6 */
	  1579      "11111101" // /* MW 5 */
	  1580      "11001110" // /* MW 4 */
	  1581      "11001000" // /* MW 3 */
	  1582      "00011000" // /* MW 2 */
	  1583      "11111111" // /* MW 1 */
	  1584      "10111011" // 	LDA r6, [sp, #-44];                                                                       MOVXM p6, #1248 /* MW 10 */
	  1585      "00010000" // /* MW 9 */
	  1586      "01110000" // /* MW 8 */
	  1587      "00011010" // /* MW 7 */
	  1588      "00000011" // /* MW 6 */
	  1589      "00000000" // /* MW 5 */
	  1590      "00000000" // /* MW 4 */
	  1591      "10001000" // /* MW 3 */
	  1592      "01011001" // /* MW 2 */
	  1593      "11111111" // /* MW 1 */
	  1594      "01111101" // 	LDA r8, [sp, #-48];           NOPB /* MW 6 */
	  1595      "00000000" // /* MW 5 */
	  1596      "00000000" // /* MW 4 */
	  1597      "00001000" // /* MW 3 */
	  1598      "01001010" // /* MW 2 */
	  1599      "11111111" // /* MW 1 */
.label TGT_Fconv2dk1_640
	  1600      "00000001" // 	NOPX /* MW 2 */
	  1601      "00000000" // /* MW 1 */
	  1602      "00000001" // 	NOPX /* MW 2 */
	  1603      "00000000" // /* MW 1 */
	  1604      "00000001" // 	NOPX /* MW 2 */
	  1605      "00000000" // /* MW 1 */
	  1606      "10011001" // 	                                                                                          ADD r9, r5, r25 /* MW 4 */
	  1607      "10010000" // /* MW 3 */
	  1608      "01010011" // /* MW 2 */
	  1609      "00010001" // /* MW 1 */
	  1610      "00011001" // 	                                                                                          JNZD r1, r1, p6 /* MW 4 */
	  1611      "10001100" // /* MW 3 */
	  1612      "01000011" // /* MW 2 */
	  1613      "00010000" // /* MW 1 */
.delay_slot
	  1614      "10011001" // 	                                                                                          ASHL r9, r9, r3 /* MW 4 */
	  1615      "00111110" // /* MW 3 */
	  1616      "01010010" // /* MW 2 */
	  1617      "00010010" // /* MW 1 */
.delay_slot
	  1618      "10011001" // 	                                                                                          LT r27, r2, r9 /* MW 4 */
	  1619      "10011010" // /* MW 3 */
	  1620      "10110110" // /* MW 2 */
	  1621      "00010000" // /* MW 1 */
.delay_slot
	  1622      "00011001" // 	                                                                                          SEL.EQZ r9, r2, r9, r27 /* MW 4 */
	  1623      "10010110" // /* MW 3 */
	  1624      "10010010" // /* MW 2 */
	  1625      "00010000" // /* MW 1 */
.delay_slot
	  1626      "10011001" // 	                                                                                          LT r27, r9, r7 /* MW 4 */
	  1627      "01111010" // /* MW 3 */
	  1628      "01110110" // /* MW 2 */
	  1629      "00010010" // /* MW 1 */
.delay_slot
	  1630      "10111011" // 	ST.s8 r9, [p2], #1;                                                                       SEL.EQZ r9, r7, r9, r27;      ADD.NC r4, r4, #1 /* MW 10 */
	  1631      "01111000" // /* MW 9 */
	  1632      "00000011" // /* MW 8 */
	  1633      "10000001" // /* MW 7 */
	  1634      "10110000" // /* MW 6 */
	  1635      "10010100" // /* MW 5 */
	  1636      "00001110" // /* MW 4 */
	  1637      "01000000" // /* MW 3 */
	  1638      "10100010" // /* MW 2 */
	  1639      "01000010" // /* MW 1 */
.loop_nesting 2
	  1640      "10111011" // 	LDA r4, [sp, #-96];                                                                       MOVXM p7, #1232 /* MW 10 */
	  1641      "00010000" // /* MW 9 */
	  1642      "01101000" // /* MW 8 */
	  1643      "10011010" // /* MW 7 */
	  1644      "00000011" // /* MW 6 */
	  1645      "00000000" // /* MW 5 */
	  1646      "00000000" // /* MW 4 */
	  1647      "00001000" // /* MW 3 */
	  1648      "10001001" // /* MW 2 */
	  1649      "11111110" // /* MW 1 */
	  1650      "01011001" // 	LDA r1, [sp, #-92] /* MW 4 */
	  1651      "11000010" // /* MW 3 */
	  1652      "11110100" // /* MW 2 */
	  1653      "00000111" // /* MW 1 */
	  1654      "01011001" // 	LDA r9, [sp, #-88] /* MW 4 */
	  1655      "01010010" // /* MW 3 */
	  1656      "11110101" // /* MW 2 */
	  1657      "00000111" // /* MW 1 */
	  1658      "00000001" // 	NOPX /* MW 2 */
	  1659      "00000000" // /* MW 1 */
	  1660      "00000001" // 	NOPX /* MW 2 */
	  1661      "00000000" // /* MW 1 */
	  1662      "00000001" // 	NOPX /* MW 2 */
	  1663      "00000000" // /* MW 1 */
	  1664      "00000001" // 	NOPX /* MW 2 */
	  1665      "00000000" // /* MW 1 */
	  1666      "00011001" // 	                                                                                          JNZD r4, r4, p7 /* MW 4 */
	  1667      "11001100" // /* MW 3 */
	  1668      "00001001" // /* MW 2 */
	  1669      "00010001" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1670      "00000001" // 	NOPX /* MW 2 */
	  1671      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1672      "00000001" // 	NOPX /* MW 2 */
	  1673      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1674      "00000001" // 	NOPX /* MW 2 */
	  1675      "00000000" // /* MW 1 */
.delay_slot
	  1676      "01111001" // 	                                                                                                                        ADD.NC r1, r1, #8 /* MW 4 */
	  1677      "10010110" // /* MW 3 */
	  1678      "01000000" // /* MW 2 */
	  1679      "00011000" // /* MW 1 */
.delay_slot
	  1680      "00000011" // 	                                                            ST r1, [sp, #-92];                                          ADD.NC dn1, r9, #8 /* MW 8 */
	  1681      "00110000" // /* MW 7 */
	  1682      "01001011" // /* MW 6 */
	  1683      "00110010" // /* MW 5 */
	  1684      "00000001" // /* MW 4 */
	  1685      "01000000" // /* MW 3 */
	  1686      "10011000" // /* MW 2 */
	  1687      "11111110" // /* MW 1 */
.loop_nesting 1
	  1688      "10111011" // 	LDA r10, [sp, #-56];                                                                      MOVXM p7, #1184 /* MW 10 */
	  1689      "00010000" // /* MW 9 */
	  1690      "01010000" // /* MW 8 */
	  1691      "10011010" // /* MW 7 */
	  1692      "00000011" // /* MW 6 */
	  1693      "00000000" // /* MW 5 */
	  1694      "00000000" // /* MW 4 */
	  1695      "10001000" // /* MW 3 */
	  1696      "00101010" // /* MW 2 */
	  1697      "11111111" // /* MW 1 */
	  1698      "01011001" // 	LDA r1, [sp, #-80] /* MW 4 */
	  1699      "01000010" // /* MW 3 */
	  1700      "11110110" // /* MW 2 */
	  1701      "00000111" // /* MW 1 */
	  1702      "01011001" // 	LDA r9, [sp, #-84] /* MW 4 */
	  1703      "11010010" // /* MW 3 */
	  1704      "11110101" // /* MW 2 */
	  1705      "00000111" // /* MW 1 */
	  1706      "01111101" // 	LDA p2, [sp, #-76];           NOPB /* MW 6 */
	  1707      "00000000" // /* MW 5 */
	  1708      "00000000" // /* MW 4 */
	  1709      "11011000" // /* MW 3 */
	  1710      "11011010" // /* MW 2 */
	  1711      "11111110" // /* MW 1 */
	  1712      "11000000" // 	LDA r4, [sp, #-72];           NOPB;                         NOPS;                         NOPX;                         NOPM;                                   NOPV /* MW 16 */
	  1713      "00000011" // /* MW 15 */
	  1714      "00000000" // /* MW 14 */
	  1715      "10001000" // /* MW 13 */
	  1716      "00000011" // /* MW 12 */
	  1717      "00000000" // /* MW 11 */
	  1718      "00000000" // /* MW 10 */
	  1719      "00000000" // /* MW 9 */
	  1720      "00000000" // /* MW 8 */
	  1721      "00000000" // /* MW 7 */
	  1722      "00000000" // /* MW 6 */
	  1723      "00001000" // /* MW 5 */
	  1724      "11101001" // /* MW 4 */
	  1725      "11111110" // /* MW 3 */
	  1726      "00000000" // /* MW 2 */
	  1727      "00000000" // /* MW 1 */
.label TGT_Fconv2dk1_768
	  1728      "00000001" // 	NOPX /* MW 2 */
	  1729      "00000000" // /* MW 1 */
	  1730      "00000001" // 	NOPX /* MW 2 */
	  1731      "00000000" // /* MW 1 */
	  1732      "00000001" // 	NOPX /* MW 2 */
	  1733      "00000000" // /* MW 1 */
	  1734      "00000001" // 	NOPX /* MW 2 */
	  1735      "00000000" // /* MW 1 */
	  1736      "00000001" // 	NOPX /* MW 2 */
	  1737      "00000000" // /* MW 1 */
	  1738      "00011001" // 	                                                                                          JNZD r1, r1, p7 /* MW 4 */
	  1739      "11001100" // /* MW 3 */
	  1740      "01000011" // /* MW 2 */
	  1741      "00010000" // /* MW 1 */
.delay_slot
	  1742      "10000101" // 	                              PADDB [p2], m1;                                             ADD r9, r9, r4 /* MW 6 */
	  1743      "01000000" // /* MW 5 */
	  1744      "01010010" // /* MW 4 */
	  1745      "00001010" // /* MW 3 */
	  1746      "00101011" // /* MW 2 */
	  1747      "00010010" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1748      "00000001" // 	NOPX /* MW 2 */
	  1749      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1750      "00000001" // 	NOPX /* MW 2 */
	  1751      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1752      "00000001" // 	NOPX /* MW 2 */
	  1753      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1754      "01111101" // 	NOPA;                         NOPB /* MW 6 */
	  1755      "00000000" // /* MW 5 */
	  1756      "00000000" // /* MW 4 */
	  1757      "00000000" // /* MW 3 */
	  1758      "00000000" // /* MW 2 */
	  1759      "00000000" // /* MW 1 */
.label TGT_Fconv2dk1_800
.loop_nesting 0
	  1760      "01011001" // 	LDA r18, [sp, #-40] /* MW 4 */
	  1761      "01100100" // /* MW 3 */
	  1762      "11111011" // /* MW 2 */
	  1763      "00000111" // /* MW 1 */
	  1764      "01011001" // 	LDA r23, [sp, #-36] /* MW 4 */
	  1765      "11101110" // /* MW 3 */
	  1766      "11111011" // /* MW 2 */
	  1767      "00000111" // /* MW 1 */
	  1768      "01011001" // 	LDA r21, [sp, #-32] /* MW 4 */
	  1769      "01101010" // /* MW 3 */
	  1770      "11111100" // /* MW 2 */
	  1771      "00000111" // /* MW 1 */
	  1772      "01011001" // 	LDA r22, [sp, #-28] /* MW 4 */
	  1773      "11101100" // /* MW 3 */
	  1774      "11111100" // /* MW 2 */
	  1775      "00000111" // /* MW 1 */
	  1776      "01011001" // 	LDA r17, [sp, #-24] /* MW 4 */
	  1777      "01100010" // /* MW 3 */
	  1778      "11111101" // /* MW 2 */
	  1779      "00000111" // /* MW 1 */
	  1780      "01011001" // 	LDA r20, [sp, #-20] /* MW 4 */
	  1781      "11101000" // /* MW 3 */
	  1782      "11111101" // /* MW 2 */
	  1783      "00000111" // /* MW 1 */
	  1784      "01011001" // 	LDA r19, [sp, #-16] /* MW 4 */
	  1785      "01100110" // /* MW 3 */
	  1786      "11111110" // /* MW 2 */
	  1787      "00000111" // /* MW 1 */
	  1788      "01011001" // 	LDA r16, [sp, #-12] /* MW 4 */
	  1789      "11100000" // /* MW 3 */
	  1790      "11111110" // /* MW 2 */
	  1791      "00000111" // /* MW 1 */
	  1792      "11011001" // 	LDA p7, [sp, #-8] /* MW 4 */
	  1793      "01111110" // /* MW 3 */
	  1794      "11111111" // /* MW 2 */
	  1795      "00000111" // /* MW 1 */
	  1796      "11011001" // 	LDA p6, [sp, #-4] /* MW 4 */
	  1797      "11110110" // /* MW 3 */
	  1798      "11111111" // /* MW 2 */
	  1799      "00000111" // /* MW 1 */
	  1800      "00011001" // 	                                                                                          RET lr /* MW 4 */
	  1801      "00011000" // /* MW 3 */
	  1802      "00000000" // /* MW 2 */
	  1803      "00010000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1804      "00000001" // 	NOPX /* MW 2 */
	  1805      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1806      "00000001" // 	NOPX /* MW 2 */
	  1807      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1808      "00000001" // 	NOPX /* MW 2 */
	  1809      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1810      "00000001" // 	NOPX /* MW 2 */
	  1811      "00000000" // /* MW 1 */
.delay_slot
	  1812      "00110111" // 	NOPA;                         PADDB [sp], #-96;             NOPS;                         EVENT #1 /* MW 12 */
	  1813      "00000001" // /* MW 11 */
	  1814      "00000000" // /* MW 10 */
	  1815      "00000000" // /* MW 9 */
	  1816      "10000000" // /* MW 8 */
	  1817      "00000000" // /* MW 7 */
	  1818      "00010000" // /* MW 6 */
	  1819      "10100000" // /* MW 5 */
	  1820      "11111111" // /* MW 4 */
	  1821      "00000111" // /* MW 3 */
	  1822      "00000000" // /* MW 2 */
.label conv2dk1__end
	  1823      "00000000" // /* MW 1 */
.label _fini
.function_start
	  1824      "01011001" // 	                                                                                                                        MOV r0, r23 /* MW 4 */
	  1825      "10010110" // /* MW 3 */
	  1826      "00001011" // /* MW 2 */
	  1827      "00011000" // /* MW 1 */
	  1828      "01010101" // 	                                                                                          MOVXM r24, #0 /* MW 6 */
	  1829      "00000000" // /* MW 5 */
	  1830      "00000000" // /* MW 4 */
	  1831      "00001100" // /* MW 3 */
	  1832      "00000000" // /* MW 2 */
	  1833      "00000000" // /* MW 1 */
	  1834      "01011001" // 	                                                                                                                        MOV p0, p7 /* MW 4 */
	  1835      "01110110" // /* MW 3 */
	  1836      "00111110" // /* MW 2 */
	  1837      "00011000" // /* MW 1 */
	  1838      "01010101" // 	                                                                                          MOVXM r23, #0 /* MW 6 */
	  1839      "00000000" // /* MW 5 */
	  1840      "10000000" // /* MW 4 */
	  1841      "00001011" // /* MW 3 */
	  1842      "00000000" // /* MW 2 */
	  1843      "00000000" // /* MW 1 */
	  1844      "01000011" // 	                                                                                          EQ r24, r23, r24;             MOV p7, r24 /* MW 8 */
	  1845      "00101000" // /* MW 7 */
	  1846      "00001011" // /* MW 6 */
	  1847      "10011110" // /* MW 5 */
	  1848      "00111111" // /* MW 4 */
	  1849      "10001100" // /* MW 3 */
	  1850      "00101111" // /* MW 2 */
	  1851      "00000000" // /* MW 1 */
	  1852      "10010101" // 	                                                                                          JNZ r24, #1952 /* MW 6 */
	  1853      "00000001" // /* MW 5 */
	  1854      "01000000" // /* MW 4 */
	  1855      "11010000" // /* MW 3 */
	  1856      "00000011" // /* MW 2 */
	  1857      "11000000" // /* MW 1 */
.delay_slot
	  1858      "00011001" // 	                              PADDB [sp], #32 /* MW 4 */
	  1859      "00100000" // /* MW 3 */
	  1860      "00000011" // /* MW 2 */
	  1861      "00111000" // /* MW 1 */
.delay_slot
	  1862      "00011001" // 	                                                            ST r22, [sp, #-4] /* MW 4 */
	  1863      "11101100" // /* MW 3 */
	  1864      "11111111" // /* MW 2 */
	  1865      "00001111" // /* MW 1 */
.delay_slot
	  1866      "10011001" // 	                                                            ST lr, [sp, #-16] /* MW 4 */
	  1867      "01000010" // /* MW 3 */
	  1868      "11111110" // /* MW 2 */
	  1869      "00001111" // /* MW 1 */
.delay_slot
	  1870      "00011001" // 	                                                            ST r0, [sp, #-12] /* MW 4 */
	  1871      "11000000" // /* MW 3 */
	  1872      "11111110" // /* MW 2 */
	  1873      "00001111" // /* MW 1 */
.delay_slot
	  1874      "00101111" // 	NOPA;                                                       ST p0, [sp, #-8];                                           NOPM;                                   NOPV /* MW 14 */
	  1875      "01111000" // /* MW 13 */
	  1876      "00000000" // /* MW 12 */
	  1877      "00000000" // /* MW 11 */
	  1878      "00111000" // /* MW 10 */
	  1879      "00000000" // /* MW 9 */
	  1880      "01000000" // /* MW 8 */
	  1881      "00000000" // /* MW 7 */
	  1882      "10000000" // /* MW 6 */
	  1883      "01000110" // /* MW 5 */
	  1884      "11111111" // /* MW 4 */
	  1885      "00000111" // /* MW 3 */
	  1886      "00000000" // /* MW 2 */
	  1887      "00000000" // /* MW 1 */
.label TGT_F_fini_64
.loop_nesting 1
	  1888      "11011001" // 	LDA p0, [p7], #4 /* MW 4 */
	  1889      "10000110" // /* MW 3 */
	  1890      "00000011" // /* MW 2 */
	  1891      "00000111" // /* MW 1 */
	  1892      "00000001" // 	NOPX /* MW 2 */
	  1893      "00000000" // /* MW 1 */
	  1894      "00000001" // 	NOPX /* MW 2 */
	  1895      "00000000" // /* MW 1 */
	  1896      "00000001" // 	NOPX /* MW 2 */
	  1897      "00000000" // /* MW 1 */
	  1898      "00000001" // 	NOPX /* MW 2 */
	  1899      "00000000" // /* MW 1 */
	  1900      "00000001" // 	NOPX /* MW 2 */
	  1901      "00000000" // /* MW 1 */
	  1902      "00000001" // 	NOPX /* MW 2 */
	  1903      "00000000" // /* MW 1 */
.no_stack_arguments
	  1904      "00011001" // 	                                                                                          JL p0 /* MW 4 */
	  1905      "00010100" // /* MW 3 */
	  1906      "00000000" // /* MW 2 */
	  1907      "00010000" // /* MW 1 */
.delay_slot
	  1908      "01011001" // 	                                                                                                                        MOV r22, p7 /* MW 4 */
	  1909      "01110110" // /* MW 3 */
	  1910      "10001110" // /* MW 2 */
	  1911      "00011101" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1912      "00000001" // 	NOPX /* MW 2 */
	  1913      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1914      "00000001" // 	NOPX /* MW 2 */
	  1915      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1916      "00000001" // 	NOPX /* MW 2 */
	  1917      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1918      "00000001" // 	NOPX /* MW 2 */
	  1919      "00000000" // /* MW 1 */
.return_address
	  1920      "10011001" // 	                                                                                          NE r24, r23, r22 /* MW 4 */
	  1921      "01101000" // /* MW 3 */
	  1922      "11110001" // /* MW 2 */
	  1923      "00010101" // /* MW 1 */
	  1924      "10010101" // 	                                                                                          JNZ r24, #1888 /* MW 6 */
	  1925      "00000001" // /* MW 5 */
	  1926      "01000000" // /* MW 4 */
	  1927      "10110000" // /* MW 3 */
	  1928      "00000011" // /* MW 2 */
	  1929      "11000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1930      "00000001" // 	NOPX /* MW 2 */
	  1931      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1932      "00000001" // 	NOPX /* MW 2 */
	  1933      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1934      "00000001" // 	NOPX /* MW 2 */
	  1935      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1936      "00000001" // 	NOPX /* MW 2 */
	  1937      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1938      "00101111" // 	NOPA;                                                       NOPS;                                                       NOPM;                                   NOPV /* MW 14 */
	  1939      "01111000" // /* MW 13 */
	  1940      "00000000" // /* MW 12 */
	  1941      "00000000" // /* MW 11 */
	  1942      "00111000" // /* MW 10 */
	  1943      "00000000" // /* MW 9 */
	  1944      "01000000" // /* MW 8 */
	  1945      "00000000" // /* MW 7 */
	  1946      "00000000" // /* MW 6 */
	  1947      "00000000" // /* MW 5 */
	  1948      "00000000" // /* MW 4 */
	  1949      "00000000" // /* MW 3 */
	  1950      "00000000" // /* MW 2 */
	  1951      "00000000" // /* MW 1 */
.label TGT_F_fini_128
.loop_nesting 0
	  1952      "11011001" // 	LDA lr, [sp, #-16] /* MW 4 */
	  1953      "01000010" // /* MW 3 */
	  1954      "11111110" // /* MW 2 */
	  1955      "00000111" // /* MW 1 */
	  1956      "01011001" // 	LDA r23, [sp, #-12] /* MW 4 */
	  1957      "11101110" // /* MW 3 */
	  1958      "11111110" // /* MW 2 */
	  1959      "00000111" // /* MW 1 */
	  1960      "01011001" // 	LDA r22, [sp, #-4] /* MW 4 */
	  1961      "11101100" // /* MW 3 */
	  1962      "11111111" // /* MW 2 */
	  1963      "00000111" // /* MW 1 */
	  1964      "11011001" // 	LDA p7, [sp, #-8] /* MW 4 */
	  1965      "01111110" // /* MW 3 */
	  1966      "11111111" // /* MW 2 */
	  1967      "00000111" // /* MW 1 */
	  1968      "00000001" // 	NOPX /* MW 2 */
	  1969      "00000000" // /* MW 1 */
	  1970      "00000001" // 	NOPX /* MW 2 */
	  1971      "00000000" // /* MW 1 */
	  1972      "00000001" // 	NOPX /* MW 2 */
	  1973      "00000000" // /* MW 1 */
	  1974      "00011001" // 	                                                                                          RET lr /* MW 4 */
	  1975      "00011000" // /* MW 3 */
	  1976      "00000000" // /* MW 2 */
	  1977      "00010000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1978      "00000001" // 	NOPX /* MW 2 */
	  1979      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1980      "00000001" // 	NOPX /* MW 2 */
	  1981      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1982      "00000001" // 	NOPX /* MW 2 */
	  1983      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  1984      "00000001" // 	NOPX /* MW 2 */
	  1985      "00000000" // /* MW 1 */
.delay_slot
	  1986      "01111111" // 	NOPA;                         PADDB [sp], #-32;             NOPS;                         NOPX;                         NOPM /* MW 14 */
	  1987      "00000000" // /* MW 13 */
	  1988      "00000000" // /* MW 12 */
	  1989      "00000000" // /* MW 11 */
	  1990      "01110001" // /* MW 10 */
	  1991      "00000000" // /* MW 9 */
	  1992      "00000000" // /* MW 8 */
	  1993      "00000000" // /* MW 7 */
	  1994      "00000000" // /* MW 6 */
	  1995      "11100000" // /* MW 5 */
	  1996      "11111111" // /* MW 4 */
	  1997      "00000111" // /* MW 3 */
	  1998      "00000000" // /* MW 2 */
.label _fini__end
	  1999      "00000000" // /* MW 1 */
.label __cxa_finalize
.function_start
	  2000      "10111011" // 	MOVA r1, #8;                                                                              MOVXM p0, #472160 /* MW 10 */
	  2001      "00010000" // /* MW 9 */
	  2002      "00110000" // /* MW 8 */
	  2003      "00011010" // /* MW 7 */
	  2004      "11001100" // /* MW 6 */
	  2005      "00000001" // /* MW 5 */
	  2006      "00000000" // /* MW 4 */
	  2007      "01001000" // /* MW 3 */
	  2008      "00000000" // /* MW 2 */
	  2009      "00000001" // /* MW 1 */
	  2010      "10111011" // 	LDA r3, [p0, #0];                                                                         MOVXM r2, #472128 /* MW 10 */
	  2011      "00010000" // /* MW 9 */
	  2012      "00100000" // /* MW 8 */
	  2013      "01000010" // /* MW 7 */
	  2014      "11001100" // /* MW 6 */
	  2015      "00000001" // /* MW 5 */
	  2016      "00000000" // /* MW 4 */
	  2017      "11001000" // /* MW 3 */
	  2018      "01010000" // /* MW 2 */
	  2019      "00000000" // /* MW 1 */
	  2020      "00111011" // 	                                                            ST r1, [p0, #0];              MOVX r1, #-3;                 MOV r17, crSat /* MW 10 */
	  2021      "00101001" // /* MW 9 */
	  2022      "10011011" // /* MW 8 */
	  2023      "00100100" // /* MW 7 */
	  2024      "10101010" // /* MW 6 */
	  2025      "00010111" // /* MW 5 */
	  2026      "00111110" // /* MW 4 */
	  2027      "01000000" // /* MW 3 */
	  2028      "01010000" // /* MW 2 */
	  2029      "00000000" // /* MW 1 */
	  2030      "01011001" // 	                                                                                                                        MOV r16, crRnd /* MW 4 */
	  2031      "00110110" // /* MW 3 */
	  2032      "00000110" // /* MW 2 */
	  2033      "00011100" // /* MW 1 */
	  2034      "01011001" // 	                                                                                                                        MOV r18, lr /* MW 4 */
	  2035      "11110110" // /* MW 3 */
	  2036      "10000100" // /* MW 2 */
	  2037      "00011100" // /* MW 1 */
	  2038      "01010101" // 	                                                                                          MOVXM p6, #2064 /* MW 6 */
	  2039      "00100000" // /* MW 5 */
	  2040      "01110000" // /* MW 4 */
	  2041      "00001100" // /* MW 3 */
	  2042      "00000000" // /* MW 2 */
	  2043      "00000000" // /* MW 1 */
	  2044      "00000001" // 	NOPX /* MW 2 */
	  2045      "00000000" // /* MW 1 */
	  2046      "00000001" // 	NOPX /* MW 2 */
	  2047      "00000000" // /* MW 1 */
	  2048      "01111001" // 	                                                                                                                        ADD.NC r3, r3, #-8 /* MW 4 */
	  2049      "11110110" // /* MW 3 */
	  2050      "11000001" // /* MW 2 */
	  2051      "00011000" // /* MW 1 */
	  2052      "10011001" // 	                                                                                          ADD r2, r3, r2 /* MW 4 */
	  2053      "00100000" // /* MW 3 */
	  2054      "11000100" // /* MW 2 */
	  2055      "00010000" // /* MW 1 */
	  2056      "01000011" // 	                                                                                          ASHL r19, r3, r1;             MOV p7, r2 /* MW 8 */
	  2057      "00101000" // /* MW 7 */
	  2058      "10001011" // /* MW 6 */
	  2059      "10011000" // /* MW 5 */
	  2060      "11110111" // /* MW 4 */
	  2061      "00110000" // /* MW 3 */
	  2062      "00000111" // /* MW 2 */
	  2063      "00000000" // /* MW 1 */
.label TGT_F__cxa_finalize_64
.loop_nesting 1
	  2064      "11011001" // 	LDA p1, [p7], #4 /* MW 4 */
	  2065      "10001110" // /* MW 3 */
	  2066      "00000011" // /* MW 2 */
	  2067      "00000111" // /* MW 1 */
	  2068      "11011001" // 	LDA p0, [p7], #-12 /* MW 4 */
	  2069      "10000110" // /* MW 3 */
	  2070      "11111011" // /* MW 2 */
	  2071      "00000111" // /* MW 1 */
	  2072      "00000001" // 	NOPX /* MW 2 */
	  2073      "00000000" // /* MW 1 */
	  2074      "00000001" // 	NOPX /* MW 2 */
	  2075      "00000000" // /* MW 1 */
	  2076      "00000001" // 	NOPX /* MW 2 */
	  2077      "00000000" // /* MW 1 */
	  2078      "00000001" // 	NOPX /* MW 2 */
	  2079      "00000000" // /* MW 1 */
	  2080      "00000001" // 	NOPX /* MW 2 */
	  2081      "00000000" // /* MW 1 */
.no_stack_arguments
	  2082      "00011001" // 	                                                                                          JL p1 /* MW 4 */
	  2083      "01010100" // /* MW 3 */
	  2084      "00000000" // /* MW 2 */
	  2085      "00010000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  2086      "00000001" // 	NOPX /* MW 2 */
	  2087      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  2088      "00000001" // 	NOPX /* MW 2 */
	  2089      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  2090      "00000001" // 	NOPX /* MW 2 */
	  2091      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  2092      "00011001" // 	NOPA /* MW 4 */
	  2093      "00000000" // /* MW 3 */
	  2094      "00000000" // /* MW 2 */
	  2095      "00000000" // /* MW 1 */
.delay_slot
	  2096      "11000000" // 	NOPA;                         NOPB;                         NOPS;                         NOPX;                         MOV r20, r0;                            NOPV /* MW 16 */
	  2097      "00000011" // /* MW 15 */
	  2098      "00000000" // /* MW 14 */
	  2099      "00101000" // /* MW 13 */
	  2100      "00001011" // /* MW 12 */
	  2101      "10000000" // /* MW 11 */
	  2102      "00000010" // /* MW 10 */
	  2103      "00000000" // /* MW 9 */
	  2104      "00000000" // /* MW 8 */
	  2105      "00000000" // /* MW 7 */
	  2106      "00000000" // /* MW 6 */
	  2107      "00000000" // /* MW 5 */
	  2108      "00000000" // /* MW 4 */
	  2109      "00000000" // /* MW 3 */
	  2110      "00000000" // /* MW 2 */
	  2111      "00000000" // /* MW 1 */
.return_address
	  2112      "00011001" // 	                                                                                          JNZD r19, r19, p6 /* MW 4 */
	  2113      "10001100" // /* MW 3 */
	  2114      "11100111" // /* MW 2 */
	  2115      "00010100" // /* MW 1 */
.delay_slot
	  2116      "01011001" // 	                                                                                                                        MOV r0, r20 /* MW 4 */
	  2117      "00010110" // /* MW 3 */
	  2118      "00001010" // /* MW 2 */
	  2119      "00011000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  2120      "00000001" // 	NOPX /* MW 2 */
	  2121      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  2122      "00000001" // 	NOPX /* MW 2 */
	  2123      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  2124      "00000001" // 	NOPX /* MW 2 */
	  2125      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  2126      "00000001" // 	NOPX /* MW 2 */
	  2127      "00000000" // /* MW 1 */
.loop_nesting 0
	  2128      "01011001" // 	                                                                                                                        MOV lr, r18 /* MW 4 */
	  2129      "00010110" // /* MW 3 */
	  2130      "01111001" // /* MW 2 */
	  2131      "00011010" // /* MW 1 */
	  2132      "00011001" // 	                                                                                          RET lr /* MW 4 */
	  2133      "00011000" // /* MW 3 */
	  2134      "00000000" // /* MW 2 */
	  2135      "00010000" // /* MW 1 */
.delay_slot
	  2136      "01000011" // 	                                                                                          MOVX crSat, r17;              MOV crRnd, r16 /* MW 8 */
	  2137      "00101000" // /* MW 7 */
	  2138      "00001011" // /* MW 6 */
	  2139      "10001100" // /* MW 5 */
	  2140      "00000001" // /* MW 4 */
	  2141      "00100001" // /* MW 3 */
	  2142      "00100011" // /* MW 2 */
	  2143      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  2144      "00000001" // 	NOPX /* MW 2 */
	  2145      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  2146      "00000001" // 	NOPX /* MW 2 */
	  2147      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  2148      "00000001" // 	NOPX /* MW 2 */
	  2149      "00000000" // /* MW 1 */
.delay_slot
.swstall delay_slot
	  2150      "10111011" // 	NOPA;                         NOPB;                                                                                     NOPM /* MW 10 */
	  2151      "10001110" // /* MW 9 */
	  2152      "00000011" // /* MW 8 */
	  2153      "00000000" // /* MW 7 */
	  2154      "00000000" // /* MW 6 */
	  2155      "00000000" // /* MW 5 */
	  2156      "00000000" // /* MW 4 */
	  2157      "00000000" // /* MW 3 */
	  2158      "00000000" // /* MW 2 */
.label __cxa_finalize__end
	  2159      "00000000" // /* MW 1 */
